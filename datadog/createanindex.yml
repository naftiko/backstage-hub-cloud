apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: Create An Index
  description: >-
    Creates a new index. Returns the Index object passed in the request body
    when the request is successful.
  tags: []
  links:
    - title: Link
      icon: code
      url: https://example.com
spec:
  type: openapi
  lifecycle: experimental
  owner: team-c
  definition: |
    openapi: 3.1.0
    info:
      title: Create An Index
      description: >-
        Creates a new index. Returns the Index object passed in the request body
        when the request is successful.
    paths:
      /api/v1/logs/config/indexes:
        post:
          summary: Create An Index
          description: >-
            Creates a new index. Returns the Index object passed in the request body
            when the request is successful.
          operationId: createanindex
          requestBody:
            content:
              application/json:
                schema:
                  type: object
                  example:
                    name: main
                    filter:
                      query: source:python
                    daily_limit: 300000000
                    daily_limit_reset:
                      reset_time: '14:00'
                      reset_utc_offset: '+02:00'
                    daily_limit_warning_threshold_percentage: 70
                    exclusion_filters:
                      - name: payment
                        filter:
                          sample_rate: 1
                          query: '*'
                        is_enabled: true
                      - name: payment
                        filter:
                          sample_rate: 1
                          query: '*'
                        is_enabled: true
                    is_rate_limited: false
                    num_retention_days: 15
          responses:
            '429':
              description: Too Many Requests
              headers:
                Content-Type:
                  schema:
                    type: string
                    example: application/json
              content:
                application/json:
                  schema:
                    type: object
                  example:
                    errors:
                      - Bad Request
                      - Bad Request
