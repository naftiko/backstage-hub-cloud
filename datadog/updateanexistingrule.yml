apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: Update An Existing Rule
  description: >-
    Update an existing rule. When updating `cases`, `queries` or `options`, the
    whole fieldmust be included. For example, when modifying a query all queries
    must be included.Default rules can only be updated to be enabled, to change
    notifications, or to updatethe tags (default tags cannot be removed).
  tags: []
  links:
    - title: Link
      icon: code
      url: https://example.com
spec:
  type: openapi
  lifecycle: experimental
  owner: team-c
  definition: |
    openapi: 3.1.0
    info:
      title: Update An Existing Rule
      description: >-
        Update an existing rule. When updating `cases`, `queries` or `options`, the
        whole fieldmust be included. For example, when modifying a query all queries
        must be included.Default rules can only be updated to be enabled, to change
        notifications, or to updatethe tags (default tags cannot be removed).
    paths:
      /api/v2/security_monitoring/rules/{rule_id}:
        put:
          summary: Update An Existing Rule
          description: >-
            Update an existing rule. When updating `cases`, `queries` or `options`,
            the whole fieldmust be included. For example, when modifying a query all
            queries must be included.Default rules can only be updated to be
            enabled, to change notifications, or to updatethe tags (default tags
            cannot be removed).
          operationId: updateanexistingrule
          requestBody:
            content:
              application/json:
                schema:
                  type: object
                  example:
                    cases:
                      - condition: ad
                        name: aliquip velit aute
                        notifications:
                          - cupidatat eu aute
                          - sint ex
                        status: critical
                      - condition: do
                        name: amet occaecat commodo laboris veniam
                        notifications:
                          - sit proident ex sunt
                          - aliqua amet
                        status: critical
                    complianceSignalOptions:
                      defaultActivationStatus: true
                      defaultGroupByFields:
                        - proident sit
                        - enim pariatur ci
                      userActivationStatus: false
                      userGroupByFields:
                        - ipsum voluptate Ut tempor sunt
                        - culpa officia dolor
                    filters:
                      - action: suppress
                        query: Ut ea
                      - action: suppress
                        query: ullamco exercitation
                    hasExtendedTitle: true
                    isEnabled: true
                    message: laborum voluptate dolore pariatur
                    name: ea sunt
                    options:
                      complianceRuleOptions:
                        complexRule: false
                        regoRule:
                          policy: |
                            package datadog

                            import data.datadog.output as dd_output
                            import future.keywords.contains
                            import future.keywords.if
                            import future.keywords.in

                            eval(resource) = "skip" if {
                              # Logic that evaluates to true if the resource should be skipped
                              true
                            } else = "pass" {
                              # Logic that evaluates to true if the resource is compliant
                              true
                            } else = "fail" {
                              # Logic that evaluates to true if the resource is not compliant
                              true
                            }

                            # This part remains unchanged for all rules
                            results contains result if {
                              some resource in input.resources[input.main_resource_type]
                              result := dd_output.format(resource, eval(resource))
                            }
                          resourceTypes:
                            - gcp_iam_service_account
                            - gcp_iam_policy
                        resourceType: aws_acm
                      decreaseCriticalityBasedOnEnv: false
                      detectionMethod: new_value
                      evaluationWindow: 3600
                      hardcodedEvaluatorType: log4shell
                      impossibleTravelOptions:
                        baselineUserLocations: true
                      keepAlive: 60
                      maxSignalDuration: 43200
                      newValueOptions:
                        forgetAfter: 7
                        learningDuration: 0
                        learningMethod: duration
                        learningThreshold: 0
                      thirdPartyRuleOptions:
                        defaultNotifications:
                          - anim in
                          - incididunt laborum sin
                        defaultStatus: critical
                        rootQueries:
                          - groupByFields:
                              - velit
                              - ad anim
                            query: source:cloudtrail
                          - groupByFields:
                              - ex dolore
                              - 'cupidatat proident '
                            query: source:cloudtrail
                        signalTitleTemplate: irure velit minim ullamco
                    queries:
                      - aggregation: new_value
                        distinctFields:
                          - velit exercit
                          - Excepteur laboris voluptate
                        groupByFields:
                          - velit commodo consequat
                          - sunt elit nostrud sit
                        hasOptionalGroupByFields: false
                        metric: nisi cillum
                        metrics:
                          - tempor e
                          - dolor exercitation
                        name: deserunt ea est ut
                        query: a > 3
                      - aggregation: count
                        distinctFields:
                          - consequat commodo sit elit
                          - tempor id
                        groupByFields:
                          - do
                          - non mollit in
                        hasOptionalGroupByFields: false
                        metric: venia
                        metrics:
                          - cupidatat magna nulla anim dolor
                          - laboris esse sint Lorem quis
                        name: dolor
                        query: a > 3
                    tags:
                      - consequat
                      - et consequat enim ea
                    version: 1
          responses:
            '429':
              description: Too Many Requests
              headers:
                Content-Type:
                  schema:
                    type: string
                    example: application/json
              content:
                application/json:
                  schema:
                    type: object
                  example:
                    errors:
                      - Bad Request
                      - Bad Request
