apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: Create A Security Filter
  description: >-
    Create a security filter.See the [security filter
    guide](https://docs.datadoghq.com/security_platform/guide/how-to-setup-security-filters-using-security-monitoring-api/)for
    more examples.
  tags: []
  links:
    - title: Link
      icon: code
      url: https://example.com
spec:
  type: openapi
  lifecycle: experimental
  owner: team-c
  definition: |
    openapi: 3.1.0
    info:
      title: Create A Security Filter
      description: >-
        Create a security filter.See the [security filter
        guide](https://docs.datadoghq.com/security_platform/guide/how-to-setup-security-filters-using-security-monitoring-api/)for
        more examples.
    paths:
      /api/v2/security_monitoring/configuration/security_filters:
        post:
          summary: Create A Security Filter
          description: >-
            Create a security filter.See the [security filter
            guide](https://docs.datadoghq.com/security_platform/guide/how-to-setup-security-filters-using-security-monitoring-api/)for
            more examples.
          operationId: createasecurityfilter
          requestBody:
            content:
              application/json:
                schema:
                  type: object
                  example:
                    data:
                      type: security_filters
                      attributes:
                        name: Custom security filter
                        query: service:api
                        exclusion_filters:
                          - name: Exclude staging
                            query: source:staging
                        filtered_data_type: logs
                        is_enabled: true
          responses:
            '429':
              description: Too Many Requests
              headers:
                Content-Type:
                  schema:
                    type: string
                    example: application/json
              content:
                application/json:
                  schema:
                    type: object
                  example:
                    errors:
                      - Bad Request
                      - Bad Request
