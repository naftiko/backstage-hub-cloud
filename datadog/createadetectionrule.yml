apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: Create A Detection Rule
  description: Create a detection rule.
  tags: []
  links:
    - title: Link
      icon: code
      url: https://example.com
spec:
  type: openapi
  lifecycle: experimental
  owner: team-c
  definition: |
    openapi: 3.1.0
    info:
      title: Create A Detection Rule
      description: Create a detection rule.
    paths:
      /api/v2/security_monitoring/rules:
        post:
          summary: Create A Detection Rule
          description: Create a detection rule.
          operationId: createadetectionrule
          requestBody:
            content:
              application/json:
                schema:
                  type: object
                  example:
                    name: My security monitoring rule.
                    isEnabled: true
                    queries: []
                    options:
                      complianceRuleOptions:
                        complexRule: false
                        regoRule:
                          policy: |
                            package datadog

                            import data.datadog.output as dd_output
                            import future.keywords.contains
                            import future.keywords.if
                            import future.keywords.in

                            eval(resource) = "skip" if {
                              # Logic that evaluates to true if the resource should be skipped
                              true
                            } else = "pass" {
                              # Logic that evaluates to true if the resource is compliant
                              true
                            } else = "fail" {
                              # Logic that evaluates to true if the resource is not compliant
                              true
                            }

                            # This part remains unchanged for all rules
                            results contains result if {
                              some resource in input.resources[input.main_resource_type]
                              result := dd_output.format(resource, eval(resource))
                            }
                          resourceTypes:
                            - gcp_iam_service_account
                            - gcp_iam_policy
                        resourceType: aws_acm
                        qui__d: {}
                        in6de: {}
                        dolor8a: {}
                        esse_b2: {}
                      decreaseCriticalityBasedOnEnv: false
                      detectionMethod: threshold
                      evaluationWindow: 900
                      hardcodedEvaluatorType: log4shell
                      impossibleTravelOptions:
                        baselineUserLocations: true
                      keepAlive: 300
                      maxSignalDuration: 3600
                      newValueOptions:
                        forgetAfter: 7
                        learningDuration: 0
                        learningMethod: duration
                        learningThreshold: 0
                      thirdPartyRuleOptions:
                        defaultNotifications:
                          - Excepteur consectetur qui
                          - irure laborum
                        defaultStatus: critical
                        rootQueries:
                          - groupByFields:
                              - pariatur amet veniam sed
                              - consequat ex ullamc
                            query: source:cloudtrail
                          - groupByFields:
                              - ex cillum sit deserunt
                              - nostrud ut magna
                            query: source:cloudtrail
                        signalTitleTemplate: nisi in sint
                    cases: []
                    message: ''
                    filters:
                      - action: suppress
                        query: elit
                      - action: suppress
                        query: reprehenderit ut qui
                    hasExtendedTitle: true
                    tags:
                      - env:prod
                      - team:security
                    type: log_detection
          responses:
            '429':
              description: Too Many Requests
              headers:
                Content-Type:
                  schema:
                    type: string
                    example: application/json
              content:
                application/json:
                  schema:
                    type: object
                  example:
                    errors:
                      - Bad Request
                      - Bad Request
