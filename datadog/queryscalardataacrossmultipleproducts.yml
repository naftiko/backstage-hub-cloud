apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: Query Scalar Data Across Multiple Products
  description: >-
    Query scalar values (as seen on Query Value, Table, and Toplist
    widgets).Multiple data sources are supported with the ability toprocess the
    data using formulas and functions.
  tags: []
  links:
    - title: Link
      icon: code
      url: https://example.com
spec:
  type: openapi
  lifecycle: experimental
  owner: team-c
  definition: |
    openapi: 3.1.0
    info:
      title: Query Scalar Data Across Multiple Products
      description: >-
        Query scalar values (as seen on Query Value, Table, and Toplist
        widgets).Multiple data sources are supported with the ability toprocess the
        data using formulas and functions.
    paths:
      /api/v2/query/scalar:
        post:
          summary: Query Scalar Data Across Multiple Products
          description: >-
            Query scalar values (as seen on Query Value, Table, and Toplist
            widgets).Multiple data sources are supported with the ability toprocess
            the data using formulas and functions.
          operationId: queryscalardataacrossmultipleproducts
          requestBody:
            content:
              application/json:
                schema:
                  type: object
                  example:
                    data:
                      type: scalar_request
                      attributes:
                        to: 1568923200000
                        from: 1568899800000
                        queries:
                          - data_source: metrics
                            query: avg:system.cpu.user{*} by {env}
                            aggregator: avg
                            name: ipsum nostrud sint officia ut
                          - data_source: metrics
                            query: avg:system.cpu.user{*} by {env}
                            aggregator: avg
                            name: sed nisi pariatur nostrud
                        formulas:
                          - formula: a+b
                            limit:
                              count: 10
                              order: desc
                          - formula: a+b
                            limit:
                              count: 10
                              order: desc
          responses:
            '429':
              description: Too Many Requests
              headers:
                Content-Type:
                  schema:
                    type: string
                    example: application/json
              content:
                application/json:
                  schema:
                    type: object
                  example:
                    errors:
                      - Bad Request
                      - Bad Request
