apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: Create A Blog Post
  description: >-
    Creates a *Blog Post*.**Required Fields***   `title`*   `body`**Notes***
    When including `published_date` in a request, supply it as a flat date
    string (not an object) in valid RFC 2822. The following example request
    includes a `published_date` in RFC 2822 format.* Blog posts default to draft
    status. To publish blog posts to the storefront, set the `is_published`
    property to `true`.* If a custom URL is not provided, the post’s URL will be
    generated based on the value of `title`.
  tags: []
  links:
    - title: Link
      icon: code
      url: https://example.com
spec:
  type: openapi
  lifecycle: experimental
  owner: team-c
  definition: |
    openapi: 3.1.0
    info:
      title: Create A Blog Post
      description: >-
        Creates a *Blog Post*.**Required Fields***   `title`*   `body`**Notes***
        When including `published_date` in a request, supply it as a flat date
        string (not an object) in valid RFC 2822. The following example request
        includes a `published_date` in RFC 2822 format.* Blog posts default to draft
        status. To publish blog posts to the storefront, set the `is_published`
        property to `true`.* If a custom URL is not provided, the post’s URL will be
        generated based on the value of `title`.
    paths:
      /blog/posts:
        post:
          summary: Create A Blog Post
          description: >-
            Creates a *Blog Post*.**Required Fields***   `title`*   `body`**Notes***
            When including `published_date` in a request, supply it as a flat date
            string (not an object) in valid RFC 2822. The following example request
            includes a `published_date` in RFC 2822 format.* Blog posts default to
            draft status. To publish blog posts to the storefront, set the
            `is_published` property to `true`.* If a custom URL is not provided, the
            post’s URL will be generated based on the value of `title`.
          operationId: createBlogPosts
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/blogPost_Base_Post'
          responses:
            '207':
              description: >-
                Multiple operations have taken place and the status for each
                operation can be viewed in the body of the response. Typically
                indicates that a partial failure has occured, such as when a `POST`
                or `PUT` request is successful, but saving the URL has failed.
              content:
                application/json:
                  schema:
                    type: object
