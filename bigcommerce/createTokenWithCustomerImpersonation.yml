apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: Create A Token
  description: >-
    Returns a Storefront API token that allows your application to impersonate
    customers when making GraphQL `POST` requests. For more information on how
    to use the returned token, see [customer impersonation
    tokens](/docs/rest-authentication/tokens/customer-impersonation-token#create-a-token).**Required
    Scopes*** `Manage` `Storefront API Customer Impersonation Tokens`
  tags: []
  links:
    - title: Link
      icon: code
      url: https://example.com
spec:
  type: openapi
  lifecycle: experimental
  owner: team-c
  definition: |
    openapi: 3.1.0
    info:
      title: Create A Token
      description: >-
        Returns a Storefront API token that allows your application to impersonate
        customers when making GraphQL `POST` requests. For more information on how
        to use the returned token, see [customer impersonation
        tokens](/docs/rest-authentication/tokens/customer-impersonation-token#create-a-token).**Required
        Scopes*** `Manage` `Storefront API Customer Impersonation Tokens`
    paths:
      /storefront/api-token-customer-impersonation:
        post:
          summary: Create A Token
          description: >-
            Returns a Storefront API token that allows your application to
            impersonate customers when making GraphQL `POST` requests. For more
            information on how to use the returned token, see [customer
            impersonation
            tokens](/docs/rest-authentication/tokens/customer-impersonation-token#create-a-token).**Required
            Scopes*** `Manage` `Storefront API Customer Impersonation Tokens`
          operationId: createTokenWithCustomerImpersonation
          requestBody:
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/TokenPostImpersonation'
          responses:
            '422':
              description: Invalid JSON request body - missing or invalid data
              content: {}
