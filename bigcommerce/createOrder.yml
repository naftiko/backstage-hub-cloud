apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: Create An Order
  description: >-
    Creates an order.## Usage notes* Orders created will be set to incomplete
    order status.* You can create as many orders from the same order (cart) as
    you want.* Order duplication copies the existing order, assigns a new order
    number, and sets the new order status to `incomplete`.* Once the order is
    paid, the cart is deleted.* Cart deletion occurs if you are using
    BigCommerce to accept payments on orders.
  tags: []
  links:
    - title: Link
      icon: code
      url: https://example.com
spec:
  type: openapi
  lifecycle: experimental
  owner: team-c
  definition: |
    openapi: 3.1.0
    info:
      title: Create An Order
      description: >-
        Creates an order.## Usage notes* Orders created will be set to incomplete
        order status.* You can create as many orders from the same order (cart) as
        you want.* Order duplication copies the existing order, assigns a new order
        number, and sets the new order status to `incomplete`.* Once the order is
        paid, the cart is deleted.* Cart deletion occurs if you are using
        BigCommerce to accept payments on orders.
    paths:
      /checkouts/{checkoutId}/orders:
        post:
          summary: Create An Order
          description: >-
            Creates an order.## Usage notes* Orders created will be set to
            incomplete order status.* You can create as many orders from the same
            order (cart) as you want.* Order duplication copies the existing order,
            assigns a new order number, and sets the new order status to
            `incomplete`.* Once the order is paid, the cart is deleted.* Cart
            deletion occurs if you are using BigCommerce to accept payments on
            orders.
          operationId: createOrder
          responses:
            '200':
              description: ''
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Order'
                      meta:
                        $ref: '#/components/schemas/MetaOpen'
                  example:
                    data:
                      id: 75
                    meta: {}
