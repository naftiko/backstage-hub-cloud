apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: Update A Product Variant Option Value
  description: Updates a *Variant Option Value*.**Read-Only Fields*** id
  tags: []
  links:
    - title: Link
      icon: code
      url: https://example.com
spec:
  type: openapi
  lifecycle: experimental
  owner: team-c
  definition: |
    openapi: 3.1.0
    info:
      title: Update A Product Variant Option Value
      description: Updates a *Variant Option Value*.**Read-Only Fields*** id
    paths:
      /catalog/products/{product_id}/options/{option_id}/values/{value_id}:
        put:
          summary: Update A Product Variant Option Value
          description: Updates a *Variant Option Value*.**Read-Only Fields*** id
          operationId: updateProductVariantOptionValue
          requestBody:
            description: |
              A BigCommerce `OptionValue` object.
            required: true
            content:
              application/json:
                schema:
                  title: Option Value Put
                  description: The model for a PUT to update option values on a product.
                  allOf:
                    - title: Option Value Base
                      required:
                        - label
                        - sort_order
                      type: object
                      properties:
                        is_default:
                          type: boolean
                          description: >
                            The flag for preselecting a value as the default on the
                            storefront. This field is not supported for swatch
                            options/modifiers.
                          example: false
                        label:
                          type: string
                          description: >
                            The text display identifying the value on the
                            storefront. Required in a /POST.
                          example: Green
                          x-required:
                            - post
                        sort_order:
                          maximum: 2147483647
                          minimum: -2147483648
                          type: integer
                          description: >
                            The order in which the value will be displayed on the
                            product page. Required in a /POST.
                          example: 0
                          x-required:
                            - post
                        value_data:
                          type: object
                          properties: {}
                          description: >
                            Extra data describing the value, based on the type of
                            option or modifier with which the value is associated.
                            The `swatch` type option can accept an array of
                            `colors`, with up to three hexidecimal color keys; or an
                            `image_url`, which is a full image URL path including
                            protocol. The `product list` type option requires a
                            `product_id`. The `checkbox` type option requires a
                            boolean flag, called `checked_value`, to determine which
                            value is considered to be the checked state.
                      description: Common Option Value properties.
                    - type: object
                      properties:
                        id:
                          type: integer
                          description: >
                            The unique numeric ID of the value; increments
                            sequentially.
                          x-required:
                            - put
          responses:
            '422':
              description: >
                The `OptionValue` was not valid. This is the result of missing
                required fields, or of invalid data. See the response for more
                details.
              content:
                application/json:
                  schema:
                    title: Error Response
                    type: object
                    properties:
                      errors:
                        title: Detailed Errors
                        type: object
                        properties: {}
                        additionalProperties: true
                      instance:
                        type: string
                      status:
                        type: integer
                        description: |
                          The HTTP status code.
                      title:
                        type: string
                        description: |
                          The error title describing the particular error.
                      type:
                        type: string
