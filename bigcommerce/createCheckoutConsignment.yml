apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: Create A Consignment
  description: >-
    Adds a new *Consignment* to *Checkout*.Perform the following two steps to
    define the fulfillment of the items in the cart.  ### For **shipping**
    consignments:    1. Add a new Consignment to Checkout.        * Send a
    `POST` request to `/consignments` with each shipping address, line item IDs,
    and quantities. Each address can have its own line item IDs.        *
    Provide a full valid customer address before placing the order. If provided,
    the order placement will succeed.         * As part of the request URL make
    sure to add `include=consignments.availableShippingOptions` to return the
    available shipping options based on the items, the address, and the shipping
    location. This will return `availableShippingOptions` in the response.     
    * Required Fields:        * `shipping_address` (deprecated) or
    `address`        * `lineItems`    2. Update the Consignment with Shipping
    Options using the [REST Storefront
    API](/checkouts/checkout-consignments#update-a-consignment), the [REST
    Management
    API](/docs/rest-management/checkouts/checkout-consignments#update-checkout-consignment)
    or the [GraphQL Storefront
    API](/docs/storefront/cart-checkout/guide/graphql-storefront).           
    ### For **pickup** consignments:    1. Create a new consignment
    object.       - Send a `POST` request to `/consignments` with line item IDs
    and quantities.      - Provide a `pickupMethodId`. This is the `id` of the
    Pickup Method provided in the response body of the Storefront Pickup Options
    API.      - Required Fields:          * `pickupOption`          *
    `lineItems`To learn more about creating a Checkout Consignment, see the
    [Carts and Checkouts
    Tutorial](/docs/storefront/cart-checkout/guide/rest-storefront).> ####
    Notes> * Substitute your storefront domain for `yourstore.example.com`. > *
    The Send a Test Request feature is not currently supported for this
    endpoint.  > * Please note that this API endpoint is not concurrent safe,
    meaning multiple simultaneous requests could result in unexpected and
    inconsistent results.
  tags: []
  links:
    - title: Link
      icon: code
      url: https://example.com
spec:
  type: openapi
  lifecycle: experimental
  owner: team-c
  definition: |
    openapi: 3.1.0
    info:
      title: Create A Consignment
      description: >-
        Adds a new *Consignment* to *Checkout*.Perform the following two steps to
        define the fulfillment of the items in the cart.  ### For **shipping**
        consignments:    1. Add a new Consignment to Checkout.        * Send a
        `POST` request to `/consignments` with each shipping address, line item IDs,
        and quantities. Each address can have its own line item IDs.        *
        Provide a full valid customer address before placing the order. If provided,
        the order placement will succeed.         * As part of the request URL make
        sure to add `include=consignments.availableShippingOptions` to return the
        available shipping options based on the items, the address, and the shipping
        location. This will return `availableShippingOptions` in the response.     
        * Required Fields:        * `shipping_address` (deprecated) or
        `address`        * `lineItems`    2. Update the Consignment with Shipping
        Options using the [REST Storefront
        API](/checkouts/checkout-consignments#update-a-consignment), the [REST
        Management
        API](/docs/rest-management/checkouts/checkout-consignments#update-checkout-consignment)
        or the [GraphQL Storefront
        API](/docs/storefront/cart-checkout/guide/graphql-storefront).           
        ### For **pickup** consignments:    1. Create a new consignment
        object.       - Send a `POST` request to `/consignments` with line item IDs
        and quantities.      - Provide a `pickupMethodId`. This is the `id` of the
        Pickup Method provided in the response body of the Storefront Pickup Options
        API.      - Required Fields:          * `pickupOption`          *
        `lineItems`To learn more about creating a Checkout Consignment, see the
        [Carts and Checkouts
        Tutorial](/docs/storefront/cart-checkout/guide/rest-storefront).> ####
        Notes> * Substitute your storefront domain for `yourstore.example.com`. > *
        The Send a Test Request feature is not currently supported for this
        endpoint.  > * Please note that this API endpoint is not concurrent safe,
        meaning multiple simultaneous requests could result in unexpected and
        inconsistent results.
    paths:
      /checkouts/{checkoutId}/consignments:
        post:
          summary: Create A Consignment
          description: >-
            Adds a new *Consignment* to *Checkout*.Perform the following two steps
            to define the fulfillment of the items in the cart.  ### For
            **shipping** consignments:    1. Add a new Consignment to
            Checkout.        * Send a `POST` request to `/consignments` with each
            shipping address, line item IDs, and quantities. Each address can have
            its own line item IDs.        * Provide a full valid customer address
            before placing the order. If provided, the order placement will
            succeed.         * As part of the request URL make sure to add
            `include=consignments.availableShippingOptions` to return the available
            shipping options based on the items, the address, and the shipping
            location. This will return `availableShippingOptions` in the
            response.      * Required Fields:        * `shipping_address`
            (deprecated) or `address`        * `lineItems`    2. Update the
            Consignment with Shipping Options using the [REST Storefront
            API](/checkouts/checkout-consignments#update-a-consignment), the [REST
            Management
            API](/docs/rest-management/checkouts/checkout-consignments#update-checkout-consignment)
            or the [GraphQL Storefront
            API](/docs/storefront/cart-checkout/guide/graphql-storefront).           
            ### For **pickup** consignments:    1. Create a new consignment
            object.       - Send a `POST` request to `/consignments` with line item
            IDs and quantities.      - Provide a `pickupMethodId`. This is the `id`
            of the Pickup Method provided in the response body of the Storefront
            Pickup Options API.      - Required Fields:          *
            `pickupOption`          * `lineItems`To learn more about creating a
            Checkout Consignment, see the [Carts and Checkouts
            Tutorial](/docs/storefront/cart-checkout/guide/rest-storefront).> ####
            Notes> * Substitute your storefront domain for `yourstore.example.com`.
            > * The Send a Test Request feature is not currently supported for this
            endpoint.  > * Please note that this API endpoint is not concurrent
            safe, meaning multiple simultaneous requests could result in unexpected
            and inconsistent results.
          operationId: createCheckoutConsignment
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/CreateConsignmentRequest'
          responses:
            '200':
              description: ''
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/checkout_Full'
                  example:
                    id: 29eb9b44-8f33-4e4a-9429-d0e8e24641ed
                    cart:
                      id: 29eb9b44-8f33-4e4a-9429-d0e8e24641ed
                      customerId: 18
                      email: dwaynecole@testing.com
                      currency:
                        name: US Dollars
                        code: USD
                        symbol: $
                        decimalPlaces: 2
                      isTaxIncluded: true
                      baseAmount: 7.95
                      discountAmount: 0
                      cartAmount: 7.95
                      coupons: []
                      discounts:
                        - id: 243c9ca2-22b4-417a-8b09-b3fc05778b52
                          discountedAmount: 0
                      lineItems:
                        physicalItems:
                          - id: 243c9ca2-22b4-417a-8b09-b3fc05778b52
                            parentId: {}
                            variantId: 345
                            productId: 174
                            sku: ''
                            name: 1L Le Parfait Jar
                            url: https://{store_domain}/all/1l-le-parfait-jar/
                            quantity: 1
                            brand: OFS
                            isTaxable: true
                            imageUrl: >-
                              https://cdn11.bigcommerce.com/s-{store_hash}/products/174/images/425/leparfaitmedium3_1024x1024_1024x1024__37756__81924.1534344526.330.500.jpg?c=2
                            discounts: []
                            discountAmount: 0
                            couponAmount: 0
                            originalPrice: 7.95
                            listPrice: 7.95
                            salePrice: 7.95
                            extendedListPrice: 7.95
                            extendedSalePrice: 7.95
                            isShippingRequired: true
                            giftWrapping: {}
                            addedByPromotion: false
                        digitalItems: []
                        giftCertificates: []
                        customItems: []
                      createdTime: '2019-01-10T17:18:00+00:00'
                      updatedTime: '2019-01-10T17:19:47+00:00'
                    billingAddress:
                      id: 5c377ead301c2
                      firstName: Dwayne
                      lastName: Cole
                      email: dwaynecole@testing.com
                      company: ''
                      address1: Mauna Kea Access Rd
                      address2: ''
                      city: Hilo
                      stateOrProvince: Hawaii
                      stateOrProvinceCode: HI
                      country: United States
                      countryCode: US
                      postalCode: '96720'
                      phone: '8081234567'
                      customFields: []
                    consignments:
                      - id: 5c377ead30ac1
                        shippingCost: 8
                        handlingCost: 0
                        couponDiscounts: []
                        discounts: []
                        lineItemIds:
                          - 243c9ca2-22b4-417a-8b09-b3fc05778b52
                        selectedShippingOption:
                          id: d09e05c0-3788-44df-a1bb-b6d3afdf6841
                          type: shipping_byweight
                          description: Ship by Weight
                          imageUrl: ''
                          cost: 8
                          transitTime: ''
                        address:
                          firstName: Dwayne
                          lastName: Cole
                          email: dwaynecole@example.com
                          company: ''
                          address1: Mauna Kea Access Rd
                          address2: ''
                          city: Hilo
                          stateOrProvince: Hawaii
                          stateOrProvinceCode: HI
                          country: United States
                          countryCode: US
                          postalCode: '96720'
                          phone: '8081234567'
                          customFields: []
                          shouldSaveAddress: true
                    orderId: null
                    shippingCostTotal: 8
                    shippingCostBeforeDiscount: 8
                    handlingCostTotal: 0
                    taxTotal: 1.22
                    coupons: []
                    taxes:
                      - name: Tax
                        amount: 1.22
                    subtotal: 7.95
                    grandTotal: 15.95
                    giftCertificates: []
                    createdTime: '2019-01-10T17:18:00+00:00'
                    updatedTime: '2019-01-10T17:19:47+00:00'
                    customerMessage: ''
