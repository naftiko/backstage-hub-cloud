apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: Create A Price List
  description: Creates a *Price List*.**Required Fields*** name
  tags: []
  links:
    - title: Link
      icon: code
      url: https://example.com
spec:
  type: openapi
  lifecycle: experimental
  owner: team-c
  definition: |
    openapi: 3.1.0
    info:
      title: Create A Price List
      description: Creates a *Price List*.**Required Fields*** name
    paths:
      /pricelists:
        post:
          summary: Create A Price List
          description: Creates a *Price List*.**Required Fields*** name
          operationId: createPriceList
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  title: PriceList Post
                  description: 'Creates a Price List. '
                  allOf:
                    - title: PriceList Base
                      required:
                        - name
                      type: object
                      properties:
                        name:
                          type: string
                          description: >-
                            The unique name of the Price List. Required in a POST
                            request.
                          example: Wholesale
                          x-required:
                            - post
                        active:
                          type: boolean
                          description: >
                            Boolean value that specifies whether this `Price List`
                            and its prices are active or not. Defaults to `true`.
                          example: true
                      description: Specifies the Common Price List properties.
          responses:
            '422':
              description: >
                `Price List` is not valid. This is the result of missing required
                fields, or of invalid data. See the response for more details.
              content:
                application/json:
                  schema:
                    title: Error Response
                    type: object
                    properties:
                      errors:
                        title: Detailed Errors
                        type: object
                        properties: {}
                        additionalProperties: true
                      instance:
                        type: string
                      status:
                        type: integer
                        description: |
                          The HTTP status code.
                      title:
                        type: string
                        description: |
                          The error title describing the particular error.
                      type:
                        type: string
