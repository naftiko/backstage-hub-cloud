apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: Upsert Category Trees
  description: >-
    Upserts *Category Trees*. This single endpoint updates and creates category
    trees. If a tree object contains an ID, it is processed as an update
    operation using that ID. If you do not provide an ID, a new tree is created.
    The category tree `name` field is required to create trees, but is not
    required on the update.**Usage Notes*** `channel_id` is required to create a
    *Category Tree*. You can assign one `channel_id` to one category tree.
  tags: []
  links:
    - title: Link
      icon: code
      url: https://example.com
spec:
  type: openapi
  lifecycle: experimental
  owner: team-c
  definition: |
    openapi: 3.1.0
    info:
      title: Upsert Category Trees
      description: >-
        Upserts *Category Trees*. This single endpoint updates and creates category
        trees. If a tree object contains an ID, it is processed as an update
        operation using that ID. If you do not provide an ID, a new tree is created.
        The category tree `name` field is required to create trees, but is not
        required on the update.**Usage Notes*** `channel_id` is required to create a
        *Category Tree*. You can assign one `channel_id` to one category tree.
    paths:
      /catalog/trees:
        put:
          summary: Upsert Category Trees
          description: >-
            Upserts *Category Trees*. This single endpoint updates and creates
            category trees. If a tree object contains an ID, it is processed as an
            update operation using that ID. If you do not provide an ID, a new tree
            is created. The category tree `name` field is required to create trees,
            but is not required on the update.**Usage Notes*** `channel_id` is
            required to create a *Category Tree*. You can assign one `channel_id` to
            one category tree.
          operationId: upsertCategoryTrees
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/CategoryTreeListRequest'
          responses:
            '422':
              description: The Channel was not valid. See the response for more details.
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/beta4ErrorResponse'
                  example:
                    status: 0
                    title: string
                    type: string
                    instance: string
                    errors:
                      additionalProp1: string
                      additionalProp2: string
                      additionalProp3: string
