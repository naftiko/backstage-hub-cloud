apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: Get Invoices Upcoming
  description: >-
    At any time, you can preview the upcoming invoice for a customer. This will
    show you all the charges that are pending, including subscription renewal
    charges, invoice item charges, etc. It will also show you any discounts that
    are applicable to the invoice.Note that when you are viewing an upcoming
    invoice, you are simply viewing a preview – the invoice has not yet been
    created. As such, the upcoming invoice will not show up in invoice listing
    calls, and you cannot use the API to pay or edit the invoice. If you want to
    change the amount that your customer will be billed, you can add, remove, or
    update pending invoice items, or update the customer’s discount.You can
    preview the effects of updating a subscription, including a preview of what
    proration will take place. To ensure that the actual proration is calculated
    exactly the same as the previewed proration, you should pass a
    proration_date parameter when doing the actual subscription update. The
    value passed in should be the same as the subscription_proration_date
    returned on the upcoming invoice resource. The recommended way to get only
    the prorations being previewed is to consider only proration line items
    where period[start] is equal to the subscription_proration_date on the
    upcoming invoice resource.
  tags: []
  links:
    - title: Link
      icon: code
      url: https://example.com
spec:
  type: openapi
  lifecycle: experimental
  owner: team-c
  definition: |
    openapi: 3.1.0
    info:
      title: Get Invoices Upcoming
      description: >-
        At any time, you can preview the upcoming invoice for a customer. This will
        show you all the charges that are pending, including subscription renewal
        charges, invoice item charges, etc. It will also show you any discounts that
        are applicable to the invoice.Note that when you are viewing an upcoming
        invoice, you are simply viewing a preview – the invoice has not yet been
        created. As such, the upcoming invoice will not show up in invoice listing
        calls, and you cannot use the API to pay or edit the invoice. If you want to
        change the amount that your customer will be billed, you can add, remove, or
        update pending invoice items, or update the customer’s discount.You can
        preview the effects of updating a subscription, including a preview of what
        proration will take place. To ensure that the actual proration is calculated
        exactly the same as the previewed proration, you should pass a
        proration_date parameter when doing the actual subscription update. The
        value passed in should be the same as the subscription_proration_date
        returned on the upcoming invoice resource. The recommended way to get only
        the prorations being previewed is to consider only proration line items
        where period[start] is equal to the subscription_proration_date on the
        upcoming invoice resource.
    paths:
      /v1/invoices/upcoming:
        get:
          summary: Get Invoices Upcoming
          description: >-
            At any time, you can preview the upcoming invoice for a customer. This
            will show you all the charges that are pending, including subscription
            renewal charges, invoice item charges, etc. It will also show you any
            discounts that are applicable to the invoice.Note that when you are
            viewing an upcoming invoice, you are simply viewing a preview – the
            invoice has not yet been created. As such, the upcoming invoice will not
            show up in invoice listing calls, and you cannot use the API to pay or
            edit the invoice. If you want to change the amount that your customer
            will be billed, you can add, remove, or update pending invoice items, or
            update the customer’s discount.You can preview the effects of updating a
            subscription, including a preview of what proration will take place. To
            ensure that the actual proration is calculated exactly the same as the
            previewed proration, you should pass a proration_date parameter when
            doing the actual subscription update. The value passed in should be the
            same as the subscription_proration_date returned on the upcoming invoice
            resource. The recommended way to get only the prorations being previewed
            is to consider only proration line items where period[start] is equal to
            the subscription_proration_date on the upcoming invoice resource.
          operationId: getInvoicesUpcoming
          requestBody:
            content:
              application/x-www-form-urlencoded:
                encoding: {}
                schema:
                  additionalProperties: false
                  $ref: '#/components/schemas/GetInvoicesUpcomingRequest'
          responses:
            default:
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/error'
              description: Error response.
