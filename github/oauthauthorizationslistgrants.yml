apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: List Your Grants
  description: >-
    **Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth
    Authorizations
    API](https://docs.github.com/enterprise-server@3.9/rest/oauth-authorizations/oauth-authorizations/),
    which is used by integrations to create personal access tokens and OAuth
    tokens, and you must now create these tokens using our [web application
    flow](https://docs.github.com/enterprise-server@3.9/developers/apps/authorizing-oauth-apps#web-application-flow).
    The [OAuth Authorizations
    API](https://docs.github.com/enterprise-server@3.9/rest/oauth-authorizations/oauth-authorizations)
    will be removed on November, 13, 2020. For more information, including
    scheduled brownouts, see the [blog
    post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).You
    can use this API to list the set of OAuth applications that have been
    granted access to your account. Unlike the [list your
    authorizations](https://docs.github.com/enterprise-server@3.9/rest/oauth-authorizations/oauth-authorizations#list-your-authorizations)
    API, this API does not manage individual tokens. This API will return one
    entry for each OAuth application that has been granted access to your
    account, regardless of the number of tokens an application has generated for
    your user. The list of OAuth applications returned matches what is shown on
    [the application authorizations settings screen within
    GitHub](https://github.com/settings/applications#authorized). The `scopes`
    returned are the union of scopes authorized for the application. For
    example, if an application has one token with `repo` scope and another token
    with `user` scope, the grant will return `["repo", "user"]`.
  tags: []
  links:
    - title: Link
      icon: code
      url: https://example.com
spec:
  type: openapi
  lifecycle: experimental
  owner: team-c
  definition: |
    openapi: 3.1.0
    info:
      title: List Your Grants
      description: >-
        **Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth
        Authorizations
        API](https://docs.github.com/enterprise-server@3.9/rest/oauth-authorizations/oauth-authorizations/),
        which is used by integrations to create personal access tokens and OAuth
        tokens, and you must now create these tokens using our [web application
        flow](https://docs.github.com/enterprise-server@3.9/developers/apps/authorizing-oauth-apps#web-application-flow).
        The [OAuth Authorizations
        API](https://docs.github.com/enterprise-server@3.9/rest/oauth-authorizations/oauth-authorizations)
        will be removed on November, 13, 2020. For more information, including
        scheduled brownouts, see the [blog
        post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).You
        can use this API to list the set of OAuth applications that have been
        granted access to your account. Unlike the [list your
        authorizations](https://docs.github.com/enterprise-server@3.9/rest/oauth-authorizations/oauth-authorizations#list-your-authorizations)
        API, this API does not manage individual tokens. This API will return one
        entry for each OAuth application that has been granted access to your
        account, regardless of the number of tokens an application has generated for
        your user. The list of OAuth applications returned matches what is shown on
        [the application authorizations settings screen within
        GitHub](https://github.com/settings/applications#authorized). The `scopes`
        returned are the union of scopes authorized for the application. For
        example, if an application has one token with `repo` scope and another token
        with `user` scope, the grant will return `["repo", "user"]`.
    paths:
      /applications/grants:
        get:
          summary: List Your Grants
          description: >-
            **Deprecation Notice:** GitHub Enterprise Server will discontinue the
            [OAuth Authorizations
            API](https://docs.github.com/enterprise-server@3.9/rest/oauth-authorizations/oauth-authorizations/),
            which is used by integrations to create personal access tokens and OAuth
            tokens, and you must now create these tokens using our [web application
            flow](https://docs.github.com/enterprise-server@3.9/developers/apps/authorizing-oauth-apps#web-application-flow).
            The [OAuth Authorizations
            API](https://docs.github.com/enterprise-server@3.9/rest/oauth-authorizations/oauth-authorizations)
            will be removed on November, 13, 2020. For more information, including
            scheduled brownouts, see the [blog
            post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).You
            can use this API to list the set of OAuth applications that have been
            granted access to your account. Unlike the [list your
            authorizations](https://docs.github.com/enterprise-server@3.9/rest/oauth-authorizations/oauth-authorizations#list-your-authorizations)
            API, this API does not manage individual tokens. This API will return
            one entry for each OAuth application that has been granted access to
            your account, regardless of the number of tokens an application has
            generated for your user. The list of OAuth applications returned matches
            what is shown on [the application authorizations settings screen within
            GitHub](https://github.com/settings/applications#authorized). The
            `scopes` returned are the union of scopes authorized for the
            application. For example, if an application has one token with `repo`
            scope and another token with `user` scope, the grant will return
            `["repo", "user"]`.
          operationId: oauthauthorizationslistgrants
          responses:
            '404':
              $ref: '#/components/responses/not_found'
