apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: Create An Installation Access Token For An App
  description: >-
    Creates an installation access token that enables a GitHub App to make
    authenticated API requests for the app's installation on an organization or
    individual account. Installation tokens expire one hour from the time you
    create them. Using an expired token produces a status code of `401 -
    Unauthorized`, and requires creating a new installation token. By default
    the installation token has access to all repositories that the installation
    can access. Optionally, you can use the `repositories` or `repository_ids`
    body parameters to specify individual repositories that the installation
    access token can access. If you don't use `repositories` or `repository_ids`
    to grant access to specific repositories, the installation access token will
    have access to all repositories that the installation was granted access to.
    The installation access token cannot be granted access to repositories that
    the installation was not granted access to. Up to 500 repositories can be
    listed in this manner.Optionally, use the `permissions` body parameter to
    specify the permissions that the installation access token should have. If
    `permissions` is not specified, the installation access token will have all
    of the permissions that were granted to the app. The installation access
    token cannot be granted permissions that the app was not granted.When using
    the repository or permission parameters to reduce the access of the token,
    the complexity of the token is increased due to both the number of
    permissions in the request and the number of repositories the token will
    have access to. If the complexity is too large, the token will fail to be
    issued. If this occurs, the error message will indicate the maximum number
    of repositories that should be requested. For the average application
    requesting 8 permissions, this limit is around 5000 repositories. With fewer
    permissions requested, more repositories are supported. You must use a
    [JWT](https://docs.github.com/enterprise-server@3.9/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app)
    to access this endpoint.
  tags: []
  links:
    - title: Link
      icon: code
      url: https://example.com
spec:
  type: openapi
  lifecycle: experimental
  owner: team-c
  definition: |
    openapi: 3.1.0
    info:
      title: Create An Installation Access Token For An App
      description: >-
        Creates an installation access token that enables a GitHub App to make
        authenticated API requests for the app's installation on an organization or
        individual account. Installation tokens expire one hour from the time you
        create them. Using an expired token produces a status code of `401 -
        Unauthorized`, and requires creating a new installation token. By default
        the installation token has access to all repositories that the installation
        can access. Optionally, you can use the `repositories` or `repository_ids`
        body parameters to specify individual repositories that the installation
        access token can access. If you don't use `repositories` or `repository_ids`
        to grant access to specific repositories, the installation access token will
        have access to all repositories that the installation was granted access to.
        The installation access token cannot be granted access to repositories that
        the installation was not granted access to. Up to 500 repositories can be
        listed in this manner.Optionally, use the `permissions` body parameter to
        specify the permissions that the installation access token should have. If
        `permissions` is not specified, the installation access token will have all
        of the permissions that were granted to the app. The installation access
        token cannot be granted permissions that the app was not granted.When using
        the repository or permission parameters to reduce the access of the token,
        the complexity of the token is increased due to both the number of
        permissions in the request and the number of repositories the token will
        have access to. If the complexity is too large, the token will fail to be
        issued. If this occurs, the error message will indicate the maximum number
        of repositories that should be requested. For the average application
        requesting 8 permissions, this limit is around 5000 repositories. With fewer
        permissions requested, more repositories are supported. You must use a
        [JWT](https://docs.github.com/enterprise-server@3.9/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app)
        to access this endpoint.
    paths:
      /app/installations/{installation_id}/access_tokens:
        post:
          summary: Create An Installation Access Token For An App
          description: >-
            Creates an installation access token that enables a GitHub App to make
            authenticated API requests for the app's installation on an organization
            or individual account. Installation tokens expire one hour from the time
            you create them. Using an expired token produces a status code of `401 -
            Unauthorized`, and requires creating a new installation token. By
            default the installation token has access to all repositories that the
            installation can access. Optionally, you can use the `repositories` or
            `repository_ids` body parameters to specify individual repositories that
            the installation access token can access. If you don't use
            `repositories` or `repository_ids` to grant access to specific
            repositories, the installation access token will have access to all
            repositories that the installation was granted access to. The
            installation access token cannot be granted access to repositories that
            the installation was not granted access to. Up to 500 repositories can
            be listed in this manner.Optionally, use the `permissions` body
            parameter to specify the permissions that the installation access token
            should have. If `permissions` is not specified, the installation access
            token will have all of the permissions that were granted to the app. The
            installation access token cannot be granted permissions that the app was
            not granted.When using the repository or permission parameters to reduce
            the access of the token, the complexity of the token is increased due to
            both the number of permissions in the request and the number of
            repositories the token will have access to. If the complexity is too
            large, the token will fail to be issued. If this occurs, the error
            message will indicate the maximum number of repositories that should be
            requested. For the average application requesting 8 permissions, this
            limit is around 5000 repositories. With fewer permissions requested,
            more repositories are supported. You must use a
            [JWT](https://docs.github.com/enterprise-server@3.9/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app)
            to access this endpoint.
          operationId: appscreateinstallationaccesstoken
          requestBody:
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    repositories:
                      description: >-
                        List of repository names that the token should have access
                        to
                      type: array
                      items:
                        type: string
                        example: rails
                    repository_ids:
                      description: List of repository IDs that the token should have access to
                      example:
                        - 1
                      type: array
                      items:
                        type: integer
                    permissions:
                      $ref: '#/components/schemas/app-permissions'
                examples:
                  default:
                    value:
                      repositories:
                        - Hello-World
                      permissions:
                        issues: write
                        contents: read
          responses:
            '422':
              $ref: '#/components/responses/validation_failed'
