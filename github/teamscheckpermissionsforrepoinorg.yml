apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: Check Team Permissions For A Repository
  description: >-
    Checks whether a team has `admin`, `push`, `maintain`, `triage`, or `pull`
    permission for a repository. Repositories inherited through a parent team
    will also be checked.You can also get information about the specified
    repository, including what permissions the team grants on it, by passing the
    following custom [media
    type](https://docs.github.com/enterprise-server@3.9/rest/overview/media-types/)
    via the `application/vnd.github.v3.repository+json` accept header.If a team
    doesn't have permission for the repository, you will receive a `404 Not
    Found` response status.If the repository is private, you must have at least
    `read` permission for that repository, and your token must have the `repo`
    or `admin:org` scope. Otherwise, you will receive a `404 Not Found` response
    status.**Note:** You can also specify a team by `org_id` and `team_id` using
    the route `GET /organizations/{org_id}/team/{team_id}/repos/{owner}/{repo}`.
  tags: []
  links:
    - title: Link
      icon: code
      url: https://example.com
spec:
  type: openapi
  lifecycle: experimental
  owner: team-c
  definition: |
    openapi: 3.1.0
    info:
      title: Check Team Permissions For A Repository
      description: >-
        Checks whether a team has `admin`, `push`, `maintain`, `triage`, or `pull`
        permission for a repository. Repositories inherited through a parent team
        will also be checked.You can also get information about the specified
        repository, including what permissions the team grants on it, by passing the
        following custom [media
        type](https://docs.github.com/enterprise-server@3.9/rest/overview/media-types/)
        via the `application/vnd.github.v3.repository+json` accept header.If a team
        doesn't have permission for the repository, you will receive a `404 Not
        Found` response status.If the repository is private, you must have at least
        `read` permission for that repository, and your token must have the `repo`
        or `admin:org` scope. Otherwise, you will receive a `404 Not Found` response
        status.**Note:** You can also specify a team by `org_id` and `team_id` using
        the route `GET /organizations/{org_id}/team/{team_id}/repos/{owner}/{repo}`.
    paths:
      /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}:
        get:
          summary: Check Team Permissions For A Repository
          description: >-
            Checks whether a team has `admin`, `push`, `maintain`, `triage`, or
            `pull` permission for a repository. Repositories inherited through a
            parent team will also be checked.You can also get information about the
            specified repository, including what permissions the team grants on it,
            by passing the following custom [media
            type](https://docs.github.com/enterprise-server@3.9/rest/overview/media-types/)
            via the `application/vnd.github.v3.repository+json` accept header.If a
            team doesn't have permission for the repository, you will receive a `404
            Not Found` response status.If the repository is private, you must have
            at least `read` permission for that repository, and your token must have
            the `repo` or `admin:org` scope. Otherwise, you will receive a `404 Not
            Found` response status.**Note:** You can also specify a team by `org_id`
            and `team_id` using the route `GET
            /organizations/{org_id}/team/{team_id}/repos/{owner}/{repo}`.
          operationId: teamscheckpermissionsforrepoinorg
          responses:
            '404':
              description: Not Found if team does not have permission for the repository
