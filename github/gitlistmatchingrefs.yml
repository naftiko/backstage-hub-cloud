apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: List Matching References
  description: >-
    Returns an array of references from your Git database that match the
    supplied name. The `:ref` in the URL must be formatted as `heads/` for
    branches and `tags/` for tags. If the `:ref` doesn't exist in the
    repository, but existing refs start with `:ref`, they will be returned as an
    array.When you use this endpoint without providing a `:ref`, it will return
    an array of all the references from your Git database, including notes and
    stashes if they exist on the server. Anything in the namespace is returned,
    not just `heads` and `tags`.**Note:** You need to explicitly [request a pull
    request](https://docs.github.com/enterprise-server@3.9/rest/pulls/pulls#get-a-pull-request)
    to trigger a test merge commit, which checks the mergeability of pull
    requests. For more information, see "[Checking mergeability of pull
    requests](https://docs.github.com/enterprise-server@3.9/rest/guides/getting-started-with-the-git-database-api#checking-mergeability-of-pull-requests)".If
    you request matching references for a branch named `feature` but the branch
    `feature` doesn't exist, the response can still include other matching head
    refs that start with the word `feature`, such as `featureA` and `featureB`.
  tags: []
  links:
    - title: Link
      icon: code
      url: https://example.com
spec:
  type: openapi
  lifecycle: experimental
  owner: team-c
  definition: |
    openapi: 3.1.0
    info:
      title: List Matching References
      description: >-
        Returns an array of references from your Git database that match the
        supplied name. The `:ref` in the URL must be formatted as `heads/` for
        branches and `tags/` for tags. If the `:ref` doesn't exist in the
        repository, but existing refs start with `:ref`, they will be returned as an
        array.When you use this endpoint without providing a `:ref`, it will return
        an array of all the references from your Git database, including notes and
        stashes if they exist on the server. Anything in the namespace is returned,
        not just `heads` and `tags`.**Note:** You need to explicitly [request a pull
        request](https://docs.github.com/enterprise-server@3.9/rest/pulls/pulls#get-a-pull-request)
        to trigger a test merge commit, which checks the mergeability of pull
        requests. For more information, see "[Checking mergeability of pull
        requests](https://docs.github.com/enterprise-server@3.9/rest/guides/getting-started-with-the-git-database-api#checking-mergeability-of-pull-requests)".If
        you request matching references for a branch named `feature` but the branch
        `feature` doesn't exist, the response can still include other matching head
        refs that start with the word `feature`, such as `featureA` and `featureB`.
    paths:
      /repos/{owner}/{repo}/git/matching-refs/{ref}:
        get:
          summary: List Matching References
          description: >-
            Returns an array of references from your Git database that match the
            supplied name. The `:ref` in the URL must be formatted as `heads/` for
            branches and `tags/` for tags. If the `:ref` doesn't exist in the
            repository, but existing refs start with `:ref`, they will be returned
            as an array.When you use this endpoint without providing a `:ref`, it
            will return an array of all the references from your Git database,
            including notes and stashes if they exist on the server. Anything in the
            namespace is returned, not just `heads` and `tags`.**Note:** You need to
            explicitly [request a pull
            request](https://docs.github.com/enterprise-server@3.9/rest/pulls/pulls#get-a-pull-request)
            to trigger a test merge commit, which checks the mergeability of pull
            requests. For more information, see "[Checking mergeability of pull
            requests](https://docs.github.com/enterprise-server@3.9/rest/guides/getting-started-with-the-git-database-api#checking-mergeability-of-pull-requests)".If
            you request matching references for a branch named `feature` but the
            branch `feature` doesn't exist, the response can still include other
            matching head refs that start with the word `feature`, such as
            `featureA` and `featureB`.
          operationId: gitlistmatchingrefs
          responses:
            '200':
              description: Response
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      $ref: '#/components/schemas/git-ref'
                  examples:
                    default:
                      $ref: '#/components/examples/git-ref-items'
              headers:
                Link:
                  $ref: '#/components/headers/link'
