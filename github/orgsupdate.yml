apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: Update An Organization
  description: >-
    **Parameter Deprecation Notice:** GitHub Enterprise Server will replace and
    discontinue `members_allowed_repository_creation_type` in favor of more
    granular permissions. The new input parameters are
    `members_can_create_public_repositories`,
    `members_can_create_private_repositories` for all organizations and
    `members_can_create_internal_repositories` for organizations associated with
    an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise
    Server 2.20+. For more information, see the [blog
    post](https://developer.github.com/changes/2019-12-03-internal-visibility-changes).Updates
    the organization's profile and member privileges.The authenticated user must
    be an organization owner to use this endpoint.OAuth app tokens and personal
    access tokens (classic) need the `admin:org` or `repo` scope to use this
    endpoint.
  tags: []
  links:
    - title: Link
      icon: code
      url: https://example.com
spec:
  type: openapi
  lifecycle: experimental
  owner: team-c
  definition: |
    openapi: 3.1.0
    info:
      title: Update An Organization
      description: >-
        **Parameter Deprecation Notice:** GitHub Enterprise Server will replace and
        discontinue `members_allowed_repository_creation_type` in favor of more
        granular permissions. The new input parameters are
        `members_can_create_public_repositories`,
        `members_can_create_private_repositories` for all organizations and
        `members_can_create_internal_repositories` for organizations associated with
        an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise
        Server 2.20+. For more information, see the [blog
        post](https://developer.github.com/changes/2019-12-03-internal-visibility-changes).Updates
        the organization's profile and member privileges.The authenticated user must
        be an organization owner to use this endpoint.OAuth app tokens and personal
        access tokens (classic) need the `admin:org` or `repo` scope to use this
        endpoint.
    paths:
      /orgs/{org}:
        patch:
          summary: Update An Organization
          description: >-
            **Parameter Deprecation Notice:** GitHub Enterprise Server will replace
            and discontinue `members_allowed_repository_creation_type` in favor of
            more granular permissions. The new input parameters are
            `members_can_create_public_repositories`,
            `members_can_create_private_repositories` for all organizations and
            `members_can_create_internal_repositories` for organizations associated
            with an enterprise account using GitHub Enterprise Cloud or GitHub
            Enterprise Server 2.20+. For more information, see the [blog
            post](https://developer.github.com/changes/2019-12-03-internal-visibility-changes).Updates
            the organization's profile and member privileges.The authenticated user
            must be an organization owner to use this endpoint.OAuth app tokens and
            personal access tokens (classic) need the `admin:org` or `repo` scope to
            use this endpoint.
          operationId: orgsupdate
          requestBody:
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    billing_email:
                      type: string
                      description: Billing email address. This address is not publicized.
                    company:
                      type: string
                      description: The company name.
                    email:
                      type: string
                      description: The publicly visible email address.
                    twitter_username:
                      type: string
                      description: The Twitter username of the company.
                    location:
                      type: string
                      description: The location.
                    name:
                      type: string
                      description: The shorthand name of the company.
                    description:
                      type: string
                      description: The description of the company.
                    has_organization_projects:
                      type: boolean
                      description: Whether an organization can use organization projects.
                    has_repository_projects:
                      type: boolean
                      description: >-
                        Whether repositories that belong to the organization can use
                        repository projects.
                    default_repository_permission:
                      type: string
                      description: >-
                        Default permission level members have for organization
                        repositories.
                      enum:
                        - read
                        - write
                        - admin
                        - none
                      default: read
                    members_can_create_repositories:
                      type: boolean
                      description: >-
                        Whether of non-admin organization members can create
                        repositories. **Note:** A parameter can override this
                        parameter. See `members_allowed_repository_creation_type` in
                        this table for details.
                      default: true
                    members_can_create_internal_repositories:
                      type: boolean
                      description: >-
                        Whether organization members can create internal
                        repositories, which are visible to all enterprise members.
                        You can only allow members to create internal repositories
                        if your organization is associated with an enterprise
                        account using GitHub Enterprise Cloud or GitHub Enterprise
                        Server 2.20+. For more information, see "[Restricting
                        repository creation in your
                        organization](https://docs.github.com/enterprise-server@3.9/github/setting-up-and-managing-organizations-and-teams/restricting-repository-creation-in-your-organization)"
                        in the GitHub Help documentation.
                    members_can_create_private_repositories:
                      type: boolean
                      description: >-
                        Whether organization members can create private
                        repositories, which are visible to organization members with
                        permission. For more information, see "[Restricting
                        repository creation in your
                        organization](https://docs.github.com/enterprise-server@3.9/github/setting-up-and-managing-organizations-and-teams/restricting-repository-creation-in-your-organization)"
                        in the GitHub Help documentation.
                    members_can_create_public_repositories:
                      type: boolean
                      description: >-
                        Whether organization members can create public repositories,
                        which are visible to anyone. For more information, see
                        "[Restricting repository creation in your
                        organization](https://docs.github.com/enterprise-server@3.9/github/setting-up-and-managing-organizations-and-teams/restricting-repository-creation-in-your-organization)"
                        in the GitHub Help documentation.
                    members_allowed_repository_creation_type:
                      type: string
                      description: >-
                        Specifies which types of repositories non-admin organization
                        members can create. 

                        **Note:** This parameter is deprecated and will be removed
                        in the future. Its return value ignores internal
                        repositories. Using this parameter overrides values set in
                        `members_can_create_repositories`. See the parameter
                        deprecation notice in the operation description for details.
                      enum:
                        - all
                        - private
                        - none
                    members_can_create_pages:
                      type: boolean
                      description: >-
                        Whether organization members can create GitHub Pages sites.
                        Existing published sites will not be impacted.
                      default: true
                    members_can_fork_private_repositories:
                      type: boolean
                      description: >-
                        Whether organization members can fork private organization
                        repositories.
                      default: false
                    web_commit_signoff_required:
                      type: boolean
                      description: >-
                        Whether contributors to organization repositories are
                        required to sign off on commits they make through GitHub's
                        web interface.
                      default: false
                    blog:
                      type: string
                      example: '"http://github.blog"'
                    advanced_security_enabled_for_new_repositories:
                      type: boolean
                      description: >-
                        Whether GitHub Advanced Security is automatically enabled
                        for new repositories.


                        To use this parameter, you must have admin permissions for
                        the repository or be an owner or security manager for the
                        organization that owns the repository. For more information,
                        see "[Managing security managers in your
                        organization](https://docs.github.com/enterprise-server@3.9/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization)."


                        You can check which security and analysis features are
                        currently enabled by using a `GET /orgs/{org}` request.
                    dependabot_alerts_enabled_for_new_repositories:
                      type: boolean
                      description: >-
                        Whether Dependabot alerts is automatically enabled for new
                        repositories.


                        To use this parameter, you must have admin permissions for
                        the repository or be an owner or security manager for the
                        organization that owns the repository. For more information,
                        see "[Managing security managers in your
                        organization](https://docs.github.com/enterprise-server@3.9/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization)."


                        You can check which security and analysis features are
                        currently enabled by using a `GET /orgs/{org}` request.
                    dependabot_security_updates_enabled_for_new_repositories:
                      type: boolean
                      description: >-
                        Whether Dependabot security updates is automatically enabled
                        for new repositories.


                        To use this parameter, you must have admin permissions for
                        the repository or be an owner or security manager for the
                        organization that owns the repository. For more information,
                        see "[Managing security managers in your
                        organization](https://docs.github.com/enterprise-server@3.9/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization)."


                        You can check which security and analysis features are
                        currently enabled by using a `GET /orgs/{org}` request.
                    dependency_graph_enabled_for_new_repositories:
                      type: boolean
                      description: >-
                        Whether dependency graph is automatically enabled for new
                        repositories.


                        To use this parameter, you must have admin permissions for
                        the repository or be an owner or security manager for the
                        organization that owns the repository. For more information,
                        see "[Managing security managers in your
                        organization](https://docs.github.com/enterprise-server@3.9/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization)."


                        You can check which security and analysis features are
                        currently enabled by using a `GET /orgs/{org}` request.
                    secret_scanning_enabled_for_new_repositories:
                      type: boolean
                      description: >-
                        Whether secret scanning is automatically enabled for new
                        repositories.


                        To use this parameter, you must have admin permissions for
                        the repository or be an owner or security manager for the
                        organization that owns the repository. For more information,
                        see "[Managing security managers in your
                        organization](https://docs.github.com/enterprise-server@3.9/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization)."


                        You can check which security and analysis features are
                        currently enabled by using a `GET /orgs/{org}` request.
                    secret_scanning_push_protection_enabled_for_new_repositories:
                      type: boolean
                      description: >-
                        Whether secret scanning push protection is automatically
                        enabled for new repositories.


                        To use this parameter, you must have admin permissions for
                        the repository or be an owner or security manager for the
                        organization that owns the repository. For more information,
                        see "[Managing security managers in your
                        organization](https://docs.github.com/enterprise-server@3.9/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization)."


                        You can check which security and analysis features are
                        currently enabled by using a `GET /orgs/{org}` request.
                    secret_scanning_push_protection_custom_link_enabled:
                      type: boolean
                      description: >-
                        Whether a custom link is shown to contributors who are
                        blocked from pushing a secret by push protection.
                    secret_scanning_push_protection_custom_link:
                      type: string
                      description: >-
                        If `secret_scanning_push_protection_custom_link_enabled` is
                        true, the URL that will be displayed to contributors who are
                        blocked from pushing a secret.
                examples:
                  default:
                    value:
                      billing_email: mona@github.com
                      company: GitHub
                      email: mona@github.com
                      twitter_username: github
                      location: San Francisco
                      name: github
                      description: GitHub, the company.
                      default_repository_permission: read
                      members_can_create_repositories: true
                      members_allowed_repository_creation_type: all
          responses:
            '422':
              description: Validation failed
              content:
                application/json:
                  schema:
                    oneOf:
                      - $ref: '#/components/schemas/validation-error'
                      - $ref: '#/components/schemas/validation-error-simple'
