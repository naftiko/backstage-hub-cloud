apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: Create A Repository Webhook
  description: >-
    Repositories can have multiple webhooks installed. Each webhook should have
    a unique `config`. Multiple webhooks canshare the same `config` as long as
    those webhooks do not have any `events` that overlap.
  tags: []
  links:
    - title: Link
      icon: code
      url: https://example.com
spec:
  type: openapi
  lifecycle: experimental
  owner: team-c
  definition: |
    openapi: 3.1.0
    info:
      title: Create A Repository Webhook
      description: >-
        Repositories can have multiple webhooks installed. Each webhook should have
        a unique `config`. Multiple webhooks canshare the same `config` as long as
        those webhooks do not have any `events` that overlap.
    paths:
      /repos/{owner}/{repo}/hooks:
        post:
          summary: Create A Repository Webhook
          description: >-
            Repositories can have multiple webhooks installed. Each webhook should
            have a unique `config`. Multiple webhooks canshare the same `config` as
            long as those webhooks do not have any `events` that overlap.
          operationId: reposcreatewebhook
          requestBody:
            content:
              application/json:
                schema:
                  type: object
                  nullable: true
                  properties:
                    name:
                      type: string
                      description: >-
                        Use `web` to create a webhook. Default: `web`. This
                        parameter only accepts the value `web`.
                    config:
                      type: object
                      description: Key/value pairs to provide settings for this webhook.
                      properties:
                        url:
                          $ref: '#/components/schemas/webhook-config-url'
                        content_type:
                          $ref: '#/components/schemas/webhook-config-content-type'
                        secret:
                          $ref: '#/components/schemas/webhook-config-secret'
                        insecure_ssl:
                          $ref: '#/components/schemas/webhook-config-insecure-ssl'
                    events:
                      type: array
                      description: >-
                        Determines what
                        [events](https://docs.github.com/enterprise-server@3.9/webhooks/event-payloads)
                        the hook is triggered for.
                      default:
                        - push
                      items:
                        type: string
                    active:
                      type: boolean
                      description: >-
                        Determines if notifications are sent when the webhook is
                        triggered. Set to `true` to send notifications.
                      default: true
                  additionalProperties: false
                examples:
                  default:
                    value:
                      name: web
                      active: true
                      events:
                        - push
                        - pull_request
                      config:
                        url: https://example.com/webhook
                        content_type: json
                        insecure_ssl: '0'
          responses:
            '422':
              $ref: '#/components/responses/validation_failed'
