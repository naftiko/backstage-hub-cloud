apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: Create A Repository Dispatch Event
  description: >-
    You can use this endpoint to trigger a webhook event called
    `repository_dispatch` when you want activity that happens outside of GitHub
    Enterprise Server to trigger a GitHub Actions workflow or GitHub App
    webhook. You must configure your GitHub Actions workflow or GitHub App to
    run when the `repository_dispatch` event occurs. For an example
    `repository_dispatch` webhook payload, see
    "[RepositoryDispatchEvent](https://docs.github.com/enterprise-server@3.9/webhooks/event-payloads/#repository_dispatch)."The
    `client_payload` parameter is available for any extra information that your
    workflow might need. This parameter is a JSON payload that will be passed on
    when the webhook event is dispatched. For example, the `client_payload` can
    include a message that a user would like to send using a GitHub Actions
    workflow. Or the `client_payload` can be used as a test to debug your
    workflow.This input example shows how you can use the `client_payload` as a
    test to debug your workflow.OAuth app tokens and personal access tokens
    (classic) need the `repo` scope to use this endpoint.
  tags: []
  links:
    - title: Link
      icon: code
      url: https://example.com
spec:
  type: openapi
  lifecycle: experimental
  owner: team-c
  definition: |
    openapi: 3.1.0
    info:
      title: Create A Repository Dispatch Event
      description: >-
        You can use this endpoint to trigger a webhook event called
        `repository_dispatch` when you want activity that happens outside of GitHub
        Enterprise Server to trigger a GitHub Actions workflow or GitHub App
        webhook. You must configure your GitHub Actions workflow or GitHub App to
        run when the `repository_dispatch` event occurs. For an example
        `repository_dispatch` webhook payload, see
        "[RepositoryDispatchEvent](https://docs.github.com/enterprise-server@3.9/webhooks/event-payloads/#repository_dispatch)."The
        `client_payload` parameter is available for any extra information that your
        workflow might need. This parameter is a JSON payload that will be passed on
        when the webhook event is dispatched. For example, the `client_payload` can
        include a message that a user would like to send using a GitHub Actions
        workflow. Or the `client_payload` can be used as a test to debug your
        workflow.This input example shows how you can use the `client_payload` as a
        test to debug your workflow.OAuth app tokens and personal access tokens
        (classic) need the `repo` scope to use this endpoint.
    paths:
      /repos/{owner}/{repo}/dispatches:
        post:
          summary: Create A Repository Dispatch Event
          description: >-
            You can use this endpoint to trigger a webhook event called
            `repository_dispatch` when you want activity that happens outside of
            GitHub Enterprise Server to trigger a GitHub Actions workflow or GitHub
            App webhook. You must configure your GitHub Actions workflow or GitHub
            App to run when the `repository_dispatch` event occurs. For an example
            `repository_dispatch` webhook payload, see
            "[RepositoryDispatchEvent](https://docs.github.com/enterprise-server@3.9/webhooks/event-payloads/#repository_dispatch)."The
            `client_payload` parameter is available for any extra information that
            your workflow might need. This parameter is a JSON payload that will be
            passed on when the webhook event is dispatched. For example, the
            `client_payload` can include a message that a user would like to send
            using a GitHub Actions workflow. Or the `client_payload` can be used as
            a test to debug your workflow.This input example shows how you can use
            the `client_payload` as a test to debug your workflow.OAuth app tokens
            and personal access tokens (classic) need the `repo` scope to use this
            endpoint.
          operationId: reposcreatedispatchevent
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - event_type
                  properties:
                    event_type:
                      type: string
                      description: >-
                        A custom webhook event name. Must be 100 characters or
                        fewer.
                      minLength: 1
                      maxLength: 100
                    client_payload:
                      type: object
                      description: >-
                        JSON payload with extra information about the webhook event
                        that your action or workflow may use. The maximum number of
                        top-level properties is 10.
                      additionalProperties: true
                      maxProperties: 10
                examples:
                  default:
                    value:
                      event_type: on-demand-test
                      client_payload:
                        unit: false
                        integration: true
          responses:
            '422':
              $ref: '#/components/responses/validation_failed'
