apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: Update A Repository
  description: >-
    **Note**: To edit a repository's topics, use the [Replace all repository
    topics](https://docs.github.com/enterprise-server@3.9/rest/repos/repos#replace-all-repository-topics)
    endpoint.
  tags: []
  links:
    - title: Link
      icon: code
      url: https://example.com
spec:
  type: openapi
  lifecycle: experimental
  owner: team-c
  definition: |
    openapi: 3.1.0
    info:
      title: Update A Repository
      description: >-
        **Note**: To edit a repository's topics, use the [Replace all repository
        topics](https://docs.github.com/enterprise-server@3.9/rest/repos/repos#replace-all-repository-topics)
        endpoint.
    paths:
      /repos/{owner}/{repo}:
        patch:
          summary: Update A Repository
          description: >-
            **Note**: To edit a repository's topics, use the [Replace all repository
            topics](https://docs.github.com/enterprise-server@3.9/rest/repos/repos#replace-all-repository-topics)
            endpoint.
          operationId: reposupdate
          requestBody:
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    name:
                      type: string
                      description: The name of the repository.
                    description:
                      type: string
                      description: A short description of the repository.
                    homepage:
                      type: string
                      description: A URL with more information about the repository.
                    private:
                      type: boolean
                      description: >-
                        Either `true` to make the repository private or `false` to
                        make it public. Default: `false`.  

                        **Note**: You will get a `422` error if the organization
                        restricts [changing repository
                        visibility](https://docs.github.com/enterprise-server@3.9/articles/repository-permission-levels-for-an-organization#changing-the-visibility-of-repositories)
                        to organization owners and a non-owner tries to change the
                        value of private.
                      default: false
                    visibility:
                      type: string
                      description: The visibility of the repository.
                      enum:
                        - public
                        - private
                        - internal
                    security_and_analysis:
                      type: object
                      description: >-
                        Specify which security and analysis features to enable or
                        disable for the repository.


                        To use this parameter, you must have admin permissions for
                        the repository or be an owner or security manager for the
                        organization that owns the repository. For more information,
                        see "[Managing security managers in your
                        organization](https://docs.github.com/enterprise-server@3.9/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization)."


                        For example, to enable GitHub Advanced Security, use this
                        data in the body of the `PATCH` request:

                        `{ "security_and_analysis": {"advanced_security": {
                        "status": "enabled" } } }`.


                        You can check which security and analysis features are
                        currently enabled by using a `GET /repos/{owner}/{repo}`
                        request.
                      nullable: true
                      properties:
                        advanced_security:
                          type: object
                          description: >-
                            Use the `status` property to enable or disable GitHub
                            Advanced Security for this repository. For more
                            information, see "[About GitHub Advanced
                            Security](/github/getting-started-with-github/learning-about-github/about-github-advanced-security)."
                          properties:
                            status:
                              type: string
                              description: Can be `enabled` or `disabled`.
                        secret_scanning:
                          type: object
                          description: >-
                            Use the `status` property to enable or disable secret
                            scanning for this repository. For more information, see
                            "[About secret
                            scanning](/code-security/secret-security/about-secret-scanning)."
                          properties:
                            status:
                              type: string
                              description: Can be `enabled` or `disabled`.
                        secret_scanning_push_protection:
                          type: object
                          description: >-
                            Use the `status` property to enable or disable secret
                            scanning push protection for this repository. For more
                            information, see "[Protecting pushes with secret
                            scanning](/code-security/secret-scanning/protecting-pushes-with-secret-scanning)."
                          properties:
                            status:
                              type: string
                              description: Can be `enabled` or `disabled`.
                    has_issues:
                      type: boolean
                      description: >-
                        Either `true` to enable issues for this repository or
                        `false` to disable them.
                      default: true
                    has_projects:
                      type: boolean
                      description: >-
                        Either `true` to enable projects for this repository or
                        `false` to disable them. **Note:** If you're creating a
                        repository in an organization that has disabled repository
                        projects, the default is `false`, and if you pass `true`,
                        the API returns an error.
                      default: true
                    has_wiki:
                      type: boolean
                      description: >-
                        Either `true` to enable the wiki for this repository or
                        `false` to disable it.
                      default: true
                    is_template:
                      type: boolean
                      description: >-
                        Either `true` to make this repo available as a template
                        repository or `false` to prevent it.
                      default: false
                    default_branch:
                      type: string
                      description: Updates the default branch for this repository.
                    allow_squash_merge:
                      type: boolean
                      description: >-
                        Either `true` to allow squash-merging pull requests, or
                        `false` to prevent squash-merging.
                      default: true
                    allow_merge_commit:
                      type: boolean
                      description: >-
                        Either `true` to allow merging pull requests with a merge
                        commit, or `false` to prevent merging pull requests with
                        merge commits.
                      default: true
                    allow_rebase_merge:
                      type: boolean
                      description: >-
                        Either `true` to allow rebase-merging pull requests, or
                        `false` to prevent rebase-merging.
                      default: true
                    delete_branch_on_merge:
                      type: boolean
                      description: >-
                        Either `true` to allow automatically deleting head branches
                        when pull requests are merged, or `false` to prevent
                        automatic deletion.
                      default: false
                    allow_update_branch:
                      type: boolean
                      description: >-
                        Either `true` to always allow a pull request head branch
                        that is behind its base branch to be updated even if it is
                        not required to be up to date before merging, or false
                        otherwise.
                      default: false
                    use_squash_pr_title_as_default:
                      type: boolean
                      description: >-
                        Either `true` to allow squash-merge commits to use pull
                        request title, or `false` to use commit message. **This
                        property has been deprecated. Please use
                        `squash_merge_commit_title` instead.
                      default: false
                      deprecated: true
                    squash_merge_commit_title:
                      type: string
                      enum:
                        - PR_TITLE
                        - COMMIT_OR_PR_TITLE
                      description: >-
                        The default value for a squash merge commit title:


                        - `PR_TITLE` - default to the pull request's title.

                        - `COMMIT_OR_PR_TITLE` - default to the commit's title (if
                        only one commit) or the pull request's title (when more than
                        one commit).
                    squash_merge_commit_message:
                      type: string
                      enum:
                        - PR_BODY
                        - COMMIT_MESSAGES
                        - BLANK
                      description: >-
                        The default value for a squash merge commit message:


                        - `PR_BODY` - default to the pull request's body.

                        - `COMMIT_MESSAGES` - default to the branch's commit
                        messages.

                        - `BLANK` - default to a blank commit message.
                    merge_commit_title:
                      type: string
                      enum:
                        - PR_TITLE
                        - MERGE_MESSAGE
                      description: >-
                        The default value for a merge commit title.


                        - `PR_TITLE` - default to the pull request's title.

                        - `MERGE_MESSAGE` - default to the classic title for a merge
                        message (e.g., Merge pull request #123 from branch-name).
                    merge_commit_message:
                      type: string
                      enum:
                        - PR_BODY
                        - PR_TITLE
                        - BLANK
                      description: |-
                        The default value for a merge commit message.

                        - `PR_TITLE` - default to the pull request's title.
                        - `PR_BODY` - default to the pull request's body.
                        - `BLANK` - default to a blank commit message.
                    archived:
                      type: boolean
                      description: >-
                        Whether to archive this repository. `false` will unarchive a
                        previously archived repository.
                      default: false
                    allow_forking:
                      type: boolean
                      description: >-
                        Either `true` to allow private forks, or `false` to prevent
                        private forks.
                      default: false
                    web_commit_signoff_required:
                      type: boolean
                      description: >-
                        Either `true` to require contributors to sign off on
                        web-based commits, or `false` to not require contributors to
                        sign off on web-based commits.
                      default: false
                examples:
                  default:
                    value:
                      name: Hello-World
                      description: This is your first repository
                      homepage: https://github.com
                      private: true
                      has_issues: true
                      has_projects: true
                      has_wiki: true
          responses:
            '422':
              $ref: '#/components/responses/validation_failed'
