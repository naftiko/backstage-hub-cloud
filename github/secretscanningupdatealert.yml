apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: Update A Secret Scanning Alert
  description: >-
    Updates the status of a secret scanning alert in an eligible repository.The
    authenticated user must be an administrator for the repository or for the
    organization that owns the repository to use this endpoint.OAuth app tokens
    and personal access tokens (classic) need the `repo` or `security_events`
    scope to use this endpoint. If this endpoint is only used with public
    repositories, the token can use the `public_repo` scope instead.
  tags: []
  links:
    - title: Link
      icon: code
      url: https://example.com
spec:
  type: openapi
  lifecycle: experimental
  owner: team-c
  definition: |
    openapi: 3.1.0
    info:
      title: Update A Secret Scanning Alert
      description: >-
        Updates the status of a secret scanning alert in an eligible repository.The
        authenticated user must be an administrator for the repository or for the
        organization that owns the repository to use this endpoint.OAuth app tokens
        and personal access tokens (classic) need the `repo` or `security_events`
        scope to use this endpoint. If this endpoint is only used with public
        repositories, the token can use the `public_repo` scope instead.
    paths:
      /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}:
        patch:
          summary: Update A Secret Scanning Alert
          description: >-
            Updates the status of a secret scanning alert in an eligible
            repository.The authenticated user must be an administrator for the
            repository or for the organization that owns the repository to use this
            endpoint.OAuth app tokens and personal access tokens (classic) need the
            `repo` or `security_events` scope to use this endpoint. If this endpoint
            is only used with public repositories, the token can use the
            `public_repo` scope instead.
          operationId: secretscanningupdatealert
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    state:
                      $ref: '#/components/schemas/secret-scanning-alert-state'
                    resolution:
                      $ref: '#/components/schemas/secret-scanning-alert-resolution'
                    resolution_comment:
                      $ref: >-
                        #/components/schemas/secret-scanning-alert-resolution-comment
                  required:
                    - state
                examples:
                  default:
                    value:
                      state: resolved
                      resolution: false_positive
          responses:
            '503':
              $ref: '#/components/responses/service_unavailable'
