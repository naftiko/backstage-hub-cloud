apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: Provision A Scim Enterprise User
  description: >-
    **Note:** The SCIM API endpoints for enterprise accounts are currently in
    *private* beta and are subject to change.Creates an external identity for a
    new SCIM enterprise user.SCIM does not authenticate users, it only
    provisions them. The authentication of users is done by SAML. However, when
    SCIM is enabled, all users need to be provisioned through SCIM before a user
    can sign in through SAML. The matching of a user to a SCIM provisioned user
    is done when the SAML assertion is consumed. The user will be matched on
    SAML response `NameID` to SCIM `userName`.When converting existing
    enterprise to use SCIM, the user handle (`userName`) from the SCIM payload
    will be used to match the provisioned user to an already existing user in
    the enterprise. Since the new identity record is created for newly
    provisioned users the matching for those records is done using a user's
    handle. Currently the matching will be performed to all of the users no
    matter if they were SAML JIT provisioned or created as local users.
  tags: []
  links:
    - title: Link
      icon: code
      url: https://example.com
spec:
  type: openapi
  lifecycle: experimental
  owner: team-c
  definition: |
    openapi: 3.1.0
    info:
      title: Provision A Scim Enterprise User
      description: >-
        **Note:** The SCIM API endpoints for enterprise accounts are currently in
        *private* beta and are subject to change.Creates an external identity for a
        new SCIM enterprise user.SCIM does not authenticate users, it only
        provisions them. The authentication of users is done by SAML. However, when
        SCIM is enabled, all users need to be provisioned through SCIM before a user
        can sign in through SAML. The matching of a user to a SCIM provisioned user
        is done when the SAML assertion is consumed. The user will be matched on
        SAML response `NameID` to SCIM `userName`.When converting existing
        enterprise to use SCIM, the user handle (`userName`) from the SCIM payload
        will be used to match the provisioned user to an already existing user in
        the enterprise. Since the new identity record is created for newly
        provisioned users the matching for those records is done using a user's
        handle. Currently the matching will be performed to all of the users no
        matter if they were SAML JIT provisioned or created as local users.
    paths:
      /scim/v2/Users:
        post:
          summary: Provision A Scim Enterprise User
          description: >-
            **Note:** The SCIM API endpoints for enterprise accounts are currently
            in *private* beta and are subject to change.Creates an external identity
            for a new SCIM enterprise user.SCIM does not authenticate users, it only
            provisions them. The authentication of users is done by SAML. However,
            when SCIM is enabled, all users need to be provisioned through SCIM
            before a user can sign in through SAML. The matching of a user to a SCIM
            provisioned user is done when the SAML assertion is consumed. The user
            will be matched on SAML response `NameID` to SCIM `userName`.When
            converting existing enterprise to use SCIM, the user handle (`userName`)
            from the SCIM payload will be used to match the provisioned user to an
            already existing user in the enterprise. Since the new identity record
            is created for newly provisioned users the matching for those records is
            done using a user's handle. Currently the matching will be performed to
            all of the users no matter if they were SAML JIT provisioned or created
            as local users.
          operationId: enterpriseadminprovisionenterpriseuser
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/user'
                examples:
                  user:
                    $ref: '#/components/examples/in-user'
                  enterpriseOwner:
                    $ref: '#/components/examples/in-user-owner'
          responses:
            '500':
              $ref: '#/components/responses/scim_internal_error'
