apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: Get Repository Permissions For A User
  description: >-
    Checks the repository permission of a collaborator. The possible
    repositorypermissions are `admin`, `write`, `read`, and `none`.*Note*: The
    `permission` attribute provides the legacy base roles of `admin`, `write`,
    `read`, and `none`, where the`maintain` role is mapped to `write` and the
    `triage` role is mapped to `read`. To determine the role assigned to
    thecollaborator, see the `role_name` attribute, which will provide the full
    role name, including custom roles. The`permissions` hash can also be used to
    determine which base level of access the collaborator has to the repository.
  tags: []
  links:
    - title: Link
      icon: code
      url: https://example.com
spec:
  type: openapi
  lifecycle: experimental
  owner: team-c
  definition: |
    openapi: 3.1.0
    info:
      title: Get Repository Permissions For A User
      description: >-
        Checks the repository permission of a collaborator. The possible
        repositorypermissions are `admin`, `write`, `read`, and `none`.*Note*: The
        `permission` attribute provides the legacy base roles of `admin`, `write`,
        `read`, and `none`, where the`maintain` role is mapped to `write` and the
        `triage` role is mapped to `read`. To determine the role assigned to
        thecollaborator, see the `role_name` attribute, which will provide the full
        role name, including custom roles. The`permissions` hash can also be used to
        determine which base level of access the collaborator has to the repository.
    paths:
      /repos/{owner}/{repo}/collaborators/{username}/permission:
        get:
          summary: Get Repository Permissions For A User
          description: >-
            Checks the repository permission of a collaborator. The possible
            repositorypermissions are `admin`, `write`, `read`, and `none`.*Note*:
            The `permission` attribute provides the legacy base roles of `admin`,
            `write`, `read`, and `none`, where the`maintain` role is mapped to
            `write` and the `triage` role is mapped to `read`. To determine the role
            assigned to thecollaborator, see the `role_name` attribute, which will
            provide the full role name, including custom roles. The`permissions`
            hash can also be used to determine which base level of access the
            collaborator has to the repository.
          operationId: getRepositoryPermissionsForAUser
          responses:
            '404':
              $ref: '#/components/responses/not_found'
