apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: Delete A File
  description: >-
    Deletes a file in a repository.You can provide an additional `committer`
    parameter, which is an object containing information about the committer.
    Or, you can provide an `author` parameter, which is an object containing
    information about the author.The `author` section is optional and is filled
    in with the `committer` information if omitted. If the `committer`
    information is omitted, the authenticated user's information is used.You
    must provide values for both `name` and `email`, whether you choose to use
    `author` or `committer`. Otherwise, you'll receive a `422` status
    code.**Note:** If you use this endpoint and the "[Create or update file
    contents](https://docs.github.com/enterprise-server@3.9/rest/repos/contents/#create-or-update-file-contents)"
    endpoint in parallel, the concurrent requests will conflict and you will
    receive errors. You must use these endpoints serially instead.
  tags: []
  links:
    - title: Link
      icon: code
      url: https://example.com
spec:
  type: openapi
  lifecycle: experimental
  owner: team-c
  definition: |
    openapi: 3.1.0
    info:
      title: Delete A File
      description: >-
        Deletes a file in a repository.You can provide an additional `committer`
        parameter, which is an object containing information about the committer.
        Or, you can provide an `author` parameter, which is an object containing
        information about the author.The `author` section is optional and is filled
        in with the `committer` information if omitted. If the `committer`
        information is omitted, the authenticated user's information is used.You
        must provide values for both `name` and `email`, whether you choose to use
        `author` or `committer`. Otherwise, you'll receive a `422` status
        code.**Note:** If you use this endpoint and the "[Create or update file
        contents](https://docs.github.com/enterprise-server@3.9/rest/repos/contents/#create-or-update-file-contents)"
        endpoint in parallel, the concurrent requests will conflict and you will
        receive errors. You must use these endpoints serially instead.
    paths:
      /repos/{owner}/{repo}/contents/{path}:
        delete:
          summary: Delete A File
          description: >-
            Deletes a file in a repository.You can provide an additional `committer`
            parameter, which is an object containing information about the
            committer. Or, you can provide an `author` parameter, which is an object
            containing information about the author.The `author` section is optional
            and is filled in with the `committer` information if omitted. If the
            `committer` information is omitted, the authenticated user's information
            is used.You must provide values for both `name` and `email`, whether you
            choose to use `author` or `committer`. Otherwise, you'll receive a `422`
            status code.**Note:** If you use this endpoint and the "[Create or
            update file
            contents](https://docs.github.com/enterprise-server@3.9/rest/repos/contents/#create-or-update-file-contents)"
            endpoint in parallel, the concurrent requests will conflict and you will
            receive errors. You must use these endpoints serially instead.
          operationId: reposdeletefile
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      description: The commit message.
                    sha:
                      type: string
                      description: The blob SHA of the file being deleted.
                    branch:
                      type: string
                      description: 'The branch name. Default: the repositoryâ€™s default branch'
                    committer:
                      type: object
                      description: object containing information about the committer.
                      properties:
                        name:
                          type: string
                          description: The name of the author (or committer) of the commit
                        email:
                          type: string
                          description: The email of the author (or committer) of the commit
                    author:
                      type: object
                      description: object containing information about the author.
                      properties:
                        name:
                          type: string
                          description: The name of the author (or committer) of the commit
                        email:
                          type: string
                          description: The email of the author (or committer) of the commit
                  required:
                    - message
                    - sha
                examples:
                  default:
                    value:
                      message: my commit message
                      committer:
                        name: Monalisa Octocat
                        email: octocat@github.com
                      sha: 329688480d39049927147c162b9d2deaf885005f
          responses:
            '503':
              $ref: '#/components/responses/service_unavailable'
