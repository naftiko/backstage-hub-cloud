apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: Search Topics
  description: >-
    Find topics via various criteria. Results are sorted by best match. This
    method returns up to 100 results [per
    page](https://docs.github.com/enterprise-server@3.9/rest/guides/using-pagination-in-the-rest-api).
    See "[Searching
    topics](https://docs.github.com/enterprise-server@3.9/articles/searching-topics/)"
    for a detailed list of qualifiers.When searching for topics, you can get
    text match metadata for the topic's **short\_description**, **description**,
    **name**, or **display\_name** field when you pass the `text-match` media
    type. For more details about how to receive highlighted search results, see
    [Text match
    metadata](https://docs.github.com/enterprise-server@3.9/rest/search/search#text-match-metadata).For
    example, if you want to search for topics related to Ruby that are featured
    on https://github.com/topics. Your query might look like
    this:`q=ruby+is:featured`This query searches for topics with the keyword
    `ruby` and limits the results to find only topics that are featured. The
    topics that are the best match for the query appear first in the search
    results.
  tags: []
  links:
    - title: Link
      icon: code
      url: https://example.com
spec:
  type: openapi
  lifecycle: experimental
  owner: team-c
  definition: |
    openapi: 3.1.0
    info:
      title: Search Topics
      description: >-
        Find topics via various criteria. Results are sorted by best match. This
        method returns up to 100 results [per
        page](https://docs.github.com/enterprise-server@3.9/rest/guides/using-pagination-in-the-rest-api).
        See "[Searching
        topics](https://docs.github.com/enterprise-server@3.9/articles/searching-topics/)"
        for a detailed list of qualifiers.When searching for topics, you can get
        text match metadata for the topic's **short\_description**, **description**,
        **name**, or **display\_name** field when you pass the `text-match` media
        type. For more details about how to receive highlighted search results, see
        [Text match
        metadata](https://docs.github.com/enterprise-server@3.9/rest/search/search#text-match-metadata).For
        example, if you want to search for topics related to Ruby that are featured
        on https://github.com/topics. Your query might look like
        this:`q=ruby+is:featured`This query searches for topics with the keyword
        `ruby` and limits the results to find only topics that are featured. The
        topics that are the best match for the query appear first in the search
        results.
    paths:
      /search/topics:
        get:
          summary: Search Topics
          description: >-
            Find topics via various criteria. Results are sorted by best match. This
            method returns up to 100 results [per
            page](https://docs.github.com/enterprise-server@3.9/rest/guides/using-pagination-in-the-rest-api).
            See "[Searching
            topics](https://docs.github.com/enterprise-server@3.9/articles/searching-topics/)"
            for a detailed list of qualifiers.When searching for topics, you can get
            text match metadata for the topic's **short\_description**,
            **description**, **name**, or **display\_name** field when you pass the
            `text-match` media type. For more details about how to receive
            highlighted search results, see [Text match
            metadata](https://docs.github.com/enterprise-server@3.9/rest/search/search#text-match-metadata).For
            example, if you want to search for topics related to Ruby that are
            featured on https://github.com/topics. Your query might look like
            this:`q=ruby+is:featured`This query searches for topics with the keyword
            `ruby` and limits the results to find only topics that are featured. The
            topics that are the best match for the query appear first in the search
            results.
          operationId: searchtopics
          responses:
            '304':
              $ref: '#/components/responses/not_modified'
