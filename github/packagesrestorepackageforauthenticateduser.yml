apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: Restore A Package For The Authenticated User
  description: >-
    Restores a package owned by the authenticated user.You can restore a deleted
    package under the following conditions:  - The package was deleted within
    the last 30 days.  - The same package namespace and version is still
    available and not reused for a new package. If the same package namespace is
    not available, you will not be able to restore your package. In this
    scenario, to restore the deleted package, you must delete the new package
    that uses the deleted package's namespace first.OAuth app tokens and
    personal access tokens (classic) need the `read:packages` and
    `write:packages` scopes to use this endpoint. If the `package_type` belongs
    to a GitHub Packages registry that only supports repository-scoped
    permissions, the `repo` scope is also required. For the list of these
    registries, see "[About permissions for GitHub
    Packages](https://docs.github.com/enterprise-server@3.9/packages/learn-github-packages/about-permissions-for-github-packages#permissions-for-repository-scoped-packages)."
  tags: []
  links:
    - title: Link
      icon: code
      url: https://example.com
spec:
  type: openapi
  lifecycle: experimental
  owner: team-c
  definition: |
    openapi: 3.1.0
    info:
      title: Restore A Package For The Authenticated User
      description: >-
        Restores a package owned by the authenticated user.You can restore a deleted
        package under the following conditions:  - The package was deleted within
        the last 30 days.  - The same package namespace and version is still
        available and not reused for a new package. If the same package namespace is
        not available, you will not be able to restore your package. In this
        scenario, to restore the deleted package, you must delete the new package
        that uses the deleted package's namespace first.OAuth app tokens and
        personal access tokens (classic) need the `read:packages` and
        `write:packages` scopes to use this endpoint. If the `package_type` belongs
        to a GitHub Packages registry that only supports repository-scoped
        permissions, the `repo` scope is also required. For the list of these
        registries, see "[About permissions for GitHub
        Packages](https://docs.github.com/enterprise-server@3.9/packages/learn-github-packages/about-permissions-for-github-packages#permissions-for-repository-scoped-packages)."
    paths:
      /user/packages/{package_type}/{package_name}/restore:
        post:
          summary: Restore A Package For The Authenticated User
          description: >-
            Restores a package owned by the authenticated user.You can restore a
            deleted package under the following conditions:  - The package was
            deleted within the last 30 days.  - The same package namespace and
            version is still available and not reused for a new package. If the same
            package namespace is not available, you will not be able to restore your
            package. In this scenario, to restore the deleted package, you must
            delete the new package that uses the deleted package's namespace
            first.OAuth app tokens and personal access tokens (classic) need the
            `read:packages` and `write:packages` scopes to use this endpoint. If the
            `package_type` belongs to a GitHub Packages registry that only supports
            repository-scoped permissions, the `repo` scope is also required. For
            the list of these registries, see "[About permissions for GitHub
            Packages](https://docs.github.com/enterprise-server@3.9/packages/learn-github-packages/about-permissions-for-github-packages#permissions-for-repository-scoped-packages)."
          operationId: packagesrestorepackageforauthenticateduser
          responses:
            '404':
              $ref: '#/components/responses/not_found'
