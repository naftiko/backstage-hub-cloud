apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: Get An Issue
  description: >-
    The API returns a [`301 Moved Permanently`
    status](https://docs.github.com/enterprise-server@3.9/rest/guides/best-practices-for-using-the-rest-api#follow-redirects)
    if the issue
    was[transferred](https://docs.github.com/enterprise-server@3.9/articles/transferring-an-issue-to-another-repository/)
    to another repository. Ifthe issue was transferred to or deleted from a
    repository where the authenticated user lacks read access, the APIreturns a
    `404 Not Found` status. If the issue was deleted from a repository where the
    authenticated user has readaccess, the API returns a `410 Gone` status. To
    receive webhook events for transferred and deleted issues, subscribeto the
    [`issues`](https://docs.github.com/enterprise-server@3.9/webhooks/event-payloads/#issues)
    webhook.**Note**: GitHub's REST API considers every pull request an issue,
    but not every issue is a pull request. For thisreason, "Issues" endpoints
    may return both issues and pull requests in the response. You can identify
    pull requests bythe `pull_request` key. Be aware that the `id` of a pull
    request returned from "Issues" endpoints will be an _issue id_. To find out
    the pullrequest id, use the "[List pull
    requests](https://docs.github.com/enterprise-server@3.9/rest/pulls/pulls#list-pull-requests)"
    endpoint.This endpoint supports the following custom media types. For more
    information, see "[Media
    types](https://docs.github.com/enterprise-server@3.9/rest/using-the-rest-api/getting-started-with-the-rest-api#media-types)."-
    **`application/vnd.github.raw+json`**: Returns the raw markdown body.
    Response will include `body`. This is the default if you do not pass any
    specific media type.- **`application/vnd.github.text+json`**: Returns a text
    only representation of the markdown body. Response will include
    `body_text`.- **`application/vnd.github.html+json`**: Returns HTML rendered
    from the body's markdown. Response will include `body_html`.-
    **`application/vnd.github.full+json`**: Returns raw, text, and HTML
    representations. Response will include `body`, `body_text`, and `body_html`.
  tags: []
  links:
    - title: Link
      icon: code
      url: https://example.com
spec:
  type: openapi
  lifecycle: experimental
  owner: team-c
  definition: |
    openapi: 3.1.0
    info:
      title: Get An Issue
      description: >-
        The API returns a [`301 Moved Permanently`
        status](https://docs.github.com/enterprise-server@3.9/rest/guides/best-practices-for-using-the-rest-api#follow-redirects)
        if the issue
        was[transferred](https://docs.github.com/enterprise-server@3.9/articles/transferring-an-issue-to-another-repository/)
        to another repository. Ifthe issue was transferred to or deleted from a
        repository where the authenticated user lacks read access, the APIreturns a
        `404 Not Found` status. If the issue was deleted from a repository where the
        authenticated user has readaccess, the API returns a `410 Gone` status. To
        receive webhook events for transferred and deleted issues, subscribeto the
        [`issues`](https://docs.github.com/enterprise-server@3.9/webhooks/event-payloads/#issues)
        webhook.**Note**: GitHub's REST API considers every pull request an issue,
        but not every issue is a pull request. For thisreason, "Issues" endpoints
        may return both issues and pull requests in the response. You can identify
        pull requests bythe `pull_request` key. Be aware that the `id` of a pull
        request returned from "Issues" endpoints will be an _issue id_. To find out
        the pullrequest id, use the "[List pull
        requests](https://docs.github.com/enterprise-server@3.9/rest/pulls/pulls#list-pull-requests)"
        endpoint.This endpoint supports the following custom media types. For more
        information, see "[Media
        types](https://docs.github.com/enterprise-server@3.9/rest/using-the-rest-api/getting-started-with-the-rest-api#media-types)."-
        **`application/vnd.github.raw+json`**: Returns the raw markdown body.
        Response will include `body`. This is the default if you do not pass any
        specific media type.- **`application/vnd.github.text+json`**: Returns a text
        only representation of the markdown body. Response will include
        `body_text`.- **`application/vnd.github.html+json`**: Returns HTML rendered
        from the body's markdown. Response will include `body_html`.-
        **`application/vnd.github.full+json`**: Returns raw, text, and HTML
        representations. Response will include `body`, `body_text`, and `body_html`.
    paths:
      /repos/{owner}/{repo}/issues/{issue_number}:
        get:
          summary: Get An Issue
          description: >-
            The API returns a [`301 Moved Permanently`
            status](https://docs.github.com/enterprise-server@3.9/rest/guides/best-practices-for-using-the-rest-api#follow-redirects)
            if the issue
            was[transferred](https://docs.github.com/enterprise-server@3.9/articles/transferring-an-issue-to-another-repository/)
            to another repository. Ifthe issue was transferred to or deleted from a
            repository where the authenticated user lacks read access, the
            APIreturns a `404 Not Found` status. If the issue was deleted from a
            repository where the authenticated user has readaccess, the API returns
            a `410 Gone` status. To receive webhook events for transferred and
            deleted issues, subscribeto the
            [`issues`](https://docs.github.com/enterprise-server@3.9/webhooks/event-payloads/#issues)
            webhook.**Note**: GitHub's REST API considers every pull request an
            issue, but not every issue is a pull request. For thisreason, "Issues"
            endpoints may return both issues and pull requests in the response. You
            can identify pull requests bythe `pull_request` key. Be aware that the
            `id` of a pull request returned from "Issues" endpoints will be an
            _issue id_. To find out the pullrequest id, use the "[List pull
            requests](https://docs.github.com/enterprise-server@3.9/rest/pulls/pulls#list-pull-requests)"
            endpoint.This endpoint supports the following custom media types. For
            more information, see "[Media
            types](https://docs.github.com/enterprise-server@3.9/rest/using-the-rest-api/getting-started-with-the-rest-api#media-types)."-
            **`application/vnd.github.raw+json`**: Returns the raw markdown body.
            Response will include `body`. This is the default if you do not pass any
            specific media type.- **`application/vnd.github.text+json`**: Returns a
            text only representation of the markdown body. Response will include
            `body_text`.- **`application/vnd.github.html+json`**: Returns HTML
            rendered from the body's markdown. Response will include `body_html`.-
            **`application/vnd.github.full+json`**: Returns raw, text, and HTML
            representations. Response will include `body`, `body_text`, and
            `body_html`.
          operationId: issuesget
          responses:
            '410':
              $ref: '#/components/responses/gone'
