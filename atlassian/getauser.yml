apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: Get A User
  description: >-
    Gets the public information associated with a user account.If the user's
    profile is private, `location`, `website` and`created_on` elements are
    omitted.Note that the user object returned by this operation is changing
    significantly, due to privacy changes.See the
    [announcement](https://developer.atlassian.com/cloud/bitbucket/bitbucket-api-changes-gdpr/#changes-to-bitbucket-user-objects)
    for details.
  tags: []
  links:
    - title: Link
      icon: code
      url: https://example.com
spec:
  type: openapi
  lifecycle: experimental
  owner: team-c
  definition: |
    openapi: 3.1.0
    info:
      title: Get A User
      description: >-
        Gets the public information associated with a user account.If the user's
        profile is private, `location`, `website` and`created_on` elements are
        omitted.Note that the user object returned by this operation is changing
        significantly, due to privacy changes.See the
        [announcement](https://developer.atlassian.com/cloud/bitbucket/bitbucket-api-changes-gdpr/#changes-to-bitbucket-user-objects)
        for details.
    paths:
      /users/{selected_user}:
        get:
          summary: Get A User
          description: >-
            Gets the public information associated with a user account.If the user's
            profile is private, `location`, `website` and`created_on` elements are
            omitted.Note that the user object returned by this operation is changing
            significantly, due to privacy changes.See the
            [announcement](https://developer.atlassian.com/cloud/bitbucket/bitbucket-api-changes-gdpr/#changes-to-bitbucket-user-objects)
            for details.
          operationId: getauser
          responses:
            '404':
              description: >-
                If no user exists for the specified UUID, or if the specified
                account is a team account, not a personal account.
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/error'
