apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: Create A Webhook For A Repository
  description: >-
    Creates a new webhook on the specified repository.Example:```$ curl -X POST
    -u credentials -H 'Content-Type: application/json' 
    https://api.bitbucket.org/2.0/repositories/my-workspace/my-repo-slug/hooks 
    -d '    {      "description": "Webhook Description",      "url":
    "https://example.com/",      "active": true,      "secret": "this is a
    really bad secret",      "events": [        "repo:push",       
    "issue:created",        "issue:updated"      ]    }'```When the `secret` is
    provided it will be used as the key to generate a HMACdigest value sent in
    the `X-Hub-Signature` header at delivery time. Passinga `null` or empty
    `secret` or not passing a `secret` will leave the webhook'ssecret unset.
    Bitbucket only generates the `X-Hub-Signature` when the webhook'ssecret is
    set.Note that this call requires the webhook scope, as well as any scopethat
    applies to the events that the webhook subscribes to. In theexample above
    that means: `webhook`, `repository` and `issue`.Also note that the `url`
    must properly resolve and cannot be aninternal, non-routed address.
  tags: []
  links:
    - title: Link
      icon: code
      url: https://example.com
spec:
  type: openapi
  lifecycle: experimental
  owner: team-c
  definition: |
    openapi: 3.1.0
    info:
      title: Create A Webhook For A Repository
      description: >-
        Creates a new webhook on the specified repository.Example:```$ curl -X POST
        -u credentials -H 'Content-Type: application/json' 
        https://api.bitbucket.org/2.0/repositories/my-workspace/my-repo-slug/hooks 
        -d '    {      "description": "Webhook Description",      "url":
        "https://example.com/",      "active": true,      "secret": "this is a
        really bad secret",      "events": [        "repo:push",       
        "issue:created",        "issue:updated"      ]    }'```When the `secret` is
        provided it will be used as the key to generate a HMACdigest value sent in
        the `X-Hub-Signature` header at delivery time. Passinga `null` or empty
        `secret` or not passing a `secret` will leave the webhook'ssecret unset.
        Bitbucket only generates the `X-Hub-Signature` when the webhook'ssecret is
        set.Note that this call requires the webhook scope, as well as any scopethat
        applies to the events that the webhook subscribes to. In theexample above
        that means: `webhook`, `repository` and `issue`.Also note that the `url`
        must properly resolve and cannot be aninternal, non-routed address.
    paths:
      /repositories/{workspace}/{repo_slug}/hooks:
        post:
          summary: Create A Webhook For A Repository
          description: >-
            Creates a new webhook on the specified repository.Example:```$ curl -X
            POST -u credentials -H 'Content-Type: application/json' 
            https://api.bitbucket.org/2.0/repositories/my-workspace/my-repo-slug/hooks 
            -d '    {      "description": "Webhook Description",      "url":
            "https://example.com/",      "active": true,      "secret": "this is a
            really bad secret",      "events": [        "repo:push",       
            "issue:created",        "issue:updated"      ]    }'```When the `secret`
            is provided it will be used as the key to generate a HMACdigest value
            sent in the `X-Hub-Signature` header at delivery time. Passinga `null`
            or empty `secret` or not passing a `secret` will leave the
            webhook'ssecret unset. Bitbucket only generates the `X-Hub-Signature`
            when the webhook'ssecret is set.Note that this call requires the webhook
            scope, as well as any scopethat applies to the events that the webhook
            subscribes to. In theexample above that means: `webhook`, `repository`
            and `issue`.Also note that the `url` must properly resolve and cannot be
            aninternal, non-routed address.
          operationId: createawebhookforarepository
          responses:
            '404':
              description: If the repository does not exist.
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/error'
