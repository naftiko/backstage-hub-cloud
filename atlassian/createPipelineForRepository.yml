apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: Run A Pipeline
  description: >-
    Endpoint to create and initiate a pipeline.There are a couple of different
    options to initiate a pipeline, where the payload of the request will
    determine which type of pipeline will be instantiated.# Trigger a Pipeline
    for a branchOne way to trigger pipelines is by specifying the branch for
    which you want to trigger a pipeline.The specified branch will be used to
    determine which pipeline definition from the `bitbucket-pipelines.yml` file
    will be applied to initiate the pipeline. The pipeline will then do a clone
    of the repository and checkout the latest revision of the specified
    branch.### Example```$ curl -X POST -is -u username:password \  -H
    'Content-Type: application/json' \
    https://api.bitbucket.org/2.0/repositories/jeroendr/meat-demo2/pipelines/ \ 
    -d '  {    "target": {      "ref_type": "branch",      "type":
    "pipeline_ref_target",      "ref_name": "master"    }  }'```# Trigger a
    Pipeline for a commit on a branch or tagYou can initiate a pipeline for a
    specific commit and in the context of a specified reference (e.g. a branch,
    tag or bookmark).The specified reference will be used to determine which
    pipeline definition from the bitbucket-pipelines.yml file will be applied to
    initiate the pipeline. The pipeline will clone the repository and then do a
    checkout the specified reference.The following reference types are
    supported:* `branch`* `named_branch`* `bookmark` * `tag`### Example```$ curl
    -X POST -is -u username:password \  -H 'Content-Type: application/json' \ 
    https://api.bitbucket.org/2.0/repositories/jeroendr/meat-demo2/pipelines/ \ 
    -d '  {    "target": {      "commit": {        "type": "commit",       
    "hash": "ce5b7431602f7cbba007062eeb55225c6e18e956"      },      "ref_type":
    "branch",      "type": "pipeline_ref_target",      "ref_name": "master"   
    }  }'```# Trigger a specific pipeline definition for a commitYou can trigger
    a specific pipeline that is defined in your `bitbucket-pipelines.yml` file
    for a specific commit.In addition to the commit revision, you specify the
    type and pattern of the selector that identifies the pipeline definition.
    The resulting pipeline will then clone the repository and checkout the
    specified revision.### Example```$ curl -X POST -is -u username:password \ 
    -H 'Content-Type: application/json' \
    https://api.bitbucket.org/2.0/repositories/jeroendr/meat-demo2/pipelines/ \
    -d '  {     "target": {      "commit": {        
    "hash":"a3c4e02c9a3755eccdc3764e6ea13facdf30f923",        
    "type":"commit"       },        "selector": {          
    "type":"custom",              "pattern":"Deploy to production"         
    },        "type":"pipeline_commit_target"   }  }'```# Trigger a specific
    pipeline definition for a commit on a branch or tagYou can trigger a
    specific pipeline that is defined in your `bitbucket-pipelines.yml` file for
    a specific commit in the context of a specified reference.In addition to the
    commit revision, you specify the type and pattern of the selector that
    identifies the pipeline definition, as well as the reference information.
    The resulting pipeline will then clone the repository a checkout the
    specified reference.### Example```$ curl -X POST -is -u username:password \ 
    -H 'Content-Type: application/json' \
    https://api.bitbucket.org/2.0/repositories/jeroendr/meat-demo2/pipelines/ \
    -d '  {     "target": {      "commit": {        
    "hash":"a3c4e02c9a3755eccdc3764e6ea13facdf30f923",        
    "type":"commit"       },       "selector": {          "type":
    "custom",          "pattern": "Deploy to production"       },       "type":
    "pipeline_ref_target",       "ref_name": "master",       "ref_type":
    "branch"     }  }'```# Trigger a custom pipeline with variablesIn addition
    to triggering a custom pipeline that is defined in your
    `bitbucket-pipelines.yml` file as shown in the examples above, you can
    specify variables that will be available for your build. In the request,
    provide a list of variables, specifying the following for each variable:
    key, value, and whether it should be secured or not (this field is optional
    and defaults to not secured).### Example```$ curl -X POST -is -u
    username:password \  -H 'Content-Type: application/json' \
    https://api.bitbucket.org/2.0/repositories/{workspace}/{repo_slug}/pipelines/
    \ -d '  {    "target": {      "type": "pipeline_ref_target",     
    "ref_type": "branch",      "ref_name": "master",      "selector": {       
    "type": "custom",        "pattern": "Deploy to production"      }    },   
    "variables": [      {        "key": "var1key",        "value":
    "var1value",        "secured": true      },      {        "key":
    "var2key",        "value": "var2value"      }    ]  }'```# Trigger a pull
    request pipelineYou can also initiate a pipeline for a specific pull
    request.### Example```$ curl -X POST -is -u username:password \  -H
    'Content-Type: application/json' \
    https://api.bitbucket.org/2.0/repositories/{workspace}/{repo_slug}/pipelines/
    \ -d '  {    "target": {      "type": "pipeline_pullrequest_target",     
    "source": "pull-request-branch",      "destination": "master",     
    "destination_commit": {        "hash": "9f848b7"      },      "commit":
    {        "hash": "1a372fc"      },      "pullrequest": {        "id":
    "3"      },      "selector": {        "type": "pull-requests",       
    "pattern": "**"      }    }  }'```
  tags: []
  links:
    - title: Link
      icon: code
      url: https://example.com
spec:
  type: openapi
  lifecycle: experimental
  owner: team-c
  definition: |
    openapi: 3.1.0
    info:
      title: Run A Pipeline
      description: >-
        Endpoint to create and initiate a pipeline.There are a couple of different
        options to initiate a pipeline, where the payload of the request will
        determine which type of pipeline will be instantiated.# Trigger a Pipeline
        for a branchOne way to trigger pipelines is by specifying the branch for
        which you want to trigger a pipeline.The specified branch will be used to
        determine which pipeline definition from the `bitbucket-pipelines.yml` file
        will be applied to initiate the pipeline. The pipeline will then do a clone
        of the repository and checkout the latest revision of the specified
        branch.### Example```$ curl -X POST -is -u username:password \  -H
        'Content-Type: application/json' \
        https://api.bitbucket.org/2.0/repositories/jeroendr/meat-demo2/pipelines/ \ 
        -d '  {    "target": {      "ref_type": "branch",      "type":
        "pipeline_ref_target",      "ref_name": "master"    }  }'```# Trigger a
        Pipeline for a commit on a branch or tagYou can initiate a pipeline for a
        specific commit and in the context of a specified reference (e.g. a branch,
        tag or bookmark).The specified reference will be used to determine which
        pipeline definition from the bitbucket-pipelines.yml file will be applied to
        initiate the pipeline. The pipeline will clone the repository and then do a
        checkout the specified reference.The following reference types are
        supported:* `branch`* `named_branch`* `bookmark` * `tag`### Example```$ curl
        -X POST -is -u username:password \  -H 'Content-Type: application/json' \ 
        https://api.bitbucket.org/2.0/repositories/jeroendr/meat-demo2/pipelines/ \ 
        -d '  {    "target": {      "commit": {        "type": "commit",       
        "hash": "ce5b7431602f7cbba007062eeb55225c6e18e956"      },      "ref_type":
        "branch",      "type": "pipeline_ref_target",      "ref_name": "master"   
        }  }'```# Trigger a specific pipeline definition for a commitYou can trigger
        a specific pipeline that is defined in your `bitbucket-pipelines.yml` file
        for a specific commit.In addition to the commit revision, you specify the
        type and pattern of the selector that identifies the pipeline definition.
        The resulting pipeline will then clone the repository and checkout the
        specified revision.### Example```$ curl -X POST -is -u username:password \ 
        -H 'Content-Type: application/json' \
        https://api.bitbucket.org/2.0/repositories/jeroendr/meat-demo2/pipelines/ \
        -d '  {     "target": {      "commit": {        
        "hash":"a3c4e02c9a3755eccdc3764e6ea13facdf30f923",        
        "type":"commit"       },        "selector": {          
        "type":"custom",              "pattern":"Deploy to production"         
        },        "type":"pipeline_commit_target"   }  }'```# Trigger a specific
        pipeline definition for a commit on a branch or tagYou can trigger a
        specific pipeline that is defined in your `bitbucket-pipelines.yml` file for
        a specific commit in the context of a specified reference.In addition to the
        commit revision, you specify the type and pattern of the selector that
        identifies the pipeline definition, as well as the reference information.
        The resulting pipeline will then clone the repository a checkout the
        specified reference.### Example```$ curl -X POST -is -u username:password \ 
        -H 'Content-Type: application/json' \
        https://api.bitbucket.org/2.0/repositories/jeroendr/meat-demo2/pipelines/ \
        -d '  {     "target": {      "commit": {        
        "hash":"a3c4e02c9a3755eccdc3764e6ea13facdf30f923",        
        "type":"commit"       },       "selector": {          "type":
        "custom",          "pattern": "Deploy to production"       },       "type":
        "pipeline_ref_target",       "ref_name": "master",       "ref_type":
        "branch"     }  }'```# Trigger a custom pipeline with variablesIn addition
        to triggering a custom pipeline that is defined in your
        `bitbucket-pipelines.yml` file as shown in the examples above, you can
        specify variables that will be available for your build. In the request,
        provide a list of variables, specifying the following for each variable:
        key, value, and whether it should be secured or not (this field is optional
        and defaults to not secured).### Example```$ curl -X POST -is -u
        username:password \  -H 'Content-Type: application/json' \
        https://api.bitbucket.org/2.0/repositories/{workspace}/{repo_slug}/pipelines/
        \ -d '  {    "target": {      "type": "pipeline_ref_target",     
        "ref_type": "branch",      "ref_name": "master",      "selector": {       
        "type": "custom",        "pattern": "Deploy to production"      }    },   
        "variables": [      {        "key": "var1key",        "value":
        "var1value",        "secured": true      },      {        "key":
        "var2key",        "value": "var2value"      }    ]  }'```# Trigger a pull
        request pipelineYou can also initiate a pipeline for a specific pull
        request.### Example```$ curl -X POST -is -u username:password \  -H
        'Content-Type: application/json' \
        https://api.bitbucket.org/2.0/repositories/{workspace}/{repo_slug}/pipelines/
        \ -d '  {    "target": {      "type": "pipeline_pullrequest_target",     
        "source": "pull-request-branch",      "destination": "master",     
        "destination_commit": {        "hash": "9f848b7"      },      "commit":
        {        "hash": "1a372fc"      },      "pullrequest": {        "id":
        "3"      },      "selector": {        "type": "pull-requests",       
        "pattern": "**"      }    }  }'```
    paths:
      /repositories/{workspace}/{repo_slug}/pipelines:
        post:
          summary: Run A Pipeline
          description: >-
            Endpoint to create and initiate a pipeline.There are a couple of
            different options to initiate a pipeline, where the payload of the
            request will determine which type of pipeline will be instantiated.#
            Trigger a Pipeline for a branchOne way to trigger pipelines is by
            specifying the branch for which you want to trigger a pipeline.The
            specified branch will be used to determine which pipeline definition
            from the `bitbucket-pipelines.yml` file will be applied to initiate the
            pipeline. The pipeline will then do a clone of the repository and
            checkout the latest revision of the specified branch.### Example```$
            curl -X POST -is -u username:password \  -H 'Content-Type:
            application/json' \
            https://api.bitbucket.org/2.0/repositories/jeroendr/meat-demo2/pipelines/
            \  -d '  {    "target": {      "ref_type": "branch",      "type":
            "pipeline_ref_target",      "ref_name": "master"    }  }'```# Trigger a
            Pipeline for a commit on a branch or tagYou can initiate a pipeline for
            a specific commit and in the context of a specified reference (e.g. a
            branch, tag or bookmark).The specified reference will be used to
            determine which pipeline definition from the bitbucket-pipelines.yml
            file will be applied to initiate the pipeline. The pipeline will clone
            the repository and then do a checkout the specified reference.The
            following reference types are supported:* `branch`* `named_branch`*
            `bookmark` * `tag`### Example```$ curl -X POST -is -u username:password
            \  -H 'Content-Type: application/json' \ 
            https://api.bitbucket.org/2.0/repositories/jeroendr/meat-demo2/pipelines/
            \  -d '  {    "target": {      "commit": {        "type":
            "commit",        "hash": "ce5b7431602f7cbba007062eeb55225c6e18e956"     
            },      "ref_type": "branch",      "type": "pipeline_ref_target",     
            "ref_name": "master"    }  }'```# Trigger a specific pipeline definition
            for a commitYou can trigger a specific pipeline that is defined in your
            `bitbucket-pipelines.yml` file for a specific commit.In addition to the
            commit revision, you specify the type and pattern of the selector that
            identifies the pipeline definition. The resulting pipeline will then
            clone the repository and checkout the specified revision.### Example```$
            curl -X POST -is -u username:password \  -H 'Content-Type:
            application/json' \
            https://api.bitbucket.org/2.0/repositories/jeroendr/meat-demo2/pipelines/
            \ -d '  {     "target": {      "commit": {        
            "hash":"a3c4e02c9a3755eccdc3764e6ea13facdf30f923",        
            "type":"commit"       },        "selector": {          
            "type":"custom",              "pattern":"Deploy to production"         
            },        "type":"pipeline_commit_target"   }  }'```# Trigger a specific
            pipeline definition for a commit on a branch or tagYou can trigger a
            specific pipeline that is defined in your `bitbucket-pipelines.yml` file
            for a specific commit in the context of a specified reference.In
            addition to the commit revision, you specify the type and pattern of the
            selector that identifies the pipeline definition, as well as the
            reference information. The resulting pipeline will then clone the
            repository a checkout the specified reference.### Example```$ curl -X
            POST -is -u username:password \  -H 'Content-Type: application/json' \
            https://api.bitbucket.org/2.0/repositories/jeroendr/meat-demo2/pipelines/
            \ -d '  {     "target": {      "commit": {        
            "hash":"a3c4e02c9a3755eccdc3764e6ea13facdf30f923",        
            "type":"commit"       },       "selector": {          "type":
            "custom",          "pattern": "Deploy to production"       },      
            "type": "pipeline_ref_target",       "ref_name": "master",      
            "ref_type": "branch"     }  }'```# Trigger a custom pipeline with
            variablesIn addition to triggering a custom pipeline that is defined in
            your `bitbucket-pipelines.yml` file as shown in the examples above, you
            can specify variables that will be available for your build. In the
            request, provide a list of variables, specifying the following for each
            variable: key, value, and whether it should be secured or not (this
            field is optional and defaults to not secured).### Example```$ curl -X
            POST -is -u username:password \  -H 'Content-Type: application/json' \
            https://api.bitbucket.org/2.0/repositories/{workspace}/{repo_slug}/pipelines/
            \ -d '  {    "target": {      "type": "pipeline_ref_target",     
            "ref_type": "branch",      "ref_name": "master",      "selector":
            {        "type": "custom",        "pattern": "Deploy to production"     
            }    },    "variables": [      {        "key": "var1key",       
            "value": "var1value",        "secured": true      },      {       
            "key": "var2key",        "value": "var2value"      }    ]  }'```#
            Trigger a pull request pipelineYou can also initiate a pipeline for a
            specific pull request.### Example```$ curl -X POST -is -u
            username:password \  -H 'Content-Type: application/json' \
            https://api.bitbucket.org/2.0/repositories/{workspace}/{repo_slug}/pipelines/
            \ -d '  {    "target": {      "type":
            "pipeline_pullrequest_target",      "source":
            "pull-request-branch",      "destination": "master",     
            "destination_commit": {        "hash": "9f848b7"      },      "commit":
            {        "hash": "1a372fc"      },      "pullrequest": {        "id":
            "3"      },      "selector": {        "type": "pull-requests",       
            "pattern": "**"      }    }  }'```
          operationId: createPipelineForRepository
          requestBody:
            description: The pipeline to initiate.
            required: true
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/pipeline'
          responses:
            '404':
              description: The account or repository was not found.
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/error'
