apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: Create A Repository
  description: >-
    Creates a new repository.Note: In order to set the project for the newly
    created repository,pass in either the project key or the project UUID as
    part of therequest body as shown in the examples below:```$ curl -X POST -H
    "Content-Type: application/json" -d '{    "scm": "git",    "project":
    {        "key": "MARS"    }}'
    https://api.bitbucket.org/2.0/repositories/teamsinspace/hablanding```or```$
    curl -X POST -H "Content-Type: application/json" -d '{    "scm": "git",   
    "project": {        "key": "{ba516952-992a-4c2d-acbd-17d502922f96}"    }}'
    https://api.bitbucket.org/2.0/repositories/teamsinspace/hablanding```The
    project must be assigned for all repositories. If the project is not
    provided,the repository is automatically assigned to the oldest project in
    the workspace.Note: In the examples above, the workspace ID
    `teamsinspace`,and/or the repository name `hablanding` can be replaced by
    UUIDs.
  tags: []
  links:
    - title: Link
      icon: code
      url: https://example.com
spec:
  type: openapi
  lifecycle: experimental
  owner: team-c
  definition: |
    openapi: 3.1.0
    info:
      title: Create A Repository
      description: >-
        Creates a new repository.Note: In order to set the project for the newly
        created repository,pass in either the project key or the project UUID as
        part of therequest body as shown in the examples below:```$ curl -X POST -H
        "Content-Type: application/json" -d '{    "scm": "git",    "project":
        {        "key": "MARS"    }}'
        https://api.bitbucket.org/2.0/repositories/teamsinspace/hablanding```or```$
        curl -X POST -H "Content-Type: application/json" -d '{    "scm": "git",   
        "project": {        "key": "{ba516952-992a-4c2d-acbd-17d502922f96}"    }}'
        https://api.bitbucket.org/2.0/repositories/teamsinspace/hablanding```The
        project must be assigned for all repositories. If the project is not
        provided,the repository is automatically assigned to the oldest project in
        the workspace.Note: In the examples above, the workspace ID
        `teamsinspace`,and/or the repository name `hablanding` can be replaced by
        UUIDs.
    paths:
      /repositories/{workspace}/{repo_slug}:
        post:
          summary: Create A Repository
          description: >-
            Creates a new repository.Note: In order to set the project for the newly
            created repository,pass in either the project key or the project UUID as
            part of therequest body as shown in the examples below:```$ curl -X POST
            -H "Content-Type: application/json" -d '{    "scm": "git",    "project":
            {        "key": "MARS"    }}'
            https://api.bitbucket.org/2.0/repositories/teamsinspace/hablanding```or```$
            curl -X POST -H "Content-Type: application/json" -d '{    "scm":
            "git",    "project": {        "key":
            "{ba516952-992a-4c2d-acbd-17d502922f96}"    }}'
            https://api.bitbucket.org/2.0/repositories/teamsinspace/hablanding```The
            project must be assigned for all repositories. If the project is not
            provided,the repository is automatically assigned to the oldest project
            in the workspace.Note: In the examples above, the workspace ID
            `teamsinspace`,and/or the repository name `hablanding` can be replaced
            by UUIDs.
          operationId: createarepository
          requestBody:
            description: >-
              The repository that is to be created. Note that most object elements
              are optional. Elements "owner" and "full_name" are ignored as the URL
              implies them.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/repository'
          responses:
            '401':
              description: If the request was not authenticated.
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/error'
