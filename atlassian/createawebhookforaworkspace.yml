apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: Create A Webhook For A Workspace
  description: >-
    Creates a new webhook on the specified workspace.Workspace webhooks are
    fired for events from all repositories containedby that
    workspace.Example:```$ curl -X POST -u credentials -H 'Content-Type:
    application/json' 
    https://api.bitbucket.org/2.0/workspaces/my-workspace/hooks  -d '    {     
    "description": "Webhook Description",      "url":
    "https://example.com/",      "active": true,      "secret": "this is a
    really bad secret",      "events": [        "repo:push",       
    "issue:created",        "issue:updated"      ]    }'```When the `secret` is
    provided it will be used as the key to generate a HMACdigest value sent in
    the `X-Hub-Signature` header at delivery time. Passinga `null` or empty
    `secret` or not passing a `secret` will leave the webhook'ssecret unset.
    Bitbucket only generates the `X-Hub-Signature` when the webhook'ssecret is
    set.This call requires the webhook scope, as well as any scopethat applies
    to the events that the webhook subscribes to. In theexample above that
    means: `webhook`, `repository` and `issue`.The `url` must properly resolve
    and cannot be an internal, non-routed address.Only workspace owners can
    install webhooks on workspaces.
  tags: []
  links:
    - title: Link
      icon: code
      url: https://example.com
spec:
  type: openapi
  lifecycle: experimental
  owner: team-c
  definition: |
    openapi: 3.1.0
    info:
      title: Create A Webhook For A Workspace
      description: >-
        Creates a new webhook on the specified workspace.Workspace webhooks are
        fired for events from all repositories containedby that
        workspace.Example:```$ curl -X POST -u credentials -H 'Content-Type:
        application/json' 
        https://api.bitbucket.org/2.0/workspaces/my-workspace/hooks  -d '    {     
        "description": "Webhook Description",      "url":
        "https://example.com/",      "active": true,      "secret": "this is a
        really bad secret",      "events": [        "repo:push",       
        "issue:created",        "issue:updated"      ]    }'```When the `secret` is
        provided it will be used as the key to generate a HMACdigest value sent in
        the `X-Hub-Signature` header at delivery time. Passinga `null` or empty
        `secret` or not passing a `secret` will leave the webhook'ssecret unset.
        Bitbucket only generates the `X-Hub-Signature` when the webhook'ssecret is
        set.This call requires the webhook scope, as well as any scopethat applies
        to the events that the webhook subscribes to. In theexample above that
        means: `webhook`, `repository` and `issue`.The `url` must properly resolve
        and cannot be an internal, non-routed address.Only workspace owners can
        install webhooks on workspaces.
    paths:
      /workspaces/{workspace}/hooks:
        post:
          summary: Create A Webhook For A Workspace
          description: >-
            Creates a new webhook on the specified workspace.Workspace webhooks are
            fired for events from all repositories containedby that
            workspace.Example:```$ curl -X POST -u credentials -H 'Content-Type:
            application/json' 
            https://api.bitbucket.org/2.0/workspaces/my-workspace/hooks  -d '   
            {      "description": "Webhook Description",      "url":
            "https://example.com/",      "active": true,      "secret": "this is a
            really bad secret",      "events": [        "repo:push",       
            "issue:created",        "issue:updated"      ]    }'```When the `secret`
            is provided it will be used as the key to generate a HMACdigest value
            sent in the `X-Hub-Signature` header at delivery time. Passinga `null`
            or empty `secret` or not passing a `secret` will leave the
            webhook'ssecret unset. Bitbucket only generates the `X-Hub-Signature`
            when the webhook'ssecret is set.This call requires the webhook scope, as
            well as any scopethat applies to the events that the webhook subscribes
            to. In theexample above that means: `webhook`, `repository` and
            `issue`.The `url` must properly resolve and cannot be an internal,
            non-routed address.Only workspace owners can install webhooks on
            workspaces.
          operationId: createawebhookforaworkspace
          responses:
            '404':
              description: If the specified workspace does not exist.
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/error'
