apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: Update The Branching Model Config For A Project
  description: >-
    Update the branching model configuration for a project.The `development`
    branch can be configured to a specific branch or totrack the main branch.
    Any branch name can be supplied, but will onlysuccessfully be applied to a
    repository via inheritance if that branchexists for that repository. Only
    the passed properties will be updated. Theproperties not passed will be left
    unchanged. A request without a`development` property will leave the
    development branch unchanged.The `production` branch can be a specific
    branch, the mainbranch or disabled. Any branch name can be supplied, but
    will onlysuccessfully be applied to a repository via inheritance if that
    branchexists for that repository. The `enabled` property can be used to
    enable (`true`)or disable (`false`) it. Only the passed properties will be
    updated. Theproperties not passed will be left unchanged. A request without
    a`production` property will leave the production branch unchanged.The
    `branch_types` property contains the branch types to be updated.Only the
    branch types passed will be updated. All updates will berejected if it would
    leave the branching model in an invalid state.For branch types this means
    that:1. The prefixes for all enabled branch types are valid. For example,  
    it is not possible to use '*' inside a Git prefix.2. A prefix of an enabled
    branch type must not be a prefix of another   enabled branch type. This is
    to ensure that a branch can be easily   classified by its prefix
    unambiguously.It is possible to store an invalid prefix if that branch type
    would beleft disabled. Only the passed properties will be updated.
    Theproperties not passed will be left unchanged. Each branch type musthave a
    `kind` property to identify it.
  tags: []
  links:
    - title: Link
      icon: code
      url: https://example.com
spec:
  type: openapi
  lifecycle: experimental
  owner: team-c
  definition: |
    openapi: 3.1.0
    info:
      title: Update The Branching Model Config For A Project
      description: >-
        Update the branching model configuration for a project.The `development`
        branch can be configured to a specific branch or totrack the main branch.
        Any branch name can be supplied, but will onlysuccessfully be applied to a
        repository via inheritance if that branchexists for that repository. Only
        the passed properties will be updated. Theproperties not passed will be left
        unchanged. A request without a`development` property will leave the
        development branch unchanged.The `production` branch can be a specific
        branch, the mainbranch or disabled. Any branch name can be supplied, but
        will onlysuccessfully be applied to a repository via inheritance if that
        branchexists for that repository. The `enabled` property can be used to
        enable (`true`)or disable (`false`) it. Only the passed properties will be
        updated. Theproperties not passed will be left unchanged. A request without
        a`production` property will leave the production branch unchanged.The
        `branch_types` property contains the branch types to be updated.Only the
        branch types passed will be updated. All updates will berejected if it would
        leave the branching model in an invalid state.For branch types this means
        that:1. The prefixes for all enabled branch types are valid. For example,  
        it is not possible to use '*' inside a Git prefix.2. A prefix of an enabled
        branch type must not be a prefix of another   enabled branch type. This is
        to ensure that a branch can be easily   classified by its prefix
        unambiguously.It is possible to store an invalid prefix if that branch type
        would beleft disabled. Only the passed properties will be updated.
        Theproperties not passed will be left unchanged. Each branch type musthave a
        `kind` property to identify it.
    paths:
      /workspaces/{workspace}/projects/{project_key}/branching-model/settings:
        put:
          summary: Update The Branching Model Config For A Project
          description: >-
            Update the branching model configuration for a project.The `development`
            branch can be configured to a specific branch or totrack the main
            branch. Any branch name can be supplied, but will onlysuccessfully be
            applied to a repository via inheritance if that branchexists for that
            repository. Only the passed properties will be updated. Theproperties
            not passed will be left unchanged. A request without a`development`
            property will leave the development branch unchanged.The `production`
            branch can be a specific branch, the mainbranch or disabled. Any branch
            name can be supplied, but will onlysuccessfully be applied to a
            repository via inheritance if that branchexists for that repository. The
            `enabled` property can be used to enable (`true`)or disable (`false`)
            it. Only the passed properties will be updated. Theproperties not passed
            will be left unchanged. A request without a`production` property will
            leave the production branch unchanged.The `branch_types` property
            contains the branch types to be updated.Only the branch types passed
            will be updated. All updates will berejected if it would leave the
            branching model in an invalid state.For branch types this means that:1.
            The prefixes for all enabled branch types are valid. For example,   it
            is not possible to use '*' inside a Git prefix.2. A prefix of an enabled
            branch type must not be a prefix of another   enabled branch type. This
            is to ensure that a branch can be easily   classified by its prefix
            unambiguously.It is possible to store an invalid prefix if that branch
            type would beleft disabled. Only the passed properties will be updated.
            Theproperties not passed will be left unchanged. Each branch type
            musthave a `kind` property to identify it.
          operationId: updatethebranchingmodelconfigforaproject
          responses:
            '404':
              description: If the project does not exist
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/error'
