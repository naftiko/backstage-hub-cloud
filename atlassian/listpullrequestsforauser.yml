apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: List Pull Requests For A User
  description: >-
    Returns all pull requests authored by the specified user.By default only
    open pull requests are returned. This can be controlledusing the `state`
    query parameter. To retrieve pull requests that arein one of multiple
    states, repeat the `state` parameter for eachindividual state.This endpoint
    also supports filtering and sorting of the results. See[filtering and
    sorting](/cloud/bitbucket/rest/intro/#filtering) for more details.
  tags: []
  links:
    - title: Link
      icon: code
      url: https://example.com
spec:
  type: openapi
  lifecycle: experimental
  owner: team-c
  definition: |
    openapi: 3.1.0
    info:
      title: List Pull Requests For A User
      description: >-
        Returns all pull requests authored by the specified user.By default only
        open pull requests are returned. This can be controlledusing the `state`
        query parameter. To retrieve pull requests that arein one of multiple
        states, repeat the `state` parameter for eachindividual state.This endpoint
        also supports filtering and sorting of the results. See[filtering and
        sorting](/cloud/bitbucket/rest/intro/#filtering) for more details.
    paths:
      /pullrequests/{selected_user}:
        get:
          summary: List Pull Requests For A User
          description: >-
            Returns all pull requests authored by the specified user.By default only
            open pull requests are returned. This can be controlledusing the `state`
            query parameter. To retrieve pull requests that arein one of multiple
            states, repeat the `state` parameter for eachindividual state.This
            endpoint also supports filtering and sorting of the results.
            See[filtering and sorting](/cloud/bitbucket/rest/intro/#filtering) for
            more details.
          operationId: listpullrequestsforauser
          responses:
            '404':
              description: If the specified user does not exist.
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/error'
