apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: Update The Branching Model Config For A Repository
  description: >-
    Update the branching model configuration for a repository.The `development`
    branch can be configured to a specific branch or totrack the main branch.
    When set to a specific branch it mustcurrently exist. Only the passed
    properties will be updated. Theproperties not passed will be left unchanged.
    A request without a`development` property will leave the development branch
    unchanged.It is possible for the `development` branch to be invalid.
    Thishappens when it points at a specific branch that has beendeleted. This
    is indicated in the `is_valid` field for the branch. It isnot possible to
    update the settings for `development` if thatwould leave the branch in an
    invalid state. Such a request will berejected.The `production` branch can be
    a specific branch, the mainbranch or disabled. When set to a specific branch
    it must currentlyexist. The `enabled` property can be used to enable
    (`true`) ordisable (`false`) it. Only the passed properties will be updated.
    Theproperties not passed will be left unchanged. A request without
    a`production` property will leave the production branch unchanged.It is
    possible for the `production` branch to be invalid. Thishappens when it
    points at a specific branch that has beendeleted. This is indicated in the
    `is_valid` field for the branch. Arequest that would leave `production`
    enabled and invalid will berejected. It is possible to update `production`
    and make it invalid ifit would also be left disabled.The `branch_types`
    property contains the branch types to be updated.Only the branch types
    passed will be updated. All updates will berejected if it would leave the
    branching model in an invalid state.For branch types this means that:1. The
    prefixes for all enabled branch types are valid. For example,   it is not
    possible to use '*' inside a Git prefix.2. A prefix of an enabled branch
    type must not be a prefix of another   enabled branch type. This is to
    ensure that a branch can be easily   classified by its prefix
    unambiguously.It is possible to store an invalid prefix if that branch type
    would beleft disabled. Only the passed properties will be updated.
    Theproperties not passed will be left unchanged. Each branch type musthave a
    `kind` property to identify it.There is currently a side effect when using
    this API endpoint. If therepository is inheriting branching model settings
    from its project,updating the branching model for this repository will
    disable theproject setting inheritance.We have deprecated this side effect
    and will remove it on 1 August 2022.
  tags: []
  links:
    - title: Link
      icon: code
      url: https://example.com
spec:
  type: openapi
  lifecycle: experimental
  owner: team-c
  definition: |
    openapi: 3.1.0
    info:
      title: Update The Branching Model Config For A Repository
      description: >-
        Update the branching model configuration for a repository.The `development`
        branch can be configured to a specific branch or totrack the main branch.
        When set to a specific branch it mustcurrently exist. Only the passed
        properties will be updated. Theproperties not passed will be left unchanged.
        A request without a`development` property will leave the development branch
        unchanged.It is possible for the `development` branch to be invalid.
        Thishappens when it points at a specific branch that has beendeleted. This
        is indicated in the `is_valid` field for the branch. It isnot possible to
        update the settings for `development` if thatwould leave the branch in an
        invalid state. Such a request will berejected.The `production` branch can be
        a specific branch, the mainbranch or disabled. When set to a specific branch
        it must currentlyexist. The `enabled` property can be used to enable
        (`true`) ordisable (`false`) it. Only the passed properties will be updated.
        Theproperties not passed will be left unchanged. A request without
        a`production` property will leave the production branch unchanged.It is
        possible for the `production` branch to be invalid. Thishappens when it
        points at a specific branch that has beendeleted. This is indicated in the
        `is_valid` field for the branch. Arequest that would leave `production`
        enabled and invalid will berejected. It is possible to update `production`
        and make it invalid ifit would also be left disabled.The `branch_types`
        property contains the branch types to be updated.Only the branch types
        passed will be updated. All updates will berejected if it would leave the
        branching model in an invalid state.For branch types this means that:1. The
        prefixes for all enabled branch types are valid. For example,   it is not
        possible to use '*' inside a Git prefix.2. A prefix of an enabled branch
        type must not be a prefix of another   enabled branch type. This is to
        ensure that a branch can be easily   classified by its prefix
        unambiguously.It is possible to store an invalid prefix if that branch type
        would beleft disabled. Only the passed properties will be updated.
        Theproperties not passed will be left unchanged. Each branch type musthave a
        `kind` property to identify it.There is currently a side effect when using
        this API endpoint. If therepository is inheriting branching model settings
        from its project,updating the branching model for this repository will
        disable theproject setting inheritance.We have deprecated this side effect
        and will remove it on 1 August 2022.
    paths:
      /repositories/{workspace}/{repo_slug}/branching-model/settings:
        put:
          summary: Update The Branching Model Config For A Repository
          description: >-
            Update the branching model configuration for a repository.The
            `development` branch can be configured to a specific branch or totrack
            the main branch. When set to a specific branch it mustcurrently exist.
            Only the passed properties will be updated. Theproperties not passed
            will be left unchanged. A request without a`development` property will
            leave the development branch unchanged.It is possible for the
            `development` branch to be invalid. Thishappens when it points at a
            specific branch that has beendeleted. This is indicated in the
            `is_valid` field for the branch. It isnot possible to update the
            settings for `development` if thatwould leave the branch in an invalid
            state. Such a request will berejected.The `production` branch can be a
            specific branch, the mainbranch or disabled. When set to a specific
            branch it must currentlyexist. The `enabled` property can be used to
            enable (`true`) ordisable (`false`) it. Only the passed properties will
            be updated. Theproperties not passed will be left unchanged. A request
            without a`production` property will leave the production branch
            unchanged.It is possible for the `production` branch to be invalid.
            Thishappens when it points at a specific branch that has beendeleted.
            This is indicated in the `is_valid` field for the branch. Arequest that
            would leave `production` enabled and invalid will berejected. It is
            possible to update `production` and make it invalid ifit would also be
            left disabled.The `branch_types` property contains the branch types to
            be updated.Only the branch types passed will be updated. All updates
            will berejected if it would leave the branching model in an invalid
            state.For branch types this means that:1. The prefixes for all enabled
            branch types are valid. For example,   it is not possible to use '*'
            inside a Git prefix.2. A prefix of an enabled branch type must not be a
            prefix of another   enabled branch type. This is to ensure that a branch
            can be easily   classified by its prefix unambiguously.It is possible to
            store an invalid prefix if that branch type would beleft disabled. Only
            the passed properties will be updated. Theproperties not passed will be
            left unchanged. Each branch type musthave a `kind` property to identify
            it.There is currently a side effect when using this API endpoint. If
            therepository is inheriting branching model settings from its
            project,updating the branching model for this repository will disable
            theproject setting inheritance.We have deprecated this side effect and
            will remove it on 1 August 2022.
          operationId: updatethebranchingmodelconfigforarepository
          responses:
            '404':
              description: If the repository does not exist
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/error'
