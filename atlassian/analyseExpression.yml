apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: Analyse Jira Expression
  description: >-
    Analyses and validates Jira expressions.As an experimental feature, this
    operation can also attempt to type-check the expressions.Learn more about
    Jira expressions in the
    [documentation](https://developer.atlassian.com/cloud/jira/platform/jira-expressions/).**[Permissions](#permissions)
    required**: None.
  tags: []
  links:
    - title: Link
      icon: code
      url: https://example.com
spec:
  type: openapi
  lifecycle: experimental
  owner: team-c
  definition: |
    openapi: 3.1.0
    info:
      title: Analyse Jira Expression
      description: >-
        Analyses and validates Jira expressions.As an experimental feature, this
        operation can also attempt to type-check the expressions.Learn more about
        Jira expressions in the
        [documentation](https://developer.atlassian.com/cloud/jira/platform/jira-expressions/).**[Permissions](#permissions)
        required**: None.
    paths:
      /rest/api/3/expression/analyse:
        post:
          summary: Analyse Jira Expression
          description: >-
            Analyses and validates Jira expressions.As an experimental feature, this
            operation can also attempt to type-check the expressions.Learn more
            about Jira expressions in the
            [documentation](https://developer.atlassian.com/cloud/jira/platform/jira-expressions/).**[Permissions](#permissions)
            required**: None.
          operationId: analyseExpression
          requestBody:
            description: The Jira expressions to analyse.
            required: true
            content:
              application/json:
                example:
                  contextVariables:
                    listOfStrings: List<String>
                    record: '{ a: Number, b: String }'
                    value: User
                  expressions:
                    - issues.map(issue => issue.properties['property_key'])
                schema:
                  $ref: '#/components/schemas/JiraExpressionForAnalysis'
          responses:
            '404':
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/ErrorCollection'
              description: 404 response
