apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: Get My Permissions
  description: >-
    Returns a list of permissions indicating which permissions the user has.
    Details of the user's permissions can be obtained in a global, project,
    issue or comment context.The user is reported as having a project
    permission: *  in the global context, if the user has the project permission
    in any project. *  for a project, where the project permission is determined
    using issue data, if the user meets the permission's criteria for any issue
    in the project. Otherwise, if the user has the project permission in the
    project. *  for an issue, where a project permission is determined using
    issue data, if the user has the permission in the issue. Otherwise, if the
    user has the project permission in the project containing the issue. *  for
    a comment, where the user has both the permission to browse the comment and
    the project permission for the comment's parent issue. Only the
    BROWSE\_PROJECTS permission is supported. If a `commentId` is provided whose
    `permissions` does not equal BROWSE\_PROJECTS, a 400 error will be
    returned.This means that users may be shown as having an issue permission
    (such as EDIT\_ISSUES) in the global context or a project context but may
    not have the permission for any or all issues. For example, if Reporters
    have the EDIT\_ISSUES permission a user would be shown as having this
    permission in the global context or the context of a project, because any
    user can be a reporter. However, if they are not the user who reported the
    issue queried they would not have EDIT\_ISSUES permission for that
    issue.Global permissions are unaffected by context.This operation can be
    accessed anonymously.**[Permissions](#permissions) required:** None.
  tags: []
  links:
    - title: Link
      icon: code
      url: https://example.com
spec:
  type: openapi
  lifecycle: experimental
  owner: team-c
  definition: |
    openapi: 3.1.0
    info:
      title: Get My Permissions
      description: >-
        Returns a list of permissions indicating which permissions the user has.
        Details of the user's permissions can be obtained in a global, project,
        issue or comment context.The user is reported as having a project
        permission: *  in the global context, if the user has the project permission
        in any project. *  for a project, where the project permission is determined
        using issue data, if the user meets the permission's criteria for any issue
        in the project. Otherwise, if the user has the project permission in the
        project. *  for an issue, where a project permission is determined using
        issue data, if the user has the permission in the issue. Otherwise, if the
        user has the project permission in the project containing the issue. *  for
        a comment, where the user has both the permission to browse the comment and
        the project permission for the comment's parent issue. Only the
        BROWSE\_PROJECTS permission is supported. If a `commentId` is provided whose
        `permissions` does not equal BROWSE\_PROJECTS, a 400 error will be
        returned.This means that users may be shown as having an issue permission
        (such as EDIT\_ISSUES) in the global context or a project context but may
        not have the permission for any or all issues. For example, if Reporters
        have the EDIT\_ISSUES permission a user would be shown as having this
        permission in the global context or the context of a project, because any
        user can be a reporter. However, if they are not the user who reported the
        issue queried they would not have EDIT\_ISSUES permission for that
        issue.Global permissions are unaffected by context.This operation can be
        accessed anonymously.**[Permissions](#permissions) required:** None.
    paths:
      /rest/api/3/mypermissions:
        get:
          summary: Get My Permissions
          description: >-
            Returns a list of permissions indicating which permissions the user has.
            Details of the user's permissions can be obtained in a global, project,
            issue or comment context.The user is reported as having a project
            permission: *  in the global context, if the user has the project
            permission in any project. *  for a project, where the project
            permission is determined using issue data, if the user meets the
            permission's criteria for any issue in the project. Otherwise, if the
            user has the project permission in the project. *  for an issue, where a
            project permission is determined using issue data, if the user has the
            permission in the issue. Otherwise, if the user has the project
            permission in the project containing the issue. *  for a comment, where
            the user has both the permission to browse the comment and the project
            permission for the comment's parent issue. Only the BROWSE\_PROJECTS
            permission is supported. If a `commentId` is provided whose
            `permissions` does not equal BROWSE\_PROJECTS, a 400 error will be
            returned.This means that users may be shown as having an issue
            permission (such as EDIT\_ISSUES) in the global context or a project
            context but may not have the permission for any or all issues. For
            example, if Reporters have the EDIT\_ISSUES permission a user would be
            shown as having this permission in the global context or the context of
            a project, because any user can be a reporter. However, if they are not
            the user who reported the issue queried they would not have EDIT\_ISSUES
            permission for that issue.Global permissions are unaffected by
            context.This operation can be accessed
            anonymously.**[Permissions](#permissions) required:** None.
          operationId: getMyPermissions
          responses:
            '404':
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/ErrorCollection'
              description: >-
                Returned if the project or issue is not found or the user does not
                have permission to view the project or issue.
