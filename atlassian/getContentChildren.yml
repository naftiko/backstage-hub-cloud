apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: Get Content Children
  description: >-
    Deprecated, use [Confluence's v2
    API](https://developer.atlassian.com/cloud/confluence/rest/v2/intro/).Returns
    a map of the direct children of a piece of content. A piece of contenthas
    different types of child content, depending on its type. These arethe
    default parent-child content type relationships:- `page`: child content is
    `page`, `comment`, `attachment`- `blogpost`: child content is `comment`,
    `attachment`- `attachment`: child content is `comment`- `comment`: child
    content is `attachment`Apps can override these default relationships. Apps
    can also introducenew content types that create new parent-child content
    relationships.Note, the map will always include all child content types that
    are validfor the content. However, if the content has no instances of a
    child contenttype, the map will contain an empty array for that child
    content type.**[Permissions](https://confluence.atlassian.com/x/_AozKw)
    required**: 'View' permission for the space,and permission to view the
    content if it is a page.
  tags: []
  links:
    - title: Link
      icon: code
      url: https://example.com
spec:
  type: openapi
  lifecycle: experimental
  owner: team-c
  definition: |
    openapi: 3.1.0
    info:
      title: Get Content Children
      description: >-
        Deprecated, use [Confluence's v2
        API](https://developer.atlassian.com/cloud/confluence/rest/v2/intro/).Returns
        a map of the direct children of a piece of content. A piece of contenthas
        different types of child content, depending on its type. These arethe
        default parent-child content type relationships:- `page`: child content is
        `page`, `comment`, `attachment`- `blogpost`: child content is `comment`,
        `attachment`- `attachment`: child content is `comment`- `comment`: child
        content is `attachment`Apps can override these default relationships. Apps
        can also introducenew content types that create new parent-child content
        relationships.Note, the map will always include all child content types that
        are validfor the content. However, if the content has no instances of a
        child contenttype, the map will contain an empty array for that child
        content type.**[Permissions](https://confluence.atlassian.com/x/_AozKw)
        required**: 'View' permission for the space,and permission to view the
        content if it is a page.
    paths:
      /wiki/rest/api/content/{id}/child:
        get:
          summary: Get Content Children
          description: >-
            Deprecated, use [Confluence's v2
            API](https://developer.atlassian.com/cloud/confluence/rest/v2/intro/).Returns
            a map of the direct children of a piece of content. A piece of
            contenthas different types of child content, depending on its type.
            These arethe default parent-child content type relationships:- `page`:
            child content is `page`, `comment`, `attachment`- `blogpost`: child
            content is `comment`, `attachment`- `attachment`: child content is
            `comment`- `comment`: child content is `attachment`Apps can override
            these default relationships. Apps can also introducenew content types
            that create new parent-child content relationships.Note, the map will
            always include all child content types that are validfor the content.
            However, if the content has no instances of a child contenttype, the map
            will contain an empty array for that child content
            type.**[Permissions](https://confluence.atlassian.com/x/_AozKw)
            required**: 'View' permission for the space,and permission to view the
            content if it is a page.
          operationId: getContentChildren
          responses:
            '404':
              description: |-
                Returned if;

                - There is no content with the given ID.
                - The calling user does not have permission to view the content.
              content: {}
