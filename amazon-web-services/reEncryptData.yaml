apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: reencryptdata
  description: >-
    Re-encrypt ciphertext using DUKPT, Symmetric and Asymmetric Data Encryption
    Keys.  You can either generate an encryption key within Amazon Web Services
    Payment Cryptography by calling CreateKey or import your own encryption key
    by calling ImportKey. The KeyArn for use with this operation must be in a
    compatible key state with KeyModesOfUse set to Encrypt. In asymmetric
    encryption, ciphertext is encrypted using public component (imported by
    calling ImportKey) of the asymmetric key pair created outside of Amazon Web
    Services Payment Cryptography.  For symmetric and DUKPT encryption, Amazon
    Web Services Payment Cryptography supports TDES and AES algorithms. For
    asymmetric encryption, Amazon Web Services Payment Cryptography supports
    RSA. To encrypt using DUKPT, a DUKPT key must already exist within your
    account with KeyModesOfUse set to DeriveKey or a new DUKPT can be generated
    by calling CreateKey. For information about valid keys for this operation,
    see Understanding key attributes and Key types for specific data operations
    in the Amazon Web Services Payment Cryptography User Guide.   Cross-account
    use: This operation can't be used across different Amazon Web Services
    accounts.  Related operations:     DecryptData     EncryptData    
    GetPublicCertificate     ImportKey   
  tags: []
  links:
    - title: Link
      icon: code
      url: https://example.com
spec:
  type: openapi
  lifecycle: experimental
  owner: team-c
  definition: |
    openapi: 3.1.0
    info:
      title: Reencryptdata
      description: >-
        Re-encrypt ciphertext using DUKPT, Symmetric and Asymmetric Data Encryption
        Keys.  You can either generate an encryption key within Amazon Web Services
        Payment Cryptography by calling CreateKey or import your own encryption key
        by calling ImportKey. The KeyArn for use with this operation must be in a
        compatible key state with KeyModesOfUse set to Encrypt. In asymmetric
        encryption, ciphertext is encrypted using public component (imported by
        calling ImportKey) of the asymmetric key pair created outside of Amazon Web
        Services Payment Cryptography.  For symmetric and DUKPT encryption, Amazon
        Web Services Payment Cryptography supports TDES and AES algorithms. For
        asymmetric encryption, Amazon Web Services Payment Cryptography supports
        RSA. To encrypt using DUKPT, a DUKPT key must already exist within your
        account with KeyModesOfUse set to DeriveKey or a new DUKPT can be generated
        by calling CreateKey. For information about valid keys for this operation,
        see Understanding key attributes and Key types for specific data operations
        in the Amazon Web Services Payment Cryptography User Guide.   Cross-account
        use: This operation can't be used across different Amazon Web Services
        accounts.  Related operations:     DecryptData     EncryptData    
        GetPublicCertificate     ImportKey   
    paths:
      /keys/{IncomingKeyIdentifier}/reencrypt:
        POST:
          summary: Reencryptdata
          description: >-
            Re-encrypt ciphertext using DUKPT, Symmetric and Asymmetric Data
            Encryption Keys.  You can either generate an encryption key within
            Amazon Web Services Payment Cryptography by calling CreateKey or import
            your own encryption key by calling ImportKey. The KeyArn for use with
            this operation must be in a compatible key state with KeyModesOfUse set
            to Encrypt. In asymmetric encryption, ciphertext is encrypted using
            public component (imported by calling ImportKey) of the asymmetric key
            pair created outside of Amazon Web Services Payment Cryptography.  For
            symmetric and DUKPT encryption, Amazon Web Services Payment Cryptography
            supports TDES and AES algorithms. For asymmetric encryption, Amazon Web
            Services Payment Cryptography supports RSA. To encrypt using DUKPT, a
            DUKPT key must already exist within your account with KeyModesOfUse set
            to DeriveKey or a new DUKPT can be generated by calling CreateKey. For
            information about valid keys for this operation, see Understanding key
            attributes and Key types for specific data operations in the Amazon Web
            Services Payment Cryptography User Guide.   Cross-account use: This
            operation can't be used across different Amazon Web Services accounts. 
            Related operations:     DecryptData     EncryptData    
            GetPublicCertificate     ImportKey   
          operationId: reEncryptData
