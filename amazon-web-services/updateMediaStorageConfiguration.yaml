apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: updatemediastorageconfiguration
  description: >-
    Associates a SignalingChannel to a stream to store the media. There are two
    signaling modes that you can specify :   If StorageStatus is enabled, the
    data will be stored in the StreamARN provided. In order for WebRTC Ingestion
    to work, the stream must have data retention enabled.   If StorageStatus is
    disabled, no data will be stored, and the StreamARN parameter will not be
    needed.     If StorageStatus is enabled, direct peer-to-peer (master-viewer)
    connections no longer occur. Peers connect directly to the storage session.
    You must call the JoinStorageSession API to trigger an SDP offer send and
    establish a connection between a peer and the storage session.  
  tags: []
  links:
    - title: Link
      icon: code
      url: https://example.com
spec:
  type: openapi
  lifecycle: experimental
  owner: team-c
  definition: |
    openapi: 3.1.0
    info:
      title: Updatemediastorageconfiguration
      description: >-
        Associates a SignalingChannel to a stream to store the media. There are two
        signaling modes that you can specify :   If StorageStatus is enabled, the
        data will be stored in the StreamARN provided. In order for WebRTC Ingestion
        to work, the stream must have data retention enabled.   If StorageStatus is
        disabled, no data will be stored, and the StreamARN parameter will not be
        needed.     If StorageStatus is enabled, direct peer-to-peer (master-viewer)
        connections no longer occur. Peers connect directly to the storage session.
        You must call the JoinStorageSession API to trigger an SDP offer send and
        establish a connection between a peer and the storage session.  
    paths:
      /updateMediaStorageConfiguration:
        POST:
          summary: Updatemediastorageconfiguration
          description: >-
            Associates a SignalingChannel to a stream to store the media. There are
            two signaling modes that you can specify :   If StorageStatus is
            enabled, the data will be stored in the StreamARN provided. In order for
            WebRTC Ingestion to work, the stream must have data retention enabled.  
            If StorageStatus is disabled, no data will be stored, and the StreamARN
            parameter will not be needed.     If StorageStatus is enabled, direct
            peer-to-peer (master-viewer) connections no longer occur. Peers connect
            directly to the storage session. You must call the JoinStorageSession
            API to trigger an SDP offer send and establish a connection between a
            peer and the storage session.  
          operationId: updateMediaStorageConfiguration
