apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: Writerecords
  description: >-
    Enables you to write your time-series data into Timestream. You can specify
    a single data point or a batch of data points to be inserted into the
    system. Timestream offers you a flexible schema that auto detects the column
    names and data types for your Timestream tables based on the dimension names
    and data types of the data points you specify when invoking writes into the
    database.  Timestream supports eventual consistency read semantics. This
    means that when you query data immediately after writing a batch of data
    into Timestream, the query results might not reflect the results of a
    recently completed write operation. The results may also include some stale
    data. If you repeat the query request after a short time, the results should
    return the latest data. Service quotas apply.  See code sample for details. 
    Upserts  You can use the Version parameter in a WriteRecords request to
    update data points. Timestream tracks a version number with each record.
    Version defaults to 1 when it's not specified for the record in the request.
    Timestream updates an existing record’s measure value along with its Version
    when it receives a write request with a higher Version number for that
    record. When it receives an update request where the measure value is the
    same as that of the existing record, Timestream still updates Version, if it
    is greater than the existing value of Version. You can update a data point
    as many times as desired, as long as the value of Version continuously
    increases.   For example, suppose you write a new record without indicating
    Version in the request. Timestream stores this record, and set Version to 1.
    Now, suppose you try to update this record with a WriteRecords request of
    the same record with a different measure value but, like before, do not
    provide Version. In this case, Timestream will reject this update with a
    RejectedRecordsException since the updated record’s version is not greater
    than the existing value of Version.  However, if you were to resend the
    update request with Version set to 2, Timestream would then succeed in
    updating the record’s value, and the Version would be set to 2. Next,
    suppose you sent a WriteRecords request with this same record and an
    identical measure value, but with Version set to 3. In this case, Timestream
    would only update Version to 3. Any further updates would need to send a
    version number greater than 3, or the update requests would receive a
    RejectedRecordsException. 
  tags: []
  links:
    - title: Link
      icon: code
      url: https://example.com
spec:
  type: openapi
  lifecycle: experimental
  owner: team-c
  definition: |
    openapi: 3.1.0
    info:
      title: Writerecords
      description: >-
        Enables you to write your time-series data into Timestream. You can specify
        a single data point or a batch of data points to be inserted into the
        system. Timestream offers you a flexible schema that auto detects the column
        names and data types for your Timestream tables based on the dimension names
        and data types of the data points you specify when invoking writes into the
        database.  Timestream supports eventual consistency read semantics. This
        means that when you query data immediately after writing a batch of data
        into Timestream, the query results might not reflect the results of a
        recently completed write operation. The results may also include some stale
        data. If you repeat the query request after a short time, the results should
        return the latest data. Service quotas apply.  See code sample for details. 
        Upserts  You can use the Version parameter in a WriteRecords request to
        update data points. Timestream tracks a version number with each record.
        Version defaults to 1 when it's not specified for the record in the request.
        Timestream updates an existing record’s measure value along with its Version
        when it receives a write request with a higher Version number for that
        record. When it receives an update request where the measure value is the
        same as that of the existing record, Timestream still updates Version, if it
        is greater than the existing value of Version. You can update a data point
        as many times as desired, as long as the value of Version continuously
        increases.   For example, suppose you write a new record without indicating
        Version in the request. Timestream stores this record, and set Version to 1.
        Now, suppose you try to update this record with a WriteRecords request of
        the same record with a different measure value but, like before, do not
        provide Version. In this case, Timestream will reject this update with a
        RejectedRecordsException since the updated record’s version is not greater
        than the existing value of Version.  However, if you were to resend the
        update request with Version set to 2, Timestream would then succeed in
        updating the record’s value, and the Version would be set to 2. Next,
        suppose you sent a WriteRecords request with this same record and an
        identical measure value, but with Version set to 3. In this case, Timestream
        would only update Version to 3. Any further updates would need to send a
        version number greater than 3, or the update requests would receive a
        RejectedRecordsException. 
    paths:
      /:
        POST:
          summary: Writerecords
          description: >-
            Enables you to write your time-series data into Timestream. You can
            specify a single data point or a batch of data points to be inserted
            into the system. Timestream offers you a flexible schema that auto
            detects the column names and data types for your Timestream tables based
            on the dimension names and data types of the data points you specify
            when invoking writes into the database.  Timestream supports eventual
            consistency read semantics. This means that when you query data
            immediately after writing a batch of data into Timestream, the query
            results might not reflect the results of a recently completed write
            operation. The results may also include some stale data. If you repeat
            the query request after a short time, the results should return the
            latest data. Service quotas apply.  See code sample for details. 
            Upserts  You can use the Version parameter in a WriteRecords request to
            update data points. Timestream tracks a version number with each record.
            Version defaults to 1 when it's not specified for the record in the
            request. Timestream updates an existing record’s measure value along
            with its Version when it receives a write request with a higher Version
            number for that record. When it receives an update request where the
            measure value is the same as that of the existing record, Timestream
            still updates Version, if it is greater than the existing value of
            Version. You can update a data point as many times as desired, as long
            as the value of Version continuously increases.   For example, suppose
            you write a new record without indicating Version in the request.
            Timestream stores this record, and set Version to 1. Now, suppose you
            try to update this record with a WriteRecords request of the same record
            with a different measure value but, like before, do not provide Version.
            In this case, Timestream will reject this update with a
            RejectedRecordsException since the updated record’s version is not
            greater than the existing value of Version.  However, if you were to
            resend the update request with Version set to 2, Timestream would then
            succeed in updating the record’s value, and the Version would be set to
            2. Next, suppose you sent a WriteRecords request with this same record
            and an identical measure value, but with Version set to 3. In this case,
            Timestream would only update Version to 3. Any further updates would
            need to send a version number greater than 3, or the update requests
            would receive a RejectedRecordsException. 
          operationId: writeRecords
