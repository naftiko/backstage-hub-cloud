apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: gettracesummaries
  description: >-
    Retrieves IDs and annotations for traces available for a specified time
    frame using an optional filter. To get the full traces, pass the trace IDs
    to BatchGetTraces. A filter expression can target traced requests that hit
    specific service nodes or edges, have errors, or come from a known user. For
    example, the following filter expression targets traces that pass through
    api.example.com:  service("api.example.com")  This filter expression finds
    traces that have an annotation named account with the value 12345: 
    annotation.account = "12345"  For a full list of indexed fields and keywords
    that you can use in filter expressions, see Using Filter Expressions in the
    Amazon Web Services X-Ray Developer Guide.
  tags: []
  links:
    - title: Link
      icon: code
      url: https://example.com
spec:
  type: openapi
  lifecycle: experimental
  owner: team-c
  definition: |
    openapi: 3.1.0
    info:
      title: Gettracesummaries
      description: >-
        Retrieves IDs and annotations for traces available for a specified time
        frame using an optional filter. To get the full traces, pass the trace IDs
        to BatchGetTraces. A filter expression can target traced requests that hit
        specific service nodes or edges, have errors, or come from a known user. For
        example, the following filter expression targets traces that pass through
        api.example.com:  service("api.example.com")  This filter expression finds
        traces that have an annotation named account with the value 12345: 
        annotation.account = "12345"  For a full list of indexed fields and keywords
        that you can use in filter expressions, see Using Filter Expressions in the
        Amazon Web Services X-Ray Developer Guide.
    paths:
      /TraceSummaries:
        POST:
          summary: Gettracesummaries
          description: >-
            Retrieves IDs and annotations for traces available for a specified time
            frame using an optional filter. To get the full traces, pass the trace
            IDs to BatchGetTraces. A filter expression can target traced requests
            that hit specific service nodes or edges, have errors, or come from a
            known user. For example, the following filter expression targets traces
            that pass through api.example.com:  service("api.example.com")  This
            filter expression finds traces that have an annotation named account
            with the value 12345:  annotation.account = "12345"  For a full list of
            indexed fields and keywords that you can use in filter expressions, see
            Using Filter Expressions in the Amazon Web Services X-Ray Developer
            Guide.
          operationId: getTraceSummaries
