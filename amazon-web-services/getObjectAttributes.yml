apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: Getobjectattributes
  description: >-
    Retrieves all the metadata from an object without returning the object
    itself. This operation is useful if you're interested only in an object's
    metadata.   GetObjectAttributes combines the functionality of HeadObject and
    ListParts. All of the data returned with each of those individual calls can
    be returned with a single call to GetObjectAttributes.   Directory buckets -
    For directory buckets, you must make requests for this API operation to the
    Zonal endpoint. These endpoints support virtual-hosted-style requests in the
    format https://bucket_name.s3express-az_id.region.amazonaws.com/key-name .
    Path-style requests are not supported. For more information, see Regional
    and Zonal endpoints in the Amazon S3 User Guide.   Permissions     General
    purpose bucket permissions - To use GetObjectAttributes, you must have READ
    access to the object. The permissions that you need to use this operation
    with depend on whether the bucket is versioned. If the bucket is versioned,
    you need both the s3:GetObjectVersion and s3:GetObjectVersionAttributes
    permissions for this operation. If the bucket is not versioned, you need the
    s3:GetObject and s3:GetObjectAttributes permissions. For more information,
    see Specifying Permissions in a Policy in the Amazon S3 User Guide. If the
    object that you request does not exist, the error Amazon S3 returns depends
    on whether you also have the s3:ListBucket permission.   If you have the
    s3:ListBucket permission on the bucket, Amazon S3 returns an HTTP status
    code 404 Not Found ("no such key") error.   If you don't have the
    s3:ListBucket permission, Amazon S3 returns an HTTP status code 403
    Forbidden ("access denied") error.      Directory bucket permissions - To
    grant access to this API operation on a directory bucket, we recommend that
    you use the  CreateSession  API operation for session-based authorization.
    Specifically, you grant the s3express:CreateSession permission to the
    directory bucket in a bucket policy or an IAM identity-based policy. Then,
    you make the CreateSession API call on the bucket to obtain a session token.
    With the session token in your request header, you can make API requests to
    this operation. After the session token expires, you make another
    CreateSession API call to generate a new session token for use. Amazon Web
    Services CLI or SDKs create session and refresh the session token
    automatically to avoid service interruptions when a session expires. For
    more information about authorization, see  CreateSession .    Encryption  
    Encryption request headers, like x-amz-server-side-encryption, should not be
    sent for HEAD requests if your object uses server-side encryption with Key
    Management Service (KMS) keys (SSE-KMS), dual-layer server-side encryption
    with Amazon Web Services KMS keys (DSSE-KMS), or server-side encryption with
    Amazon S3 managed encryption keys (SSE-S3). The x-amz-server-side-encryption
    header is used when you PUT an object to S3 and want to specify the
    encryption method. If you include this header in a GET request for an object
    that uses these types of keys, you’ll get an HTTP 400 Bad Request error.
    It's because the encryption method can't be changed when you retrieve the
    object.  If you encrypt an object by using server-side encryption with
    customer-provided encryption keys (SSE-C) when you store the object in
    Amazon S3, then when you retrieve the metadata from the object, you must use
    the following headers to provide the encryption key for the server to be
    able to retrieve the object's metadata. The headers are:    
    x-amz-server-side-encryption-customer-algorithm    
    x-amz-server-side-encryption-customer-key    
    x-amz-server-side-encryption-customer-key-MD5    For more information about
    SSE-C, see Server-Side Encryption (Using Customer-Provided Encryption Keys)
    in the Amazon S3 User Guide.   Directory bucket permissions - For directory
    buckets, only server-side encryption with Amazon S3 managed keys (SSE-S3)
    (AES256) is supported.   Versioning   Directory buckets - S3 Versioning
    isn't enabled and supported for directory buckets. For this API operation,
    only the null value of the version ID is supported by directory buckets. You
    can only specify null to the versionId query parameter in the request. 
    Conditional request headers  Consider the following when using request
    headers:   If both of the If-Match and If-Unmodified-Since headers are
    present in the request as follows, then Amazon S3 returns the HTTP status
    code 200 OK and the data requested:    If-Match condition evaluates to
    true.    If-Unmodified-Since condition evaluates to false.   For more
    information about conditional requests, see RFC 7232.   If both of the
    If-None-Match and If-Modified-Since headers are present in the request as
    follows, then Amazon S3 returns the HTTP status code 304 Not Modified:   
    If-None-Match condition evaluates to false.    If-Modified-Since condition
    evaluates to true.   For more information about conditional requests, see
    RFC 7232.    HTTP Host header syntax   Directory buckets  - The HTTP Host
    header syntax is  Bucket_name.s3express-az_id.region.amazonaws.com.   The
    following actions are related to GetObjectAttributes:    GetObject    
    GetObjectAcl     GetObjectLegalHold     GetObjectLockConfiguration    
    GetObjectRetention     GetObjectTagging     HeadObject     ListParts   
  tags: []
  links:
    - title: Link
      icon: code
      url: https://example.com
spec:
  type: openapi
  lifecycle: experimental
  owner: team-c
  definition: |
    openapi: 3.1.0
    info:
      title: Getobjectattributes
      description: >-
        Retrieves all the metadata from an object without returning the object
        itself. This operation is useful if you're interested only in an object's
        metadata.   GetObjectAttributes combines the functionality of HeadObject and
        ListParts. All of the data returned with each of those individual calls can
        be returned with a single call to GetObjectAttributes.   Directory buckets -
        For directory buckets, you must make requests for this API operation to the
        Zonal endpoint. These endpoints support virtual-hosted-style requests in the
        format https://bucket_name.s3express-az_id.region.amazonaws.com/key-name .
        Path-style requests are not supported. For more information, see Regional
        and Zonal endpoints in the Amazon S3 User Guide.   Permissions     General
        purpose bucket permissions - To use GetObjectAttributes, you must have READ
        access to the object. The permissions that you need to use this operation
        with depend on whether the bucket is versioned. If the bucket is versioned,
        you need both the s3:GetObjectVersion and s3:GetObjectVersionAttributes
        permissions for this operation. If the bucket is not versioned, you need the
        s3:GetObject and s3:GetObjectAttributes permissions. For more information,
        see Specifying Permissions in a Policy in the Amazon S3 User Guide. If the
        object that you request does not exist, the error Amazon S3 returns depends
        on whether you also have the s3:ListBucket permission.   If you have the
        s3:ListBucket permission on the bucket, Amazon S3 returns an HTTP status
        code 404 Not Found ("no such key") error.   If you don't have the
        s3:ListBucket permission, Amazon S3 returns an HTTP status code 403
        Forbidden ("access denied") error.      Directory bucket permissions - To
        grant access to this API operation on a directory bucket, we recommend that
        you use the  CreateSession  API operation for session-based authorization.
        Specifically, you grant the s3express:CreateSession permission to the
        directory bucket in a bucket policy or an IAM identity-based policy. Then,
        you make the CreateSession API call on the bucket to obtain a session token.
        With the session token in your request header, you can make API requests to
        this operation. After the session token expires, you make another
        CreateSession API call to generate a new session token for use. Amazon Web
        Services CLI or SDKs create session and refresh the session token
        automatically to avoid service interruptions when a session expires. For
        more information about authorization, see  CreateSession .    Encryption  
        Encryption request headers, like x-amz-server-side-encryption, should not be
        sent for HEAD requests if your object uses server-side encryption with Key
        Management Service (KMS) keys (SSE-KMS), dual-layer server-side encryption
        with Amazon Web Services KMS keys (DSSE-KMS), or server-side encryption with
        Amazon S3 managed encryption keys (SSE-S3). The x-amz-server-side-encryption
        header is used when you PUT an object to S3 and want to specify the
        encryption method. If you include this header in a GET request for an object
        that uses these types of keys, you’ll get an HTTP 400 Bad Request error.
        It's because the encryption method can't be changed when you retrieve the
        object.  If you encrypt an object by using server-side encryption with
        customer-provided encryption keys (SSE-C) when you store the object in
        Amazon S3, then when you retrieve the metadata from the object, you must use
        the following headers to provide the encryption key for the server to be
        able to retrieve the object's metadata. The headers are:    
        x-amz-server-side-encryption-customer-algorithm    
        x-amz-server-side-encryption-customer-key    
        x-amz-server-side-encryption-customer-key-MD5    For more information about
        SSE-C, see Server-Side Encryption (Using Customer-Provided Encryption Keys)
        in the Amazon S3 User Guide.   Directory bucket permissions - For directory
        buckets, only server-side encryption with Amazon S3 managed keys (SSE-S3)
        (AES256) is supported.   Versioning   Directory buckets - S3 Versioning
        isn't enabled and supported for directory buckets. For this API operation,
        only the null value of the version ID is supported by directory buckets. You
        can only specify null to the versionId query parameter in the request. 
        Conditional request headers  Consider the following when using request
        headers:   If both of the If-Match and If-Unmodified-Since headers are
        present in the request as follows, then Amazon S3 returns the HTTP status
        code 200 OK and the data requested:    If-Match condition evaluates to
        true.    If-Unmodified-Since condition evaluates to false.   For more
        information about conditional requests, see RFC 7232.   If both of the
        If-None-Match and If-Modified-Since headers are present in the request as
        follows, then Amazon S3 returns the HTTP status code 304 Not Modified:   
        If-None-Match condition evaluates to false.    If-Modified-Since condition
        evaluates to true.   For more information about conditional requests, see
        RFC 7232.    HTTP Host header syntax   Directory buckets  - The HTTP Host
        header syntax is  Bucket_name.s3express-az_id.region.amazonaws.com.   The
        following actions are related to GetObjectAttributes:    GetObject    
        GetObjectAcl     GetObjectLegalHold     GetObjectLockConfiguration    
        GetObjectRetention     GetObjectTagging     HeadObject     ListParts   
    paths:
      /{Bucket}/{Key+}?attributes:
        GET:
          summary: Getobjectattributes
          description: >-
            Retrieves all the metadata from an object without returning the object
            itself. This operation is useful if you're interested only in an
            object's metadata.   GetObjectAttributes combines the functionality of
            HeadObject and ListParts. All of the data returned with each of those
            individual calls can be returned with a single call to
            GetObjectAttributes.   Directory buckets - For directory buckets, you
            must make requests for this API operation to the Zonal endpoint. These
            endpoints support virtual-hosted-style requests in the format
            https://bucket_name.s3express-az_id.region.amazonaws.com/key-name .
            Path-style requests are not supported. For more information, see
            Regional and Zonal endpoints in the Amazon S3 User Guide.  
            Permissions     General purpose bucket permissions - To use
            GetObjectAttributes, you must have READ access to the object. The
            permissions that you need to use this operation with depend on whether
            the bucket is versioned. If the bucket is versioned, you need both the
            s3:GetObjectVersion and s3:GetObjectVersionAttributes permissions for
            this operation. If the bucket is not versioned, you need the
            s3:GetObject and s3:GetObjectAttributes permissions. For more
            information, see Specifying Permissions in a Policy in the Amazon S3
            User Guide. If the object that you request does not exist, the error
            Amazon S3 returns depends on whether you also have the s3:ListBucket
            permission.   If you have the s3:ListBucket permission on the bucket,
            Amazon S3 returns an HTTP status code 404 Not Found ("no such key")
            error.   If you don't have the s3:ListBucket permission, Amazon S3
            returns an HTTP status code 403 Forbidden ("access denied") error.     
            Directory bucket permissions - To grant access to this API operation on
            a directory bucket, we recommend that you use the  CreateSession  API
            operation for session-based authorization. Specifically, you grant the
            s3express:CreateSession permission to the directory bucket in a bucket
            policy or an IAM identity-based policy. Then, you make the CreateSession
            API call on the bucket to obtain a session token. With the session token
            in your request header, you can make API requests to this operation.
            After the session token expires, you make another CreateSession API call
            to generate a new session token for use. Amazon Web Services CLI or SDKs
            create session and refresh the session token automatically to avoid
            service interruptions when a session expires. For more information about
            authorization, see  CreateSession .    Encryption   Encryption request
            headers, like x-amz-server-side-encryption, should not be sent for HEAD
            requests if your object uses server-side encryption with Key Management
            Service (KMS) keys (SSE-KMS), dual-layer server-side encryption with
            Amazon Web Services KMS keys (DSSE-KMS), or server-side encryption with
            Amazon S3 managed encryption keys (SSE-S3). The
            x-amz-server-side-encryption header is used when you PUT an object to S3
            and want to specify the encryption method. If you include this header in
            a GET request for an object that uses these types of keys, you’ll get an
            HTTP 400 Bad Request error. It's because the encryption method can't be
            changed when you retrieve the object.  If you encrypt an object by using
            server-side encryption with customer-provided encryption keys (SSE-C)
            when you store the object in Amazon S3, then when you retrieve the
            metadata from the object, you must use the following headers to provide
            the encryption key for the server to be able to retrieve the object's
            metadata. The headers are:    
            x-amz-server-side-encryption-customer-algorithm    
            x-amz-server-side-encryption-customer-key    
            x-amz-server-side-encryption-customer-key-MD5    For more information
            about SSE-C, see Server-Side Encryption (Using Customer-Provided
            Encryption Keys) in the Amazon S3 User Guide.   Directory bucket
            permissions - For directory buckets, only server-side encryption with
            Amazon S3 managed keys (SSE-S3) (AES256) is supported.   Versioning  
            Directory buckets - S3 Versioning isn't enabled and supported for
            directory buckets. For this API operation, only the null value of the
            version ID is supported by directory buckets. You can only specify null
            to the versionId query parameter in the request.  Conditional request
            headers  Consider the following when using request headers:   If both of
            the If-Match and If-Unmodified-Since headers are present in the request
            as follows, then Amazon S3 returns the HTTP status code 200 OK and the
            data requested:    If-Match condition evaluates to true.   
            If-Unmodified-Since condition evaluates to false.   For more information
            about conditional requests, see RFC 7232.   If both of the If-None-Match
            and If-Modified-Since headers are present in the request as follows,
            then Amazon S3 returns the HTTP status code 304 Not Modified:   
            If-None-Match condition evaluates to false.    If-Modified-Since
            condition evaluates to true.   For more information about conditional
            requests, see RFC 7232.    HTTP Host header syntax   Directory buckets 
            - The HTTP Host header syntax is 
            Bucket_name.s3express-az_id.region.amazonaws.com.   The following
            actions are related to GetObjectAttributes:    GetObject    
            GetObjectAcl     GetObjectLegalHold     GetObjectLockConfiguration    
            GetObjectRetention     GetObjectTagging     HeadObject     ListParts   
          operationId: getObjectAttributes
