apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: Create Custom Field Definition
  description: >-
    **This endpoint creates a new custom field definition.**Custom field
    definitions are created with the given `name` and `field_type`. Although
    field names are stored in a case-sensitive manner, all field names must be
    case-insensitively unique. This means you may create a field named
    `CamelCase` or `camelcase`, but not both. Additionally, a Custom Field name
    cannot collide with any Reserved Field names. You should save the returned
    `id` value in order to update or delete the field at a later date. You can
    have up to 500 custom fields.The custom field name should be created using
    only alphanumeric characters (A-Z and 0-9) and underscores (\_). Custom
    fields can only begin with letters  A-Z or underscores (_). The field type
    can be date, text, or number fields. The field type is important for
    creating segments from your contact database.**Note: Creating a custom field
    that begins with a number will cause issues with sending in Marketing
    Campaigns.**
  tags: []
  links:
    - title: Link
      icon: code
      url: https://example.com
spec:
  type: openapi
  lifecycle: experimental
  owner: team-c
  definition: |
    openapi: 3.1.0
    info:
      title: Create Custom Field Definition
      description: >-
        **This endpoint creates a new custom field definition.**Custom field
        definitions are created with the given `name` and `field_type`. Although
        field names are stored in a case-sensitive manner, all field names must be
        case-insensitively unique. This means you may create a field named
        `CamelCase` or `camelcase`, but not both. Additionally, a Custom Field name
        cannot collide with any Reserved Field names. You should save the returned
        `id` value in order to update or delete the field at a later date. You can
        have up to 500 custom fields.The custom field name should be created using
        only alphanumeric characters (A-Z and 0-9) and underscores (\_). Custom
        fields can only begin with letters  A-Z or underscores (_). The field type
        can be date, text, or number fields. The field type is important for
        creating segments from your contact database.**Note: Creating a custom field
        that begins with a number will cause issues with sending in Marketing
        Campaigns.**
    paths:
      /v3/marketing/field_definitions:
        post:
          summary: Create Custom Field Definition
          description: >-
            **This endpoint creates a new custom field definition.**Custom field
            definitions are created with the given `name` and `field_type`. Although
            field names are stored in a case-sensitive manner, all field names must
            be case-insensitively unique. This means you may create a field named
            `CamelCase` or `camelcase`, but not both. Additionally, a Custom Field
            name cannot collide with any Reserved Field names. You should save the
            returned `id` value in order to update or delete the field at a later
            date. You can have up to 500 custom fields.The custom field name should
            be created using only alphanumeric characters (A-Z and 0-9) and
            underscores (\_). Custom fields can only begin with letters  A-Z or
            underscores (_). The field type can be date, text, or number fields. The
            field type is important for creating segments from your contact
            database.**Note: Creating a custom field that begins with a number will
            cause issues with sending in Marketing Campaigns.**
          operationId: createFieldDefinition
          requestBody:
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    name:
                      type: string
                      minLength: 1
                      maxLength: 100
                    field_type:
                      type: string
                      $ref: '#/components/schemas/FieldType'
                  required:
                    - name
                    - field_type
                  example:
                    name: custom_field_name
                    field_type: Text
          responses:
            '400':
              description: ''
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      errors:
                        type: array
                        uniqueItems: true
                        items:
                          $ref: '#/components/schemas/CustomFieldsError'
                    required:
                      - errors
