apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: Import Contacts
  description: >-
    **This endpoint allows a CSV upload containing up to one million contacts or
    5GB of data, whichever is smaller. At least one identifier is required for a
    successful import.**Imports take place asynchronously: the endpoint returns
    a URL (`upload_uri`) and HTTP headers (`upload_headers`) which can
    subsequently be used to `PUT` a file of contacts to be imported into our
    system.Uploaded CSV files may also be
    [gzip-compressed](https://en.wikipedia.org/wiki/Gzip).In either case, you
    must include the field `file_type` with the value `csv` in your request
    body.The `field_mappings` parameter is a respective list of field definition
    IDs to map the uploaded CSV columns to. It allows you to use CSVs where one
    or more columns are skipped (`null`) or remapped to the contact field.For
    example, if `field_mappings` is set to `[null, "w1", "_rf1"]`, this means
    skip column 0, map column 1 to the custom field with the ID `w1`, and map
    column 2 to the reserved field with the ID `_rf1`. See the "Get All Field
    Definitions" endpoint to fetch your custom and reserved field IDs to use
    with `field_mappings`.Once you receive the response body you can then
    initiate a **second** API call where you use the supplied URL and HTTP
    header to upload your file. For example:`curl --upload-file "file/path.csv"
    "URL_GIVEN" -H "HEADER_GIVEN"`If you would like to monitor the status of
    your import job, use the `job_id` and the "Import Contacts Status"
    endpoint.Twilio SendGrid recommends exporting your contacts regularly as a
    backup to avoid issues or lost data.
  tags: []
  links:
    - title: Link
      icon: code
      url: https://example.com
spec:
  type: openapi
  lifecycle: experimental
  owner: team-c
  definition: |
    openapi: 3.1.0
    info:
      title: Import Contacts
      description: >-
        **This endpoint allows a CSV upload containing up to one million contacts or
        5GB of data, whichever is smaller. At least one identifier is required for a
        successful import.**Imports take place asynchronously: the endpoint returns
        a URL (`upload_uri`) and HTTP headers (`upload_headers`) which can
        subsequently be used to `PUT` a file of contacts to be imported into our
        system.Uploaded CSV files may also be
        [gzip-compressed](https://en.wikipedia.org/wiki/Gzip).In either case, you
        must include the field `file_type` with the value `csv` in your request
        body.The `field_mappings` parameter is a respective list of field definition
        IDs to map the uploaded CSV columns to. It allows you to use CSVs where one
        or more columns are skipped (`null`) or remapped to the contact field.For
        example, if `field_mappings` is set to `[null, "w1", "_rf1"]`, this means
        skip column 0, map column 1 to the custom field with the ID `w1`, and map
        column 2 to the reserved field with the ID `_rf1`. See the "Get All Field
        Definitions" endpoint to fetch your custom and reserved field IDs to use
        with `field_mappings`.Once you receive the response body you can then
        initiate a **second** API call where you use the supplied URL and HTTP
        header to upload your file. For example:`curl --upload-file "file/path.csv"
        "URL_GIVEN" -H "HEADER_GIVEN"`If you would like to monitor the status of
        your import job, use the `job_id` and the "Import Contacts Status"
        endpoint.Twilio SendGrid recommends exporting your contacts regularly as a
        backup to avoid issues or lost data.
    paths:
      /v3/marketing/contacts/imports:
        put:
          summary: Import Contacts
          description: >-
            **This endpoint allows a CSV upload containing up to one million
            contacts or 5GB of data, whichever is smaller. At least one identifier
            is required for a successful import.**Imports take place asynchronously:
            the endpoint returns a URL (`upload_uri`) and HTTP headers
            (`upload_headers`) which can subsequently be used to `PUT` a file of
            contacts to be imported into our system.Uploaded CSV files may also be
            [gzip-compressed](https://en.wikipedia.org/wiki/Gzip).In either case,
            you must include the field `file_type` with the value `csv` in your
            request body.The `field_mappings` parameter is a respective list of
            field definition IDs to map the uploaded CSV columns to. It allows you
            to use CSVs where one or more columns are skipped (`null`) or remapped
            to the contact field.For example, if `field_mappings` is set to `[null,
            "w1", "_rf1"]`, this means skip column 0, map column 1 to the custom
            field with the ID `w1`, and map column 2 to the reserved field with the
            ID `_rf1`. See the "Get All Field Definitions" endpoint to fetch your
            custom and reserved field IDs to use with `field_mappings`.Once you
            receive the response body you can then initiate a **second** API call
            where you use the supplied URL and HTTP header to upload your file. For
            example:`curl --upload-file "file/path.csv" "URL_GIVEN" -H
            "HEADER_GIVEN"`If you would like to monitor the status of your import
            job, use the `job_id` and the "Import Contacts Status" endpoint.Twilio
            SendGrid recommends exporting your contacts regularly as a backup to
            avoid issues or lost data.
          operationId: importContact
          requestBody:
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    list_ids:
                      type: array
                      description: All contacts will be added to each of the specified lists.
                      items:
                        type: string
                    file_type:
                      type: string
                      description: Upload file type.
                      $ref: '#/components/schemas/FileType1'
                    field_mappings:
                      type: array
                      description: Import file header to reserved/custom field mapping.
                      uniqueItems: false
                      minItems: 1
                      items:
                        type: string
                        nullable: true
                  required:
                    - file_type
                    - field_mappings
          responses:
            '500':
              $ref: '#/components/responses/MarketingContacts500'
