apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: microsoftAzureRoutePostroutedirectionsbatch
  description: >-
    **Route Directions Batch API**<br><br><br>**Applies to**: S1 pricing
    tier.<br><br><br><br>The Route Directions Batch API sends batches of queries
    to [Route Directions
    API](https://docs.microsoft.com/en-us/rest/api/maps/route/getroutedirections)
    using just a single API call. You can call Route Directions Batch API to run
    either asynchronously (async) or synchronously (sync). The async API allows
    caller to batch up to **700** queries and sync API up to **100**
    queries.<br>### Submit Synchronous Batch Request<br>The Synchronous API is
    recommended for lightweight batch requests. When the service receives a
    request, it will respond as soon as the batch items are calculated and there
    will be no possibility to retrieve the results later. The Synchronous API
    will return a timeout error (a 408 response) if the request takes longer
    than 60 seconds. The number of batch items is limited to **100** for this
    API.<br>```<br>POST
    https://atlas.microsoft.com/route/directions/batch/sync/json?api-version=1.0&subscription-key={subscription-key}<br>```<br>###
    Submit Asynchronous Batch Request<br>The Asynchronous API is appropriate for
    processing big volumes of relatively complex route requests<br>- It allows
    the retrieval of results in a separate call (multiple downloads are
    possible).<br>- The asynchronous API is optimized for reliability and is not
    expected to run into a timeout.<br>- The number of batch items is limited to
    **700** for this API.<br><br>When you make a request by using async request,
    by default the service returns a 202 response code along a redirect URL in
    the Location field of the response header. This URL should be checked
    periodically until the response data or error information is
    available.<br>The asynchronous responses are stored for **14** days. The
    redirect URL returns a 404 response if used after the expiration
    period.<br><br>Please note that asynchronous batch request is a long-running
    operation. Here's a typical sequence of operations:<br>1. Client sends a
    Route Directions Batch `POST` request to Azure Maps<br>2. The server will
    respond with one of the following:<br><br>    > HTTP `202 Accepted` - Batch
    request has been accepted.<br><br>    > HTTP `Error` - There was an error
    processing your Batch request. This could either be a `400 Bad Request` or
    any other `Error` status code.<br><br>3. If the batch request was accepted
    successfully, the `Location` header in the response contains the URL to
    download the results of the batch request.<br>    This status URI looks like
    following:<br><br>``` GET
    https://atlas.microsoft.com/route/directions/batch/{batch-id}?api-version=1.0
    ```<br>Note:- Please remember to add AUTH information
    (subscription-key/azure_auth - See [Security](#security)) to the _status
    URI_ before running it. <br>4. Client issues a `GET` request on the
    _download URL_ obtained in Step 3 to download the batch results.<br><br>###
    POST Body for Batch Request<br>To send the _route directions_ queries you
    will use a `POST` request where the request body will contain the
    `batchItems` array in `json` format and the `Content-Type` header will be
    set to `application/json`. Here's a sample request body containing 3 _route
    directions_ queries:<br><br><br>```json<br>{<br>    "batchItems":
    [<br>        { "query":
    "?query=47.620659,-122.348934:47.610101,-122.342015&travelMode=bicycle&routeType=eco&traffic=false"
    },<br>        { "query":
    "?query=40.759856,-73.985108:40.771136,-73.973506&travelMode=pedestrian&routeType=shortest"
    },<br>        { "query":
    "?query=48.923159,-122.557362:32.621279,-116.840362" }<br>   
    ]<br>}<br>```<br><br>A _route directions_ query in a batch is just a partial
    URL _without_ the protocol, base URL, path, api-version and
    subscription-key. It can accept any of the supported _route directions_ [URI
    parameters](https://docs.microsoft.com/en-us/rest/api/maps/route/getroutedirections#uri-parameters).
    The string values in the _route directions_ query must be properly escaped
    (e.g. " character should be escaped with \\ ) and it should also be properly
    URL-encoded.<br><br><br>The async API allows caller to batch up to **700**
    queries and sync API up to **100** queries, and the batch should contain at
    least **1** query.<br><br><br>### Download Asynchronous Batch Results<br>To
    download the async batch results you will issue a `GET` request to the batch
    download endpoint. This _download URL_ can be obtained from the `Location`
    header of a successful `POST` batch request and looks like the
    following:<br><br>```<br>https://atlas.microsoft.com/route/directions/batch/{batch-id}?api-version=1.0&subscription-key={subscription-key}<br>```<br>Here's
    the typical sequence of operations for downloading the batch results:<br>1.
    Client sends a `GET` request using the _download URL_.<br>2. The server will
    respond with one of the following:<br>    <br>    > HTTP `202 Accepted` -
    Batch request was accepted but is still being processed. Please try again in
    some time.<br><br>    > HTTP `200 OK` - Batch request successfully
    processed. The response body contains all the batch
    results.<br><br><br><br>### Batch Response Model<br>The returned data
    content is similar for async and sync requests. When downloading the results
    of an async batch request, if the batch has finished processing, the
    response body contains the batch response. This batch response contains a
    `summary` component that indicates the `totalRequests` that were part of the
    original batch request and `successfulRequests`i.e. queries which were
    executed successfully. The batch response also includes a `batchItems` array
    which contains a response for each and every query in the batch request. The
    `batchItems` will contain the results in the exact same order the original
    queries were sent in the batch request. Each item in `batchItems` contains
    `statusCode` and `response` fields. Each `response` in `batchItems` is of
    one of the following types:<br><br>  -
    [`RouteDirectionsResponse`](https://docs.microsoft.com/en-us/rest/api/maps/route/getroutedirections#routedirectionsresponse)
    - If the query completed successfully.<br><br>  - `Error` - If the query
    failed. The response will contain a `code` and a `message` in this
    case.<br><br><br>Here's a sample Batch Response with 1 _successful_ and 1
    _failed_ result:<br><br><br>```json<br>{<br>    "summary": {<br>       
    "successfulRequests": 1,<br>        "totalRequests": 2<br>    },<br>   
    "batchItems": [<br>        {<br>            "statusCode":
    200,<br>            "response": {<br>                "routes":
    [<br>                    {<br>                        "summary":
    {<br>                            "lengthInMeters":
    1758,<br>                            "travelTimeInSeconds":
    387,<br>                            "trafficDelayInSeconds":
    0,<br>                            "departureTime":
    "2018-07-17T00:49:56+00:00",<br>                            "arrivalTime":
    "2018-07-17T00:56:22+00:00"<br>                       
    },<br>                        "legs": [<br>                           
    {<br>                                "summary":
    {<br>                                    "lengthInMeters":
    1758,<br>                                    "travelTimeInSeconds":
    387,<br>                                    "trafficDelayInSeconds":
    0,<br>                                    "departureTime":
    "2018-07-17T00:49:56+00:00",<br>                                   
    "arrivalTime":
    "2018-07-17T00:56:22+00:00"<br>                               
    },<br>                                "points":
    [<br>                                   
    {<br>                                        "latitude":
    47.62094,<br>                                        "longitude":
    -122.34892<br>                                   
    },<br>                                   
    {<br>                                        "latitude":
    47.62094,<br>                                        "longitude":
    -122.3485<br>                                   
    },<br>                                   
    {<br>                                        "latitude":
    47.62095,<br>                                        "longitude":
    -122.3476<br>                                   
    }<br>                                ]<br>                           
    }<br>                        ],<br>                        "sections":
    [<br>                            {<br>                               
    "startPointIndex": 0,<br>                                "endPointIndex":
    40,<br>                                "sectionType":
    "TRAVEL_MODE",<br>                                "travelMode":
    "bicycle"<br>                            }<br>                       
    ]<br>                    }<br>                ]<br>            }<br>       
    },<br>        {<br>            "statusCode": 400,<br>           
    "response":<br>            {<br>                "error":<br>               
    {<br>                    "code": "400 BadRequest",<br>                   
    "message": "Bad request: one or more parameters were incorrectly specified
    or are mutually exclusive."<br>                }<br>            }<br>       
    }<br>    ]<br>}<br>```
  tags: []
  links:
    - title: Link
      icon: code
      url: https://example.com
spec:
  type: openapi
  lifecycle: experimental
  owner: team-c
  definition: |
    openapi: 3.1.0
    info:
      title: Post Route Directions Batch Format
      description: >-
        **Route Directions Batch API**<br><br><br>**Applies to**: S1 pricing
        tier.<br><br><br><br>The Route Directions Batch API sends batches of queries
        to [Route Directions
        API](https://docs.microsoft.com/en-us/rest/api/maps/route/getroutedirections)
        using just a single API call. You can call Route Directions Batch API to run
        either asynchronously (async) or synchronously (sync). The async API allows
        caller to batch up to **700** queries and sync API up to **100**
        queries.<br>### Submit Synchronous Batch Request<br>The Synchronous API is
        recommended for lightweight batch requests. When the service receives a
        request, it will respond as soon as the batch items are calculated and there
        will be no possibility to retrieve the results later. The Synchronous API
        will return a timeout error (a 408 response) if the request takes longer
        than 60 seconds. The number of batch items is limited to **100** for this
        API.<br>```<br>POST
        https://atlas.microsoft.com/route/directions/batch/sync/json?api-version=1.0&subscription-key={subscription-key}<br>```<br>###
        Submit Asynchronous Batch Request<br>The Asynchronous API is appropriate for
        processing big volumes of relatively complex route requests<br>- It allows
        the retrieval of results in a separate call (multiple downloads are
        possible).<br>- The asynchronous API is optimized for reliability and is not
        expected to run into a timeout.<br>- The number of batch items is limited to
        **700** for this API.<br><br>When you make a request by using async request,
        by default the service returns a 202 response code along a redirect URL in
        the Location field of the response header. This URL should be checked
        periodically until the response data or error information is
        available.<br>The asynchronous responses are stored for **14** days. The
        redirect URL returns a 404 response if used after the expiration
        period.<br><br>Please note that asynchronous batch request is a long-running
        operation. Here's a typical sequence of operations:<br>1. Client sends a
        Route Directions Batch `POST` request to Azure Maps<br>2. The server will
        respond with one of the following:<br><br>    > HTTP `202 Accepted` - Batch
        request has been accepted.<br><br>    > HTTP `Error` - There was an error
        processing your Batch request. This could either be a `400 Bad Request` or
        any other `Error` status code.<br><br>3. If the batch request was accepted
        successfully, the `Location` header in the response contains the URL to
        download the results of the batch request.<br>    This status URI looks like
        following:<br><br>``` GET
        https://atlas.microsoft.com/route/directions/batch/{batch-id}?api-version=1.0
        ```<br>Note:- Please remember to add AUTH information
        (subscription-key/azure_auth - See [Security](#security)) to the _status
        URI_ before running it. <br>4. Client issues a `GET` request on the
        _download URL_ obtained in Step 3 to download the batch results.<br><br>###
        POST Body for Batch Request<br>To send the _route directions_ queries you
        will use a `POST` request where the request body will contain the
        `batchItems` array in `json` format and the `Content-Type` header will be
        set to `application/json`. Here's a sample request body containing 3 _route
        directions_ queries:<br><br><br>```json<br>{<br>    "batchItems":
        [<br>        { "query":
        "?query=47.620659,-122.348934:47.610101,-122.342015&travelMode=bicycle&routeType=eco&traffic=false"
        },<br>        { "query":
        "?query=40.759856,-73.985108:40.771136,-73.973506&travelMode=pedestrian&routeType=shortest"
        },<br>        { "query":
        "?query=48.923159,-122.557362:32.621279,-116.840362" }<br>   
        ]<br>}<br>```<br><br>A _route directions_ query in a batch is just a partial
        URL _without_ the protocol, base URL, path, api-version and
        subscription-key. It can accept any of the supported _route directions_ [URI
        parameters](https://docs.microsoft.com/en-us/rest/api/maps/route/getroutedirections#uri-parameters).
        The string values in the _route directions_ query must be properly escaped
        (e.g. " character should be escaped with \\ ) and it should also be properly
        URL-encoded.<br><br><br>The async API allows caller to batch up to **700**
        queries and sync API up to **100** queries, and the batch should contain at
        least **1** query.<br><br><br>### Download Asynchronous Batch Results<br>To
        download the async batch results you will issue a `GET` request to the batch
        download endpoint. This _download URL_ can be obtained from the `Location`
        header of a successful `POST` batch request and looks like the
        following:<br><br>```<br>https://atlas.microsoft.com/route/directions/batch/{batch-id}?api-version=1.0&subscription-key={subscription-key}<br>```<br>Here's
        the typical sequence of operations for downloading the batch results:<br>1.
        Client sends a `GET` request using the _download URL_.<br>2. The server will
        respond with one of the following:<br>    <br>    > HTTP `202 Accepted` -
        Batch request was accepted but is still being processed. Please try again in
        some time.<br><br>    > HTTP `200 OK` - Batch request successfully
        processed. The response body contains all the batch
        results.<br><br><br><br>### Batch Response Model<br>The returned data
        content is similar for async and sync requests. When downloading the results
        of an async batch request, if the batch has finished processing, the
        response body contains the batch response. This batch response contains a
        `summary` component that indicates the `totalRequests` that were part of the
        original batch request and `successfulRequests`i.e. queries which were
        executed successfully. The batch response also includes a `batchItems` array
        which contains a response for each and every query in the batch request. The
        `batchItems` will contain the results in the exact same order the original
        queries were sent in the batch request. Each item in `batchItems` contains
        `statusCode` and `response` fields. Each `response` in `batchItems` is of
        one of the following types:<br><br>  -
        [`RouteDirectionsResponse`](https://docs.microsoft.com/en-us/rest/api/maps/route/getroutedirections#routedirectionsresponse)
        - If the query completed successfully.<br><br>  - `Error` - If the query
        failed. The response will contain a `code` and a `message` in this
        case.<br><br><br>Here's a sample Batch Response with 1 _successful_ and 1
        _failed_ result:<br><br><br>```json<br>{<br>    "summary": {<br>       
        "successfulRequests": 1,<br>        "totalRequests": 2<br>    },<br>   
        "batchItems": [<br>        {<br>            "statusCode":
        200,<br>            "response": {<br>                "routes":
        [<br>                    {<br>                        "summary":
        {<br>                            "lengthInMeters":
        1758,<br>                            "travelTimeInSeconds":
        387,<br>                            "trafficDelayInSeconds":
        0,<br>                            "departureTime":
        "2018-07-17T00:49:56+00:00",<br>                            "arrivalTime":
        "2018-07-17T00:56:22+00:00"<br>                       
        },<br>                        "legs": [<br>                           
        {<br>                                "summary":
        {<br>                                    "lengthInMeters":
        1758,<br>                                    "travelTimeInSeconds":
        387,<br>                                    "trafficDelayInSeconds":
        0,<br>                                    "departureTime":
        "2018-07-17T00:49:56+00:00",<br>                                   
        "arrivalTime":
        "2018-07-17T00:56:22+00:00"<br>                               
        },<br>                                "points":
        [<br>                                   
        {<br>                                        "latitude":
        47.62094,<br>                                        "longitude":
        -122.34892<br>                                   
        },<br>                                   
        {<br>                                        "latitude":
        47.62094,<br>                                        "longitude":
        -122.3485<br>                                   
        },<br>                                   
        {<br>                                        "latitude":
        47.62095,<br>                                        "longitude":
        -122.3476<br>                                   
        }<br>                                ]<br>                           
        }<br>                        ],<br>                        "sections":
        [<br>                            {<br>                               
        "startPointIndex": 0,<br>                                "endPointIndex":
        40,<br>                                "sectionType":
        "TRAVEL_MODE",<br>                                "travelMode":
        "bicycle"<br>                            }<br>                       
        ]<br>                    }<br>                ]<br>            }<br>       
        },<br>        {<br>            "statusCode": 400,<br>           
        "response":<br>            {<br>                "error":<br>               
        {<br>                    "code": "400 BadRequest",<br>                   
        "message": "Bad request: one or more parameters were incorrectly specified
        or are mutually exclusive."<br>                }<br>            }<br>       
        }<br>    ]<br>}<br>```
    paths:
      /route/directions/batch/{format}:
        post:
          summary: Post Route Directions Batch Format
          description: >-
            **Route Directions Batch API**<br><br><br>**Applies to**: S1 pricing
            tier.<br><br><br><br>The Route Directions Batch API sends batches of
            queries to [Route Directions
            API](https://docs.microsoft.com/en-us/rest/api/maps/route/getroutedirections)
            using just a single API call. You can call Route Directions Batch API to
            run either asynchronously (async) or synchronously (sync). The async API
            allows caller to batch up to **700** queries and sync API up to **100**
            queries.<br>### Submit Synchronous Batch Request<br>The Synchronous API
            is recommended for lightweight batch requests. When the service receives
            a request, it will respond as soon as the batch items are calculated and
            there will be no possibility to retrieve the results later. The
            Synchronous API will return a timeout error (a 408 response) if the
            request takes longer than 60 seconds. The number of batch items is
            limited to **100** for this API.<br>```<br>POST
            https://atlas.microsoft.com/route/directions/batch/sync/json?api-version=1.0&subscription-key={subscription-key}<br>```<br>###
            Submit Asynchronous Batch Request<br>The Asynchronous API is appropriate
            for processing big volumes of relatively complex route requests<br>- It
            allows the retrieval of results in a separate call (multiple downloads
            are possible).<br>- The asynchronous API is optimized for reliability
            and is not expected to run into a timeout.<br>- The number of batch
            items is limited to **700** for this API.<br><br>When you make a request
            by using async request, by default the service returns a 202 response
            code along a redirect URL in the Location field of the response header.
            This URL should be checked periodically until the response data or error
            information is available.<br>The asynchronous responses are stored for
            **14** days. The redirect URL returns a 404 response if used after the
            expiration period.<br><br>Please note that asynchronous batch request is
            a long-running operation. Here's a typical sequence of operations:<br>1.
            Client sends a Route Directions Batch `POST` request to Azure Maps<br>2.
            The server will respond with one of the following:<br><br>    > HTTP
            `202 Accepted` - Batch request has been accepted.<br><br>    > HTTP
            `Error` - There was an error processing your Batch request. This could
            either be a `400 Bad Request` or any other `Error` status
            code.<br><br>3. If the batch request was accepted successfully, the
            `Location` header in the response contains the URL to download the
            results of the batch request.<br>    This status URI looks like
            following:<br><br>``` GET
            https://atlas.microsoft.com/route/directions/batch/{batch-id}?api-version=1.0
            ```<br>Note:- Please remember to add AUTH information
            (subscription-key/azure_auth - See [Security](#security)) to the _status
            URI_ before running it. <br>4. Client issues a `GET` request on the
            _download URL_ obtained in Step 3 to download the batch
            results.<br><br>### POST Body for Batch Request<br>To send the _route
            directions_ queries you will use a `POST` request where the request body
            will contain the `batchItems` array in `json` format and the
            `Content-Type` header will be set to `application/json`. Here's a sample
            request body containing 3 _route directions_
            queries:<br><br><br>```json<br>{<br>    "batchItems": [<br>        {
            "query":
            "?query=47.620659,-122.348934:47.610101,-122.342015&travelMode=bicycle&routeType=eco&traffic=false"
            },<br>        { "query":
            "?query=40.759856,-73.985108:40.771136,-73.973506&travelMode=pedestrian&routeType=shortest"
            },<br>        { "query":
            "?query=48.923159,-122.557362:32.621279,-116.840362" }<br>   
            ]<br>}<br>```<br><br>A _route directions_ query in a batch is just a
            partial URL _without_ the protocol, base URL, path, api-version and
            subscription-key. It can accept any of the supported _route directions_
            [URI
            parameters](https://docs.microsoft.com/en-us/rest/api/maps/route/getroutedirections#uri-parameters).
            The string values in the _route directions_ query must be properly
            escaped (e.g. " character should be escaped with \\ ) and it should also
            be properly URL-encoded.<br><br><br>The async API allows caller to batch
            up to **700** queries and sync API up to **100** queries, and the batch
            should contain at least **1** query.<br><br><br>### Download
            Asynchronous Batch Results<br>To download the async batch results you
            will issue a `GET` request to the batch download endpoint. This
            _download URL_ can be obtained from the `Location` header of a
            successful `POST` batch request and looks like the
            following:<br><br>```<br>https://atlas.microsoft.com/route/directions/batch/{batch-id}?api-version=1.0&subscription-key={subscription-key}<br>```<br>Here's
            the typical sequence of operations for downloading the batch
            results:<br>1. Client sends a `GET` request using the _download
            URL_.<br>2. The server will respond with one of the following:<br>   
            <br>    > HTTP `202 Accepted` - Batch request was accepted but is still
            being processed. Please try again in some time.<br><br>    > HTTP `200
            OK` - Batch request successfully processed. The response body contains
            all the batch results.<br><br><br><br>### Batch Response Model<br>The
            returned data content is similar for async and sync requests. When
            downloading the results of an async batch request, if the batch has
            finished processing, the response body contains the batch response. This
            batch response contains a `summary` component that indicates the
            `totalRequests` that were part of the original batch request and
            `successfulRequests`i.e. queries which were executed successfully. The
            batch response also includes a `batchItems` array which contains a
            response for each and every query in the batch request. The `batchItems`
            will contain the results in the exact same order the original queries
            were sent in the batch request. Each item in `batchItems` contains
            `statusCode` and `response` fields. Each `response` in `batchItems` is
            of one of the following types:<br><br>  -
            [`RouteDirectionsResponse`](https://docs.microsoft.com/en-us/rest/api/maps/route/getroutedirections#routedirectionsresponse)
            - If the query completed successfully.<br><br>  - `Error` - If the query
            failed. The response will contain a `code` and a `message` in this
            case.<br><br><br>Here's a sample Batch Response with 1 _successful_ and
            1 _failed_ result:<br><br><br>```json<br>{<br>    "summary":
            {<br>        "successfulRequests": 1,<br>        "totalRequests":
            2<br>    },<br>    "batchItems": [<br>        {<br>           
            "statusCode": 200,<br>            "response": {<br>               
            "routes": [<br>                    {<br>                       
            "summary": {<br>                            "lengthInMeters":
            1758,<br>                            "travelTimeInSeconds":
            387,<br>                            "trafficDelayInSeconds":
            0,<br>                            "departureTime":
            "2018-07-17T00:49:56+00:00",<br>                           
            "arrivalTime": "2018-07-17T00:56:22+00:00"<br>                       
            },<br>                        "legs": [<br>                           
            {<br>                                "summary":
            {<br>                                    "lengthInMeters":
            1758,<br>                                    "travelTimeInSeconds":
            387,<br>                                    "trafficDelayInSeconds":
            0,<br>                                    "departureTime":
            "2018-07-17T00:49:56+00:00",<br>                                   
            "arrivalTime":
            "2018-07-17T00:56:22+00:00"<br>                               
            },<br>                                "points":
            [<br>                                   
            {<br>                                        "latitude":
            47.62094,<br>                                        "longitude":
            -122.34892<br>                                   
            },<br>                                   
            {<br>                                        "latitude":
            47.62094,<br>                                        "longitude":
            -122.3485<br>                                   
            },<br>                                   
            {<br>                                        "latitude":
            47.62095,<br>                                        "longitude":
            -122.3476<br>                                   
            }<br>                                ]<br>                           
            }<br>                        ],<br>                        "sections":
            [<br>                            {<br>                               
            "startPointIndex": 0,<br>                               
            "endPointIndex": 40,<br>                                "sectionType":
            "TRAVEL_MODE",<br>                                "travelMode":
            "bicycle"<br>                            }<br>                       
            ]<br>                    }<br>                ]<br>           
            }<br>        },<br>        {<br>            "statusCode":
            400,<br>            "response":<br>            {<br>               
            "error":<br>                {<br>                    "code": "400
            BadRequest",<br>                    "message": "Bad request: one or more
            parameters were incorrectly specified or are mutually
            exclusive."<br>                }<br>            }<br>        }<br>   
            ]<br>}<br>```
          operationId: microsoftAzureRoutePostroutedirectionsbatch
          responses:
            '500':
              $ref: '#/responses/500'
