apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: microsoftAzureEntityDeletebyuniqueattribute
  description: >-
    Delete an entity identified by its type and unique attributes.<br>In
    addition to the typeName path parameter, attribute key-value pair(s) can be
    provided in the following format:<br>attr:\=\.<br>NOTE: The attrName and
    attrValue should be unique across entities, eg. qualifiedName.<br>The REST
    request would look something like this:<br>DELETE
    /v2/entity/uniqueAttribute/type/aType?attr:aTypeAttribute=someValue.
  tags: []
  links:
    - title: Link
      icon: code
      url: https://example.com
spec:
  type: openapi
  lifecycle: experimental
  owner: team-c
  definition: |
    openapi: 3.1.0
    info:
      title: Delete Atlas Entity Uniqueattribute Type Typename
      description: >-
        Delete an entity identified by its type and unique attributes.<br>In
        addition to the typeName path parameter, attribute key-value pair(s) can be
        provided in the following format:<br>attr:\=\.<br>NOTE: The attrName and
        attrValue should be unique across entities, eg. qualifiedName.<br>The REST
        request would look something like this:<br>DELETE
        /v2/entity/uniqueAttribute/type/aType?attr:aTypeAttribute=someValue.
    paths:
      /atlas/v2/entity/uniqueAttribute/type/{typeName}:
        delete:
          summary: Delete Atlas Entity Uniqueattribute Type Typename
          description: >-
            Delete an entity identified by its type and unique attributes.<br>In
            addition to the typeName path parameter, attribute key-value pair(s) can
            be provided in the following format:<br>attr:\=\.<br>NOTE: The attrName
            and attrValue should be unique across entities, eg.
            qualifiedName.<br>The REST request would look something like
            this:<br>DELETE
            /v2/entity/uniqueAttribute/type/aType?attr:aTypeAttribute=someValue.
          operationId: microsoftAzureEntityDeletebyuniqueattribute
          responses:
            default:
              description: Error response describing why the operation failed.
              schema:
                $ref: '#/definitions/ErrorResponse'
