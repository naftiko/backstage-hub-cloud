apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: microsoftAzureTranslatorLanguages
  description: >-
    Gets the set of languages currently supported by other operations of the
    Translator Text API.<br>**Authentication is not required to get language
    resources.**<br><br># Response Body<br>A client uses the `scope` query
    parameter to define which groups of languages it is interested in.<br>*
    `scope=translation` provides languages supported to translate text from one
    language to another language.<br>* `scope=transliteration` provides
    capabilities for converting text in one language from one script to another
    script.<br>* `scope=dictionary` provides language pairs for which
    `Dictionary` operations return data.<br><br>A client may retrieve several
    groups simultaneously by specifying a comma-separated list of names. For
    example, `scope=translation,transliteration,dictionary` would return
    supported languages for all groups.<br><br>A successful response is a JSON
    object with one property for each requested group.<br>The value for each
    property is as follows.<br><br>* `translation` property<br>  The value of
    the `translation` property is a dictionary of (key, value) pairs. Each key
    is a BCP 47 language tag. A key identifies a language for which text can be
    translated to or translated from. The value associated with the key is a
    JSON object with properties that describe the language<br>  * `name-`
    Display name of the language in the locale requested via `Accept-Language`
    header.<br>  * `nativeName-` Display name of the language in the locale
    native for this language.<br>  * `dir-` Directionality, which is `rtl` for
    right-to-left languages or `ltr` for left-to-right
    languages.<br>```json<br>{<br>  "translation": {<br>  ...<br>  "fr": {<br> 
    "name": "French",<br>  "nativeName": "Français",<br>  "dir": "ltr"<br> 
    },<br>...<br> }<br>}<br>```<br>* `transliteration` property<br>  The value
    of the `transliteration` property is a dictionary of (key, value) pairs.
    Each key is a BCP 47 language tag. A key identifies a language for which
    text can be converted from one script to another script. The value
    associated with the key is a JSON object with properties that describe the
    language and its supported scripts<br>  * `name-` Display name of the
    language in the locale requested via `Accept-Language` header.<br>  *
    `nativeName-` Display name of the language in the locale native for this
    language.<br>  * `scripts-` List of scripts to convert from. Each element of
    the `scripts` list has properties-<br>    * `code-` Code identifying the
    script.<br>    * `name-` Display name of the script in the locale requested
    via `Accept-Language` header.<br>    * `nativeName-` Display name of the
    language in the locale native for the language.<br>    * `dir-`
    Directionality, which is `rtl` for right-to-left languages or `ltr` for
    left-to-right languages.<br>    * `toScripts-` List of scripts available to
    convert text to. Each element of the `toScripts` list has properties `code`,
    `name`, `nativeName`, and `dir` as described
    earlier.<br><br>```json<br>{<br>  "transliteration": {<br>    ...<br>   
    "ja": {<br>      "name": "Japanese",<br>      "nativeName": "日本語",<br>     
    "scripts": [<br>        {<br>          "code": "Jpan",<br>          "name":
    "Japanese",<br>          "nativeName": "日本語",<br>          "dir":
    "ltr",<br>          "toScripts": [<br>            {<br>              "code":
    "Latn",<br>              "name": "Latin",<br>              "nativeName":
    "ラテン語",<br>              "dir": "ltr"<br>            }<br>         
    ]<br>        },<br>        {<br>          "code": "Latn",<br>         
    "name": "Latin",<br>          "nativeName": "ラテン語",<br>          "dir":
    "ltr",<br>          "toScripts": [<br>          {<br>            "code":
    "Jpan",<br>            "name": "Japanese",<br>            "nativeName":
    "日本語",<br>            "dir": "ltr"<br>          }<br>          ]<br>       
    }<br>      ]<br>    },<br>  ...<br>  }<br>}<br><br>```<br>* `dictionary`
    property<br>The value of the `dictionary` property is a dictionary of (key,
    value) pairs. Each key is a BCP 47 language tag. The key identifies a
    language for which alternative translations and back-translations are
    available. The value is a JSON object that describes the source language and
    the target languages with available translations.<br>  * `name-` Display
    name of the source language in the locale requested via `Accept-Language`
    header.<br>  * `nativeName-` Display name of the language in the locale
    native for this language.<br>  * `dir-` Directionality, which is `rtl` for
    right-to-left languages or `ltr` for left-to-right languages.<br>  *
    `translations-` List of languages with alterative translations and examples
    for the query expressed in the source language. Each element of the
    `translations` list has properties<br>    * `name-` Display name of the
    target language in the locale requested via `Accept-Language` header.<br>   
    * `nativeName-` Display name of the target language in the locale native for
    the target language.<br>    * `dir-` Directionality, which is `rtl` for
    right-to-left languages or `ltr` for left-to-right languages.<br>    *
    `code-` Language code identifying the target
    language.<br><br>```json<br><br>"es": {<br>  "name": "Spanish",<br> 
    "nativeName": "Español",<br>  "dir": "ltr",<br>  "translations": [<br>   
    {<br>      "name": "English",<br>      "nativeName": "English",<br>     
    "dir": "ltr",<br>      "code": "en"<br>    }<br> 
    ]<br>},<br><br>```<br><br>The structure of the response object will not
    change without a change in the version of the API. For the same version of
    the API, the list of available languages may change over time because
    Microsoft Translator continually extends the list of languages supported by
    its services.<br><br>The list of supported languages will not change
    frequently. To save network bandwidth and improve responsiveness, a client
    application should consider caching language resources and the corresponding
    entity tag (`ETag`). Then, the client application can periodically (for
    example, once every 24 hours) query the service to fetch the latest set of
    supported languages. Passing the current `ETag` value in an `If-None-Match`
    header field will allow the service to optimize the response. If the
    resource has not been modified, the service will return status code 304 and
    an empty response body.<br> <br># Response Header<br>ETag - Current value of
    the entity tag for the requested groups of supported languages. To make
    subsequent requests more efficient, the client may send the `ETag` value in
    an `If-None-Match` header field.<br><br>X-RequestId - Value generated by the
    service to identify the request. It is used for troubleshooting purposes.
    <br>  <br>  <br>
  tags: []
  links:
    - title: Link
      icon: code
      url: https://example.com
spec:
  type: openapi
  lifecycle: experimental
  owner: team-c
  definition: |
    openapi: 3.1.0
    info:
      title: Get Languages
      description: >-
        Gets the set of languages currently supported by other operations of the
        Translator Text API.<br>**Authentication is not required to get language
        resources.**<br><br># Response Body<br>A client uses the `scope` query
        parameter to define which groups of languages it is interested in.<br>*
        `scope=translation` provides languages supported to translate text from one
        language to another language.<br>* `scope=transliteration` provides
        capabilities for converting text in one language from one script to another
        script.<br>* `scope=dictionary` provides language pairs for which
        `Dictionary` operations return data.<br><br>A client may retrieve several
        groups simultaneously by specifying a comma-separated list of names. For
        example, `scope=translation,transliteration,dictionary` would return
        supported languages for all groups.<br><br>A successful response is a JSON
        object with one property for each requested group.<br>The value for each
        property is as follows.<br><br>* `translation` property<br>  The value of
        the `translation` property is a dictionary of (key, value) pairs. Each key
        is a BCP 47 language tag. A key identifies a language for which text can be
        translated to or translated from. The value associated with the key is a
        JSON object with properties that describe the language<br>  * `name-`
        Display name of the language in the locale requested via `Accept-Language`
        header.<br>  * `nativeName-` Display name of the language in the locale
        native for this language.<br>  * `dir-` Directionality, which is `rtl` for
        right-to-left languages or `ltr` for left-to-right
        languages.<br>```json<br>{<br>  "translation": {<br>  ...<br>  "fr": {<br> 
        "name": "French",<br>  "nativeName": "Français",<br>  "dir": "ltr"<br> 
        },<br>...<br> }<br>}<br>```<br>* `transliteration` property<br>  The value
        of the `transliteration` property is a dictionary of (key, value) pairs.
        Each key is a BCP 47 language tag. A key identifies a language for which
        text can be converted from one script to another script. The value
        associated with the key is a JSON object with properties that describe the
        language and its supported scripts<br>  * `name-` Display name of the
        language in the locale requested via `Accept-Language` header.<br>  *
        `nativeName-` Display name of the language in the locale native for this
        language.<br>  * `scripts-` List of scripts to convert from. Each element of
        the `scripts` list has properties-<br>    * `code-` Code identifying the
        script.<br>    * `name-` Display name of the script in the locale requested
        via `Accept-Language` header.<br>    * `nativeName-` Display name of the
        language in the locale native for the language.<br>    * `dir-`
        Directionality, which is `rtl` for right-to-left languages or `ltr` for
        left-to-right languages.<br>    * `toScripts-` List of scripts available to
        convert text to. Each element of the `toScripts` list has properties `code`,
        `name`, `nativeName`, and `dir` as described
        earlier.<br><br>```json<br>{<br>  "transliteration": {<br>    ...<br>   
        "ja": {<br>      "name": "Japanese",<br>      "nativeName": "日本語",<br>     
        "scripts": [<br>        {<br>          "code": "Jpan",<br>          "name":
        "Japanese",<br>          "nativeName": "日本語",<br>          "dir":
        "ltr",<br>          "toScripts": [<br>            {<br>              "code":
        "Latn",<br>              "name": "Latin",<br>              "nativeName":
        "ラテン語",<br>              "dir": "ltr"<br>            }<br>         
        ]<br>        },<br>        {<br>          "code": "Latn",<br>         
        "name": "Latin",<br>          "nativeName": "ラテン語",<br>          "dir":
        "ltr",<br>          "toScripts": [<br>          {<br>            "code":
        "Jpan",<br>            "name": "Japanese",<br>            "nativeName":
        "日本語",<br>            "dir": "ltr"<br>          }<br>          ]<br>       
        }<br>      ]<br>    },<br>  ...<br>  }<br>}<br><br>```<br>* `dictionary`
        property<br>The value of the `dictionary` property is a dictionary of (key,
        value) pairs. Each key is a BCP 47 language tag. The key identifies a
        language for which alternative translations and back-translations are
        available. The value is a JSON object that describes the source language and
        the target languages with available translations.<br>  * `name-` Display
        name of the source language in the locale requested via `Accept-Language`
        header.<br>  * `nativeName-` Display name of the language in the locale
        native for this language.<br>  * `dir-` Directionality, which is `rtl` for
        right-to-left languages or `ltr` for left-to-right languages.<br>  *
        `translations-` List of languages with alterative translations and examples
        for the query expressed in the source language. Each element of the
        `translations` list has properties<br>    * `name-` Display name of the
        target language in the locale requested via `Accept-Language` header.<br>   
        * `nativeName-` Display name of the target language in the locale native for
        the target language.<br>    * `dir-` Directionality, which is `rtl` for
        right-to-left languages or `ltr` for left-to-right languages.<br>    *
        `code-` Language code identifying the target
        language.<br><br>```json<br><br>"es": {<br>  "name": "Spanish",<br> 
        "nativeName": "Español",<br>  "dir": "ltr",<br>  "translations": [<br>   
        {<br>      "name": "English",<br>      "nativeName": "English",<br>     
        "dir": "ltr",<br>      "code": "en"<br>    }<br> 
        ]<br>},<br><br>```<br><br>The structure of the response object will not
        change without a change in the version of the API. For the same version of
        the API, the list of available languages may change over time because
        Microsoft Translator continually extends the list of languages supported by
        its services.<br><br>The list of supported languages will not change
        frequently. To save network bandwidth and improve responsiveness, a client
        application should consider caching language resources and the corresponding
        entity tag (`ETag`). Then, the client application can periodically (for
        example, once every 24 hours) query the service to fetch the latest set of
        supported languages. Passing the current `ETag` value in an `If-None-Match`
        header field will allow the service to optimize the response. If the
        resource has not been modified, the service will return status code 304 and
        an empty response body.<br> <br># Response Header<br>ETag - Current value of
        the entity tag for the requested groups of supported languages. To make
        subsequent requests more efficient, the client may send the `ETag` value in
        an `If-None-Match` header field.<br><br>X-RequestId - Value generated by the
        service to identify the request. It is used for troubleshooting purposes.
        <br>  <br>  <br>
    paths:
      /Languages:
        get:
          summary: Get Languages
          description: >-
            Gets the set of languages currently supported by other operations of the
            Translator Text API.<br>**Authentication is not required to get language
            resources.**<br><br># Response Body<br>A client uses the `scope` query
            parameter to define which groups of languages it is interested in.<br>*
            `scope=translation` provides languages supported to translate text from
            one language to another language.<br>* `scope=transliteration` provides
            capabilities for converting text in one language from one script to
            another script.<br>* `scope=dictionary` provides language pairs for
            which `Dictionary` operations return data.<br><br>A client may retrieve
            several groups simultaneously by specifying a comma-separated list of
            names. For example, `scope=translation,transliteration,dictionary` would
            return supported languages for all groups.<br><br>A successful response
            is a JSON object with one property for each requested group.<br>The
            value for each property is as follows.<br><br>* `translation`
            property<br>  The value of the `translation` property is a dictionary of
            (key, value) pairs. Each key is a BCP 47 language tag. A key identifies
            a language for which text can be translated to or translated from. The
            value associated with the key is a JSON object with properties that
            describe the language<br>  * `name-` Display name of the language in the
            locale requested via `Accept-Language` header.<br>  * `nativeName-`
            Display name of the language in the locale native for this
            language.<br>  * `dir-` Directionality, which is `rtl` for right-to-left
            languages or `ltr` for left-to-right languages.<br>```json<br>{<br> 
            "translation": {<br>  ...<br>  "fr": {<br>  "name": "French",<br> 
            "nativeName": "Français",<br>  "dir": "ltr"<br>  },<br>...<br>
            }<br>}<br>```<br>* `transliteration` property<br>  The value of the
            `transliteration` property is a dictionary of (key, value) pairs. Each
            key is a BCP 47 language tag. A key identifies a language for which text
            can be converted from one script to another script. The value associated
            with the key is a JSON object with properties that describe the language
            and its supported scripts<br>  * `name-` Display name of the language in
            the locale requested via `Accept-Language` header.<br>  * `nativeName-`
            Display name of the language in the locale native for this
            language.<br>  * `scripts-` List of scripts to convert from. Each
            element of the `scripts` list has properties-<br>    * `code-` Code
            identifying the script.<br>    * `name-` Display name of the script in
            the locale requested via `Accept-Language` header.<br>    *
            `nativeName-` Display name of the language in the locale native for the
            language.<br>    * `dir-` Directionality, which is `rtl` for
            right-to-left languages or `ltr` for left-to-right languages.<br>    *
            `toScripts-` List of scripts available to convert text to. Each element
            of the `toScripts` list has properties `code`, `name`, `nativeName`, and
            `dir` as described earlier.<br><br>```json<br>{<br>  "transliteration":
            {<br>    ...<br>    "ja": {<br>      "name": "Japanese",<br>     
            "nativeName": "日本語",<br>      "scripts": [<br>        {<br>         
            "code": "Jpan",<br>          "name": "Japanese",<br>         
            "nativeName": "日本語",<br>          "dir": "ltr",<br>         
            "toScripts": [<br>            {<br>              "code":
            "Latn",<br>              "name": "Latin",<br>              "nativeName":
            "ラテン語",<br>              "dir": "ltr"<br>            }<br>         
            ]<br>        },<br>        {<br>          "code": "Latn",<br>         
            "name": "Latin",<br>          "nativeName": "ラテン語",<br>          "dir":
            "ltr",<br>          "toScripts": [<br>          {<br>            "code":
            "Jpan",<br>            "name": "Japanese",<br>            "nativeName":
            "日本語",<br>            "dir": "ltr"<br>          }<br>         
            ]<br>        }<br>      ]<br>    },<br>  ...<br>  }<br>}<br><br>```<br>*
            `dictionary` property<br>The value of the `dictionary` property is a
            dictionary of (key, value) pairs. Each key is a BCP 47 language tag. The
            key identifies a language for which alternative translations and
            back-translations are available. The value is a JSON object that
            describes the source language and the target languages with available
            translations.<br>  * `name-` Display name of the source language in the
            locale requested via `Accept-Language` header.<br>  * `nativeName-`
            Display name of the language in the locale native for this
            language.<br>  * `dir-` Directionality, which is `rtl` for right-to-left
            languages or `ltr` for left-to-right languages.<br>  * `translations-`
            List of languages with alterative translations and examples for the
            query expressed in the source language. Each element of the
            `translations` list has properties<br>    * `name-` Display name of the
            target language in the locale requested via `Accept-Language`
            header.<br>    * `nativeName-` Display name of the target language in
            the locale native for the target language.<br>    * `dir-`
            Directionality, which is `rtl` for right-to-left languages or `ltr` for
            left-to-right languages.<br>    * `code-` Language code identifying the
            target language.<br><br>```json<br><br>"es": {<br>  "name":
            "Spanish",<br>  "nativeName": "Español",<br>  "dir": "ltr",<br> 
            "translations": [<br>    {<br>      "name": "English",<br>     
            "nativeName": "English",<br>      "dir": "ltr",<br>      "code":
            "en"<br>    }<br>  ]<br>},<br><br>```<br><br>The structure of the
            response object will not change without a change in the version of the
            API. For the same version of the API, the list of available languages
            may change over time because Microsoft Translator continually extends
            the list of languages supported by its services.<br><br>The list of
            supported languages will not change frequently. To save network
            bandwidth and improve responsiveness, a client application should
            consider caching language resources and the corresponding entity tag
            (`ETag`). Then, the client application can periodically (for example,
            once every 24 hours) query the service to fetch the latest set of
            supported languages. Passing the current `ETag` value in an
            `If-None-Match` header field will allow the service to optimize the
            response. If the resource has not been modified, the service will return
            status code 304 and an empty response body.<br> <br># Response
            Header<br>ETag - Current value of the entity tag for the requested
            groups of supported languages. To make subsequent requests more
            efficient, the client may send the `ETag` value in an `If-None-Match`
            header field.<br><br>X-RequestId - Value generated by the service to
            identify the request. It is used for troubleshooting purposes. <br> 
            <br>  <br>
          operationId: microsoftAzureTranslatorLanguages
          responses:
            default:
              description: Error response.
              schema:
                $ref: '#/definitions/ErrorMessage'
