apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: microsoftAzureSearchPostsearchaddressbatch
  description: >-
    **Search Address Batch API**<br><br><br>**Applies to**: S1 pricing
    tier.<br><br><br><br>The Search Address Batch API sends batches of queries
    to [Search Address
    API](https://docs.microsoft.com/en-us/rest/api/maps/search/getsearchaddress)
    using just a single API call. You can call Search Address Batch API to run
    either asynchronously (async) or synchronously (sync). The async API allows
    caller to batch up to **10,000** queries and sync API up to **100**
    queries.<br>### Submit Synchronous Batch Request<br>The Synchronous API is
    recommended for lightweight batch requests. When the service receives a
    request, it will respond as soon as the batch items are calculated and there
    will be no possibility to retrieve the results later. The Synchronous API
    will return a timeout error (a 408 response) if the request takes longer
    than 60 seconds. The number of batch items is limited to **100** for this
    API.<br>```<br>POST
    https://atlas.microsoft.com/search/address/batch/sync/json?api-version=1.0&subscription-key={subscription-key}<br>```<br>###
    Submit Asynchronous Batch Request<br>The Asynchronous API is appropriate for
    processing big volumes of relatively complex search requests<br>- It allows
    the retrieval of results in a separate call (multiple downloads are
    possible).<br>- The asynchronous API is optimized for reliability and is not
    expected to run into a timeout.<br>- The number of batch items is limited to
    **10,000** for this API.<br><br>When you make a request by using async
    request, by default the service returns a 202 response code along a redirect
    URL in the Location field of the response header. This URL should be checked
    periodically until the response data or error information is
    available.<br>The asynchronous responses are stored for **14** days. The
    redirect URL returns a 404 response if used after the expiration
    period.<br><br>Please note that asynchronous batch request is a long-running
    operation. Here's a typical sequence of operations:<br>1. Client sends a
    Search Address Batch `POST` request to Azure Maps<br>2. The server will
    respond with one of the following:<br><br>    > HTTP `202 Accepted` - Batch
    request has been accepted.<br><br>    > HTTP `Error` - There was an error
    processing your Batch request. This could either be a `400 Bad Request` or
    any other `Error` status code.<br><br>3. If the batch request was accepted
    successfully, the `Location` header in the response contains the URL to
    download the results of the batch request.<br>    This status URI looks like
    following:<br><br>```<br>    GET
    https://atlas.microsoft.com/search/address/batch/{batch-id}?api-version=1.0&subscription-key={subscription-key}<br>```<br>4.
    Client issues a `GET` request on the _download URL_ obtained in Step 3 to
    download the batch results.<br><br>### POST Body for Batch Request<br>To
    send the _search address_ queries you will use a `POST` request where the
    request body will contain the `batchItems` array in `json` format and the
    `Content-Type` header will be set to `application/json`. Here's a sample
    request body containing 5 _search address_
    queries:<br><br><br>```json<br>{<br>    "batchItems": [<br>        {"query":
    "?query=400 Broad St, Seattle, WA 98109&limit=3"},<br>        {"query":
    "?query=One, Microsoft Way, Redmond, WA 98052&limit=3"},<br>       
    {"query": "?query=350 5th Ave, New York, NY 10118&limit=1"},<br>       
    {"query": "?query=Pike Pl, Seattle, WA
    98101&lat=47.610970&lon=-122.342469&radius=1000"},<br>        {"query":
    "?query=Champ de Mars, 5 Avenue Anatole France, 75007 Paris,
    France&limit=1"}<br>    ]<br>}<br>```<br><br>A _search address_ query in a
    batch is just a partial URL _without_ the protocol, base URL, path,
    api-version and subscription-key. It can accept any of the supported _search
    address_ [URI
    parameters](https://docs.microsoft.com/en-us/rest/api/maps/search/getsearchaddress#uri-parameters).
    The string values in the _search address_ query must be properly escaped
    (e.g. " character should be escaped with \\ ) and it should also be properly
    URL-encoded.<br><br><br>The async API allows caller to batch up to
    **10,000** queries and sync API up to **100** queries, and the batch should
    contain at least **1** query.<br><br><br>### Download Asynchronous Batch
    Results<br>To download the async batch results you will issue a `GET`
    request to the batch download endpoint. This _download URL_ can be obtained
    from the `Location` header of a successful `POST` batch request and looks
    like the
    following:<br><br>```<br>https://atlas.microsoft.com/search/address/batch/{batch-id}?api-version=1.0&subscription-key={subscription-key}<br>```<br>Here's
    the typical sequence of operations for downloading the batch results:<br>1.
    Client sends a `GET` request using the _download URL_.<br>2. The server will
    respond with one of the following:<br><br>    > HTTP `202 Accepted` - Batch
    request was accepted but is still being processed. Please try again in some
    time.<br><br>    > HTTP `200 OK` - Batch request successfully processed. The
    response body contains all the batch results.<br><br><br><br>### Batch
    Response Model<br>The returned data content is similar for async and sync
    requests. When downloading the results of an async batch request, if the
    batch has finished processing, the response body contains the batch
    response. This batch response contains a `summary` component that indicates
    the `totalRequests` that were part of the original batch request and
    `successfulRequests`i.e. queries which were executed successfully. The batch
    response also includes a `batchItems` array which contains a response for
    each and every query in the batch request. The `batchItems` will contain the
    results in the exact same order the original queries were sent in the batch
    request. Each item in `batchItems` contains `statusCode` and `response`
    fields. Each `response` in `batchItems` is of one of the following
    types:<br><br>  -
    [`SearchAddressResponse`](https://docs.microsoft.com/en-us/rest/api/maps/search/getsearchaddress#searchaddressresponse)
    - If the query completed successfully.<br><br>  - `Error` - If the query
    failed. The response will contain a `code` and a `message` in this
    case.<br><br><br>Here's a sample Batch Response with 2 _successful_ and 1
    _failed_ result:<br><br><br>```json<br>{<br>    "summary": {<br>       
    "successfulRequests": 2,<br>        "totalRequests": 3<br>    },<br>   
    "batchItems": [<br>        {<br>            "statusCode":
    200,<br>            "response":<br>            {<br>               
    "summary": {<br>                    "query": "one microsoft way redmond wa
    98052"<br>                },<br>                "results":
    [<br>                    {<br>                        "position":
    {<br>                            "lat":
    47.63989,<br>                            "lon":
    -122.12509<br>                        }<br>                   
    }<br>                ]<br>            }<br>        },<br>       
    {<br>            "statusCode": 200,<br>           
    "response":<br>            {<br>                "summary":
    {<br>                    "query": "pike pl seattle wa
    98101"<br>                },<br>                "results":
    [<br>                    {<br>                        "position":
    {<br>                            "lat":
    47.60963,<br>                            "lon":
    -122.34215<br>                        }<br>                   
    }<br>                ]<br>            }<br>        },<br>       
    {<br>            "statusCode": 400,<br>           
    "response":<br>            {<br>                "error":<br>               
    {<br>                    "code": "400 BadRequest",<br>                   
    "message": "Bad request: one or more parameters were incorrectly specified
    or are mutually exclusive."<br>                }<br>            }<br>       
    }<br>    ]<br>}<br>```
  tags: []
  links:
    - title: Link
      icon: code
      url: https://example.com
spec:
  type: openapi
  lifecycle: experimental
  owner: team-c
  definition: |
    openapi: 3.1.0
    info:
      title: Post Search Address Batch Format
      description: >-
        **Search Address Batch API**<br><br><br>**Applies to**: S1 pricing
        tier.<br><br><br><br>The Search Address Batch API sends batches of queries
        to [Search Address
        API](https://docs.microsoft.com/en-us/rest/api/maps/search/getsearchaddress)
        using just a single API call. You can call Search Address Batch API to run
        either asynchronously (async) or synchronously (sync). The async API allows
        caller to batch up to **10,000** queries and sync API up to **100**
        queries.<br>### Submit Synchronous Batch Request<br>The Synchronous API is
        recommended for lightweight batch requests. When the service receives a
        request, it will respond as soon as the batch items are calculated and there
        will be no possibility to retrieve the results later. The Synchronous API
        will return a timeout error (a 408 response) if the request takes longer
        than 60 seconds. The number of batch items is limited to **100** for this
        API.<br>```<br>POST
        https://atlas.microsoft.com/search/address/batch/sync/json?api-version=1.0&subscription-key={subscription-key}<br>```<br>###
        Submit Asynchronous Batch Request<br>The Asynchronous API is appropriate for
        processing big volumes of relatively complex search requests<br>- It allows
        the retrieval of results in a separate call (multiple downloads are
        possible).<br>- The asynchronous API is optimized for reliability and is not
        expected to run into a timeout.<br>- The number of batch items is limited to
        **10,000** for this API.<br><br>When you make a request by using async
        request, by default the service returns a 202 response code along a redirect
        URL in the Location field of the response header. This URL should be checked
        periodically until the response data or error information is
        available.<br>The asynchronous responses are stored for **14** days. The
        redirect URL returns a 404 response if used after the expiration
        period.<br><br>Please note that asynchronous batch request is a long-running
        operation. Here's a typical sequence of operations:<br>1. Client sends a
        Search Address Batch `POST` request to Azure Maps<br>2. The server will
        respond with one of the following:<br><br>    > HTTP `202 Accepted` - Batch
        request has been accepted.<br><br>    > HTTP `Error` - There was an error
        processing your Batch request. This could either be a `400 Bad Request` or
        any other `Error` status code.<br><br>3. If the batch request was accepted
        successfully, the `Location` header in the response contains the URL to
        download the results of the batch request.<br>    This status URI looks like
        following:<br><br>```<br>    GET
        https://atlas.microsoft.com/search/address/batch/{batch-id}?api-version=1.0&subscription-key={subscription-key}<br>```<br>4.
        Client issues a `GET` request on the _download URL_ obtained in Step 3 to
        download the batch results.<br><br>### POST Body for Batch Request<br>To
        send the _search address_ queries you will use a `POST` request where the
        request body will contain the `batchItems` array in `json` format and the
        `Content-Type` header will be set to `application/json`. Here's a sample
        request body containing 5 _search address_
        queries:<br><br><br>```json<br>{<br>    "batchItems": [<br>        {"query":
        "?query=400 Broad St, Seattle, WA 98109&limit=3"},<br>        {"query":
        "?query=One, Microsoft Way, Redmond, WA 98052&limit=3"},<br>       
        {"query": "?query=350 5th Ave, New York, NY 10118&limit=1"},<br>       
        {"query": "?query=Pike Pl, Seattle, WA
        98101&lat=47.610970&lon=-122.342469&radius=1000"},<br>        {"query":
        "?query=Champ de Mars, 5 Avenue Anatole France, 75007 Paris,
        France&limit=1"}<br>    ]<br>}<br>```<br><br>A _search address_ query in a
        batch is just a partial URL _without_ the protocol, base URL, path,
        api-version and subscription-key. It can accept any of the supported _search
        address_ [URI
        parameters](https://docs.microsoft.com/en-us/rest/api/maps/search/getsearchaddress#uri-parameters).
        The string values in the _search address_ query must be properly escaped
        (e.g. " character should be escaped with \\ ) and it should also be properly
        URL-encoded.<br><br><br>The async API allows caller to batch up to
        **10,000** queries and sync API up to **100** queries, and the batch should
        contain at least **1** query.<br><br><br>### Download Asynchronous Batch
        Results<br>To download the async batch results you will issue a `GET`
        request to the batch download endpoint. This _download URL_ can be obtained
        from the `Location` header of a successful `POST` batch request and looks
        like the
        following:<br><br>```<br>https://atlas.microsoft.com/search/address/batch/{batch-id}?api-version=1.0&subscription-key={subscription-key}<br>```<br>Here's
        the typical sequence of operations for downloading the batch results:<br>1.
        Client sends a `GET` request using the _download URL_.<br>2. The server will
        respond with one of the following:<br><br>    > HTTP `202 Accepted` - Batch
        request was accepted but is still being processed. Please try again in some
        time.<br><br>    > HTTP `200 OK` - Batch request successfully processed. The
        response body contains all the batch results.<br><br><br><br>### Batch
        Response Model<br>The returned data content is similar for async and sync
        requests. When downloading the results of an async batch request, if the
        batch has finished processing, the response body contains the batch
        response. This batch response contains a `summary` component that indicates
        the `totalRequests` that were part of the original batch request and
        `successfulRequests`i.e. queries which were executed successfully. The batch
        response also includes a `batchItems` array which contains a response for
        each and every query in the batch request. The `batchItems` will contain the
        results in the exact same order the original queries were sent in the batch
        request. Each item in `batchItems` contains `statusCode` and `response`
        fields. Each `response` in `batchItems` is of one of the following
        types:<br><br>  -
        [`SearchAddressResponse`](https://docs.microsoft.com/en-us/rest/api/maps/search/getsearchaddress#searchaddressresponse)
        - If the query completed successfully.<br><br>  - `Error` - If the query
        failed. The response will contain a `code` and a `message` in this
        case.<br><br><br>Here's a sample Batch Response with 2 _successful_ and 1
        _failed_ result:<br><br><br>```json<br>{<br>    "summary": {<br>       
        "successfulRequests": 2,<br>        "totalRequests": 3<br>    },<br>   
        "batchItems": [<br>        {<br>            "statusCode":
        200,<br>            "response":<br>            {<br>               
        "summary": {<br>                    "query": "one microsoft way redmond wa
        98052"<br>                },<br>                "results":
        [<br>                    {<br>                        "position":
        {<br>                            "lat":
        47.63989,<br>                            "lon":
        -122.12509<br>                        }<br>                   
        }<br>                ]<br>            }<br>        },<br>       
        {<br>            "statusCode": 200,<br>           
        "response":<br>            {<br>                "summary":
        {<br>                    "query": "pike pl seattle wa
        98101"<br>                },<br>                "results":
        [<br>                    {<br>                        "position":
        {<br>                            "lat":
        47.60963,<br>                            "lon":
        -122.34215<br>                        }<br>                   
        }<br>                ]<br>            }<br>        },<br>       
        {<br>            "statusCode": 400,<br>           
        "response":<br>            {<br>                "error":<br>               
        {<br>                    "code": "400 BadRequest",<br>                   
        "message": "Bad request: one or more parameters were incorrectly specified
        or are mutually exclusive."<br>                }<br>            }<br>       
        }<br>    ]<br>}<br>```
    paths:
      /search/address/batch/{format}:
        post:
          summary: Post Search Address Batch Format
          description: >-
            **Search Address Batch API**<br><br><br>**Applies to**: S1 pricing
            tier.<br><br><br><br>The Search Address Batch API sends batches of
            queries to [Search Address
            API](https://docs.microsoft.com/en-us/rest/api/maps/search/getsearchaddress)
            using just a single API call. You can call Search Address Batch API to
            run either asynchronously (async) or synchronously (sync). The async API
            allows caller to batch up to **10,000** queries and sync API up to
            **100** queries.<br>### Submit Synchronous Batch Request<br>The
            Synchronous API is recommended for lightweight batch requests. When the
            service receives a request, it will respond as soon as the batch items
            are calculated and there will be no possibility to retrieve the results
            later. The Synchronous API will return a timeout error (a 408 response)
            if the request takes longer than 60 seconds. The number of batch items
            is limited to **100** for this API.<br>```<br>POST
            https://atlas.microsoft.com/search/address/batch/sync/json?api-version=1.0&subscription-key={subscription-key}<br>```<br>###
            Submit Asynchronous Batch Request<br>The Asynchronous API is appropriate
            for processing big volumes of relatively complex search requests<br>- It
            allows the retrieval of results in a separate call (multiple downloads
            are possible).<br>- The asynchronous API is optimized for reliability
            and is not expected to run into a timeout.<br>- The number of batch
            items is limited to **10,000** for this API.<br><br>When you make a
            request by using async request, by default the service returns a 202
            response code along a redirect URL in the Location field of the response
            header. This URL should be checked periodically until the response data
            or error information is available.<br>The asynchronous responses are
            stored for **14** days. The redirect URL returns a 404 response if used
            after the expiration period.<br><br>Please note that asynchronous batch
            request is a long-running operation. Here's a typical sequence of
            operations:<br>1. Client sends a Search Address Batch `POST` request to
            Azure Maps<br>2. The server will respond with one of the
            following:<br><br>    > HTTP `202 Accepted` - Batch request has been
            accepted.<br><br>    > HTTP `Error` - There was an error processing your
            Batch request. This could either be a `400 Bad Request` or any other
            `Error` status code.<br><br>3. If the batch request was accepted
            successfully, the `Location` header in the response contains the URL to
            download the results of the batch request.<br>    This status URI looks
            like following:<br><br>```<br>    GET
            https://atlas.microsoft.com/search/address/batch/{batch-id}?api-version=1.0&subscription-key={subscription-key}<br>```<br>4.
            Client issues a `GET` request on the _download URL_ obtained in Step 3
            to download the batch results.<br><br>### POST Body for Batch
            Request<br>To send the _search address_ queries you will use a `POST`
            request where the request body will contain the `batchItems` array in
            `json` format and the `Content-Type` header will be set to
            `application/json`. Here's a sample request body containing 5 _search
            address_ queries:<br><br><br>```json<br>{<br>    "batchItems":
            [<br>        {"query": "?query=400 Broad St, Seattle, WA
            98109&limit=3"},<br>        {"query": "?query=One, Microsoft Way,
            Redmond, WA 98052&limit=3"},<br>        {"query": "?query=350 5th Ave,
            New York, NY 10118&limit=1"},<br>        {"query": "?query=Pike Pl,
            Seattle, WA
            98101&lat=47.610970&lon=-122.342469&radius=1000"},<br>        {"query":
            "?query=Champ de Mars, 5 Avenue Anatole France, 75007 Paris,
            France&limit=1"}<br>    ]<br>}<br>```<br><br>A _search address_ query in
            a batch is just a partial URL _without_ the protocol, base URL, path,
            api-version and subscription-key. It can accept any of the supported
            _search address_ [URI
            parameters](https://docs.microsoft.com/en-us/rest/api/maps/search/getsearchaddress#uri-parameters).
            The string values in the _search address_ query must be properly escaped
            (e.g. " character should be escaped with \\ ) and it should also be
            properly URL-encoded.<br><br><br>The async API allows caller to batch up
            to **10,000** queries and sync API up to **100** queries, and the batch
            should contain at least **1** query.<br><br><br>### Download
            Asynchronous Batch Results<br>To download the async batch results you
            will issue a `GET` request to the batch download endpoint. This
            _download URL_ can be obtained from the `Location` header of a
            successful `POST` batch request and looks like the
            following:<br><br>```<br>https://atlas.microsoft.com/search/address/batch/{batch-id}?api-version=1.0&subscription-key={subscription-key}<br>```<br>Here's
            the typical sequence of operations for downloading the batch
            results:<br>1. Client sends a `GET` request using the _download
            URL_.<br>2. The server will respond with one of the
            following:<br><br>    > HTTP `202 Accepted` - Batch request was accepted
            but is still being processed. Please try again in some time.<br><br>   
            > HTTP `200 OK` - Batch request successfully processed. The response
            body contains all the batch results.<br><br><br><br>### Batch Response
            Model<br>The returned data content is similar for async and sync
            requests. When downloading the results of an async batch request, if the
            batch has finished processing, the response body contains the batch
            response. This batch response contains a `summary` component that
            indicates the `totalRequests` that were part of the original batch
            request and `successfulRequests`i.e. queries which were executed
            successfully. The batch response also includes a `batchItems` array
            which contains a response for each and every query in the batch request.
            The `batchItems` will contain the results in the exact same order the
            original queries were sent in the batch request. Each item in
            `batchItems` contains `statusCode` and `response` fields. Each
            `response` in `batchItems` is of one of the following types:<br><br>  -
            [`SearchAddressResponse`](https://docs.microsoft.com/en-us/rest/api/maps/search/getsearchaddress#searchaddressresponse)
            - If the query completed successfully.<br><br>  - `Error` - If the query
            failed. The response will contain a `code` and a `message` in this
            case.<br><br><br>Here's a sample Batch Response with 2 _successful_ and
            1 _failed_ result:<br><br><br>```json<br>{<br>    "summary":
            {<br>        "successfulRequests": 2,<br>        "totalRequests":
            3<br>    },<br>    "batchItems": [<br>        {<br>           
            "statusCode": 200,<br>            "response":<br>           
            {<br>                "summary": {<br>                    "query": "one
            microsoft way redmond wa 98052"<br>                },<br>               
            "results": [<br>                    {<br>                       
            "position": {<br>                            "lat":
            47.63989,<br>                            "lon":
            -122.12509<br>                        }<br>                   
            }<br>                ]<br>            }<br>        },<br>       
            {<br>            "statusCode": 200,<br>           
            "response":<br>            {<br>                "summary":
            {<br>                    "query": "pike pl seattle wa
            98101"<br>                },<br>                "results":
            [<br>                    {<br>                        "position":
            {<br>                            "lat":
            47.60963,<br>                            "lon":
            -122.34215<br>                        }<br>                   
            }<br>                ]<br>            }<br>        },<br>       
            {<br>            "statusCode": 400,<br>           
            "response":<br>            {<br>               
            "error":<br>                {<br>                    "code": "400
            BadRequest",<br>                    "message": "Bad request: one or more
            parameters were incorrectly specified or are mutually
            exclusive."<br>                }<br>            }<br>        }<br>   
            ]<br>}<br>```
          operationId: microsoftAzureSearchPostsearchaddressbatch
          responses:
            '500':
              $ref: '#/responses/500'
