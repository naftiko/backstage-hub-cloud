apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: microsoftAzureBatchDeletepool
  description: >-
    When you request that a Pool be deleted, the following actions occur: the
    Pool<br>state is set to deleting; any ongoing resize operation on the Pool
    are stopped;<br>the Batch service starts resizing the Pool to zero Compute
    Nodes; any Tasks<br>running on existing Compute Nodes are terminated and
    requeued (as if a resize<br>Pool operation had been requested with the
    default requeue option); finally,<br>the Pool is removed from the system.
    Because running Tasks are requeued, the<br>user can rerun these Tasks by
    updating their Job to target a different Pool.<br>The Tasks can then run on
    the new Pool. If you want to override the requeue<br>behavior, then you
    should call resize Pool explicitly to shrink the Pool to<br>zero size before
    deleting the Pool. If you call an Update, Patch or Delete API<br>on a Pool
    in the deleting state, it will fail with HTTP status code 409 with<br>error
    code PoolBeingDeleted.
  tags: []
  links:
    - title: Link
      icon: code
      url: https://example.com
spec:
  type: openapi
  lifecycle: experimental
  owner: team-c
  definition: |
    openapi: 3.1.0
    info:
      title: 'Deletes A Pool From The Specified Account '
      description: >-
        When you request that a Pool be deleted, the following actions occur: the
        Pool<br>state is set to deleting; any ongoing resize operation on the Pool
        are stopped;<br>the Batch service starts resizing the Pool to zero Compute
        Nodes; any Tasks<br>running on existing Compute Nodes are terminated and
        requeued (as if a resize<br>Pool operation had been requested with the
        default requeue option); finally,<br>the Pool is removed from the system.
        Because running Tasks are requeued, the<br>user can rerun these Tasks by
        updating their Job to target a different Pool.<br>The Tasks can then run on
        the new Pool. If you want to override the requeue<br>behavior, then you
        should call resize Pool explicitly to shrink the Pool to<br>zero size before
        deleting the Pool. If you call an Update, Patch or Delete API<br>on a Pool
        in the deleting state, it will fail with HTTP status code 409 with<br>error
        code PoolBeingDeleted.
    paths:
      /pools/{poolId}:
        delete:
          summary: 'Deletes A Pool From The Specified Account '
          description: >-
            When you request that a Pool be deleted, the following actions occur:
            the Pool<br>state is set to deleting; any ongoing resize operation on
            the Pool are stopped;<br>the Batch service starts resizing the Pool to
            zero Compute Nodes; any Tasks<br>running on existing Compute Nodes are
            terminated and requeued (as if a resize<br>Pool operation had been
            requested with the default requeue option); finally,<br>the Pool is
            removed from the system. Because running Tasks are requeued, the<br>user
            can rerun these Tasks by updating their Job to target a different
            Pool.<br>The Tasks can then run on the new Pool. If you want to override
            the requeue<br>behavior, then you should call resize Pool explicitly to
            shrink the Pool to<br>zero size before deleting the Pool. If you call an
            Update, Patch or Delete API<br>on a Pool in the deleting state, it will
            fail with HTTP status code 409 with<br>error code PoolBeingDeleted.
          operationId: microsoftAzureBatchDeletepool
          responses:
            default:
              description: An unexpected error response.
              schema:
                $ref: '#/definitions/BatchError'
