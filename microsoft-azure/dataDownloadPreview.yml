apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: >-
    The Download Request Allows The Caller To Download Data Previously Uploaded
    Using [data Upload](/rest/api/maps/data/upload-preview?view=rest-maps-1.0).
  description: >-
    **Applies to:** S1 pricing tier.This API allows the caller to download a
    previously uploaded data content.You can use this API in a scenario like
    downloading an existing collection of geofences uploaded previously using
    the [Data Upload API](/rest/api/maps/data/upload?view=rest-maps-1.0) for use
    in our [Azure Maps Geofencing Service](/rest/api/maps/spatial).> [!NOTE]>>
    **Azure Maps Data service retirement**>> The Azure Maps Data service (both
    [v1](/rest/api/maps/data?view=rest-maps-1.0) and [v2](/rest/api/maps/data))
    is now deprecated and will be retired on 9/16/24. To avoid service
    disruptions, all calls to the Data service will need to be updated to use
    the Azure Maps [Data Registry](/rest/api/maps/data-registry) service by
    9/16/24. For more information, see [How to create data
    registry](/azure/azure-maps/how-to-create-data-registries).### Submit
    Download RequestTo download your content you will use a `GET` request where
    the path will contain the `udid` of the data to download. Optionally, you
    can also pass in an `Accept` header to specify a preference for the
    `Content-Type` of the data response. For example, to download a collection
    of geofences previously uploaded using the Upload API, set the `udid`
    parameter in the path to the `udid` of the data received previously in the
    upload API response and set the `Accept` header to either one of the
    following media types:       - `application/json`  -
    `application/vnd.geo+json`  - `application/octet-stream`### Download Data
    ResponseThe Download API will return a HTTP `200 OK` response if the data
    resource with the passed-in `udid` is found, where the response body will
    contain the content of the data resource.A HTTP `400 Bad Request` error
    response will be returned if the data resource with the passed-in `udid` is
    not found.Here's a sample response body for a simple geofence represented in
    `GeoJSON` uploaded previously using the Upload API:```json{    "type":
    "FeatureCollection",    "features": [{        "type": "Feature",       
    "geometry": {            "type": "Point",            "coordinates":
    [-122.126986, 47.639754]        },        "properties": {           
    "geometryId": "001",            "radius": 500        }    }]}```
  tags: []
  links:
    - title: Link
      icon: code
      url: https://example.com
spec:
  type: openapi
  lifecycle: experimental
  owner: team-c
  definition: |
    openapi: 3.1.0
    info:
      title: >-
        The Download Request Allows The Caller To Download Data Previously Uploaded
        Using [data Upload](/rest/api/maps/data/upload-preview?view=rest-maps-1.0).
      description: >-
        **Applies to:** S1 pricing tier.This API allows the caller to download a
        previously uploaded data content.You can use this API in a scenario like
        downloading an existing collection of geofences uploaded previously using
        the [Data Upload API](/rest/api/maps/data/upload?view=rest-maps-1.0) for use
        in our [Azure Maps Geofencing Service](/rest/api/maps/spatial).> [!NOTE]>>
        **Azure Maps Data service retirement**>> The Azure Maps Data service (both
        [v1](/rest/api/maps/data?view=rest-maps-1.0) and [v2](/rest/api/maps/data))
        is now deprecated and will be retired on 9/16/24. To avoid service
        disruptions, all calls to the Data service will need to be updated to use
        the Azure Maps [Data Registry](/rest/api/maps/data-registry) service by
        9/16/24. For more information, see [How to create data
        registry](/azure/azure-maps/how-to-create-data-registries).### Submit
        Download RequestTo download your content you will use a `GET` request where
        the path will contain the `udid` of the data to download. Optionally, you
        can also pass in an `Accept` header to specify a preference for the
        `Content-Type` of the data response. For example, to download a collection
        of geofences previously uploaded using the Upload API, set the `udid`
        parameter in the path to the `udid` of the data received previously in the
        upload API response and set the `Accept` header to either one of the
        following media types:       - `application/json`  -
        `application/vnd.geo+json`  - `application/octet-stream`### Download Data
        ResponseThe Download API will return a HTTP `200 OK` response if the data
        resource with the passed-in `udid` is found, where the response body will
        contain the content of the data resource.A HTTP `400 Bad Request` error
        response will be returned if the data resource with the passed-in `udid` is
        not found.Here's a sample response body for a simple geofence represented in
        `GeoJSON` uploaded previously using the Upload API:```json{    "type":
        "FeatureCollection",    "features": [{        "type": "Feature",       
        "geometry": {            "type": "Point",            "coordinates":
        [-122.126986, 47.639754]        },        "properties": {           
        "geometryId": "001",            "radius": 500        }    }]}```
    paths:
      /mapData/{udid}:
        get:
          summary: >-
            The Download Request Allows The Caller To Download Data Previously
            Uploaded Using [data
            Upload](/rest/api/maps/data/upload-preview?view=rest-maps-1.0).
          description: >-
            **Applies to:** S1 pricing tier.This API allows the caller to download a
            previously uploaded data content.You can use this API in a scenario like
            downloading an existing collection of geofences uploaded previously
            using the [Data Upload
            API](/rest/api/maps/data/upload?view=rest-maps-1.0) for use in our
            [Azure Maps Geofencing Service](/rest/api/maps/spatial).> [!NOTE]>>
            **Azure Maps Data service retirement**>> The Azure Maps Data service
            (both [v1](/rest/api/maps/data?view=rest-maps-1.0) and
            [v2](/rest/api/maps/data)) is now deprecated and will be retired on
            9/16/24. To avoid service disruptions, all calls to the Data service
            will need to be updated to use the Azure Maps [Data
            Registry](/rest/api/maps/data-registry) service by 9/16/24. For more
            information, see [How to create data
            registry](/azure/azure-maps/how-to-create-data-registries).### Submit
            Download RequestTo download your content you will use a `GET` request
            where the path will contain the `udid` of the data to download.
            Optionally, you can also pass in an `Accept` header to specify a
            preference for the `Content-Type` of the data response. For example, to
            download a collection of geofences previously uploaded using the Upload
            API, set the `udid` parameter in the path to the `udid` of the data
            received previously in the upload API response and set the `Accept`
            header to either one of the following media types:       -
            `application/json`  - `application/vnd.geo+json`  -
            `application/octet-stream`### Download Data ResponseThe Download API
            will return a HTTP `200 OK` response if the data resource with the
            passed-in `udid` is found, where the response body will contain the
            content of the data resource.A HTTP `400 Bad Request` error response
            will be returned if the data resource with the passed-in `udid` is not
            found.Here's a sample response body for a simple geofence represented in
            `GeoJSON` uploaded previously using the Upload API:```json{    "type":
            "FeatureCollection",    "features": [{        "type": "Feature",       
            "geometry": {            "type": "Point",            "coordinates":
            [-122.126986, 47.639754]        },        "properties": {           
            "geometryId": "001",            "radius": 500        }    }]}```
          operationId: dataDownloadPreview
          responses:
            '500':
              $ref: '#/responses/500'
