apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: >-
    the-upload-request-allows-the-caller-to-upload-data-content-to-their-azure-maps-account
  description: >-
    **Applies to:** S1 pricing tier.The Data Upload API allows the caller to
    upload data content to the Azure Maps service.You can use this API in a
    scenario like uploading a collection of Geofences in `GeoJSON` format, for
    use in our [Azure Maps Geofencing Service](/rest/api/maps/spatial).>
    [!NOTE]>> **Azure Maps Data service retirement**>> The Azure Maps Data
    service (both [v1](/rest/api/maps/data?view=rest-maps-1.0) and
    [v2](/rest/api/maps/data)) is now deprecated and will be retired on 9/16/24.
    To avoid service disruptions, all calls to the Data service will need to be
    updated to use the Azure Maps [Data Registry](/rest/api/maps/data-registry)
    service by 9/16/24. For more information, see [How to create data
    registry](/azure/azure-maps/how-to-create-data-registries).## Submit Upload
    RequestTo upload your content you will use a `POST` request. The request
    body will contain the data to upload. The `Content-Type` header will be set
    to the content type of the data.For example, to upload a collection of
    geofences  in `GeoJSON` format, set the request body to the geofence
    content. Set the `dataFormat` query parameter to _geojson_, and set the
    `Content-Type` header to either one of the following media types:-
    `application/json`- `application/vnd.geo+json`-
    `application/octet-stream`Here's a sample request body for uploading a
    simple Geofence represented as a circle geometry using a center point and a
    radius. The sample below is in `GeoJSON`:```json{    "type":
    "FeatureCollection",    "features": [{        "type": "Feature",       
    "geometry": {            "type": "Point",            "coordinates":
    [-122.126986, 47.639754]        },        "properties": {           
    "geometryId": "001",            "radius": 500        }    }]}```The Data
    Upload API performs a long-running operation.## Data Upload LimitsPlease, be
    aware that currently every Azure Maps account has a [data storage
    limit](/azure/azure-resource-manager/management/azure-subscription-service-limits#azure-maps-limits).
    Once the storage limit is reached, all the new upload API calls will return
    a `409 Conflict` http error response. You can always use the [Data Delete
    API](/rest/api/maps/data/delete?view=rest-maps-1.0) to delete old/unused
    content and create space for new uploads.
  tags: []
  links:
    - title: Link
      icon: code
      url: https://example.com
spec:
  type: openapi
  lifecycle: experimental
  owner: team-c
  definition: |
    openapi: 3.1.0
    info:
      title: >-
        The Upload Request Allows The Caller To Upload Data Content To Their Azure
        Maps Account.
      description: >-
        **Applies to:** S1 pricing tier.The Data Upload API allows the caller to
        upload data content to the Azure Maps service.You can use this API in a
        scenario like uploading a collection of Geofences in `GeoJSON` format, for
        use in our [Azure Maps Geofencing Service](/rest/api/maps/spatial).>
        [!NOTE]>> **Azure Maps Data service retirement**>> The Azure Maps Data
        service (both [v1](/rest/api/maps/data?view=rest-maps-1.0) and
        [v2](/rest/api/maps/data)) is now deprecated and will be retired on 9/16/24.
        To avoid service disruptions, all calls to the Data service will need to be
        updated to use the Azure Maps [Data Registry](/rest/api/maps/data-registry)
        service by 9/16/24. For more information, see [How to create data
        registry](/azure/azure-maps/how-to-create-data-registries).## Submit Upload
        RequestTo upload your content you will use a `POST` request. The request
        body will contain the data to upload. The `Content-Type` header will be set
        to the content type of the data.For example, to upload a collection of
        geofences  in `GeoJSON` format, set the request body to the geofence
        content. Set the `dataFormat` query parameter to _geojson_, and set the
        `Content-Type` header to either one of the following media types:-
        `application/json`- `application/vnd.geo+json`-
        `application/octet-stream`Here's a sample request body for uploading a
        simple Geofence represented as a circle geometry using a center point and a
        radius. The sample below is in `GeoJSON`:```json{    "type":
        "FeatureCollection",    "features": [{        "type": "Feature",       
        "geometry": {            "type": "Point",            "coordinates":
        [-122.126986, 47.639754]        },        "properties": {           
        "geometryId": "001",            "radius": 500        }    }]}```The Data
        Upload API performs a long-running operation.## Data Upload LimitsPlease, be
        aware that currently every Azure Maps account has a [data storage
        limit](/azure/azure-resource-manager/management/azure-subscription-service-limits#azure-maps-limits).
        Once the storage limit is reached, all the new upload API calls will return
        a `409 Conflict` http error response. You can always use the [Data Delete
        API](/rest/api/maps/data/delete?view=rest-maps-1.0) to delete old/unused
        content and create space for new uploads.
    paths:
      /mapData/upload:
        post:
          summary: >-
            The Upload Request Allows The Caller To Upload Data Content To Their
            Azure Maps Account.
          description: >-
            **Applies to:** S1 pricing tier.The Data Upload API allows the caller to
            upload data content to the Azure Maps service.You can use this API in a
            scenario like uploading a collection of Geofences in `GeoJSON` format,
            for use in our [Azure Maps Geofencing Service](/rest/api/maps/spatial).>
            [!NOTE]>> **Azure Maps Data service retirement**>> The Azure Maps Data
            service (both [v1](/rest/api/maps/data?view=rest-maps-1.0) and
            [v2](/rest/api/maps/data)) is now deprecated and will be retired on
            9/16/24. To avoid service disruptions, all calls to the Data service
            will need to be updated to use the Azure Maps [Data
            Registry](/rest/api/maps/data-registry) service by 9/16/24. For more
            information, see [How to create data
            registry](/azure/azure-maps/how-to-create-data-registries).## Submit
            Upload RequestTo upload your content you will use a `POST` request. The
            request body will contain the data to upload. The `Content-Type` header
            will be set to the content type of the data.For example, to upload a
            collection of geofences  in `GeoJSON` format, set the request body to
            the geofence content. Set the `dataFormat` query parameter to _geojson_,
            and set the `Content-Type` header to either one of the following media
            types:- `application/json`- `application/vnd.geo+json`-
            `application/octet-stream`Here's a sample request body for uploading a
            simple Geofence represented as a circle geometry using a center point
            and a radius. The sample below is in `GeoJSON`:```json{    "type":
            "FeatureCollection",    "features": [{        "type": "Feature",       
            "geometry": {            "type": "Point",            "coordinates":
            [-122.126986, 47.639754]        },        "properties": {           
            "geometryId": "001",            "radius": 500        }    }]}```The Data
            Upload API performs a long-running operation.## Data Upload
            LimitsPlease, be aware that currently every Azure Maps account has a
            [data storage
            limit](/azure/azure-resource-manager/management/azure-subscription-service-limits#azure-maps-limits).
            Once the storage limit is reached, all the new upload API calls will
            return a `409 Conflict` http error response. You can always use the
            [Data Delete API](/rest/api/maps/data/delete?view=rest-maps-1.0) to
            delete old/unused content and create space for new uploads.
          operationId: dataUploadPreview
          responses:
            '500':
              $ref: '#/responses/500'
