apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: Post Models Model Analyze
  description: >-
    This operation recognizes content within an image by applying a
    domain-specific model.  The list of domain-specific models that are
    supported by the Computer Vision API can be retrieved using the /models GET
    request.  Currently, the API only provides a single domain-specific model:
    celebrities. Two input methods are supported -- (1) Uploading an image or
    (2) specifying an image URL. A successful response will be returned in
    JSON.  If the request failed, the response will contain an error code and a
    message to help understand what went wrong.
  tags: []
  links:
    - title: Link
      icon: code
      url: https://example.com
spec:
  type: openapi
  lifecycle: experimental
  owner: team-c
  definition: |
    openapi: 3.1.0
    info:
      title: Post Models Model Analyze
      description: >-
        This operation recognizes content within an image by applying a
        domain-specific model.  The list of domain-specific models that are
        supported by the Computer Vision API can be retrieved using the /models GET
        request.  Currently, the API only provides a single domain-specific model:
        celebrities. Two input methods are supported -- (1) Uploading an image or
        (2) specifying an image URL. A successful response will be returned in
        JSON.  If the request failed, the response will contain an error code and a
        message to help understand what went wrong.
    paths:
      /models/{model}/analyze:
        post:
          summary: Post Models Model Analyze
          description: >-
            This operation recognizes content within an image by applying a
            domain-specific model.  The list of domain-specific models that are
            supported by the Computer Vision API can be retrieved using the /models
            GET request.  Currently, the API only provides a single domain-specific
            model: celebrities. Two input methods are supported -- (1) Uploading an
            image or (2) specifying an image URL. A successful response will be
            returned in JSON.  If the request failed, the response will contain an
            error code and a message to help understand what went wrong.
          operationId: analyzeImageByDomain
          responses:
            default:
              description: Error response.
              schema:
                $ref: '#/definitions/ComputerVisionError'
