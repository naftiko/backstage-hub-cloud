apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: >-
    Stops Chaos If It Is Running In The Cluster And Put The Chaos Schedule In A
    Stopped State.
  description: >-
    Stops Chaos from executing new faults. In-flight faults will continue to
    execute until they are complete. The current Chaos Schedule is put into a
    stopped state.Once a schedule is stopped, it will stay in the stopped state
    and not be used to Chaos Schedule new runs of Chaos. A new Chaos Schedule
    must be set in order to resume scheduling.
  tags: []
  links:
    - title: Link
      icon: code
      url: https://example.com
spec:
  type: openapi
  lifecycle: experimental
  owner: team-c
  definition: |
    openapi: 3.1.0
    info:
      title: >-
        Stops Chaos If It Is Running In The Cluster And Put The Chaos Schedule In A
        Stopped State.
      description: >-
        Stops Chaos from executing new faults. In-flight faults will continue to
        execute until they are complete. The current Chaos Schedule is put into a
        stopped state.Once a schedule is stopped, it will stay in the stopped state
        and not be used to Chaos Schedule new runs of Chaos. A new Chaos Schedule
        must be set in order to resume scheduling.
    paths:
      /Tools/Chaos/$/Stop:
        post:
          summary: >-
            Stops Chaos If It Is Running In The Cluster And Put The Chaos Schedule
            In A Stopped State.
          description: >-
            Stops Chaos from executing new faults. In-flight faults will continue to
            execute until they are complete. The current Chaos Schedule is put into
            a stopped state.Once a schedule is stopped, it will stay in the stopped
            state and not be used to Chaos Schedule new runs of Chaos. A new Chaos
            Schedule must be set in order to resume scheduling.
          operationId: stopChaos
          responses:
            default:
              description: The detailed error response.
              schema:
                $ref: '#/definitions/FabricError'
