apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: Post Chat.delete
  description: Deletes a message.
  tags: []
  links:
    - title: Link
      icon: code
      url: https://example.com
spec:
  type: openapi
  lifecycle: experimental
  owner: team-c
  definition: |
    openapi: 3.1.0
    info:
      title: Post Chat.delete
      description: Deletes a message.
    paths:
      /chat.delete:
        post:
          summary: Post Chat.delete
          description: Deletes a message.
          operationId: chatdelete
          requestBody:
            content:
              application/x-www-form-urlencoded:
                schema:
                  type: object
                  properties:
                    ts:
                      type: number
                      description: Timestamp of the message to be deleted.
                    channel:
                      type: string
                      description: Channel containing the message to be deleted.
                    as_user:
                      type: boolean
                      description: >-
                        Pass true to delete the message as the authed user with
                        `chat:write:user` scope. [Bot users](/bot-users) in this
                        context are considered authed users. If unused or false, the
                        message will be deleted with `chat:write:bot` scope.
              application/json:
                schema:
                  type: object
                  properties:
                    ts:
                      type: number
                      description: Timestamp of the message to be deleted.
                    channel:
                      type: string
                      description: Channel containing the message to be deleted.
                    as_user:
                      type: boolean
                      description: >-
                        Pass true to delete the message as the authed user with
                        `chat:write:user` scope. [Bot users](/bot-users) in this
                        context are considered authed users. If unused or false, the
                        message will be deleted with `chat:write:bot` scope.
          responses:
            default:
              description: Typical error response
              content:
                application/json:
                  schema:
                    title: chat.delete error schema
                    required:
                      - error
                      - ok
                    type: object
                    properties:
                      callstack:
                        type: string
                        description: 'Note: PHP callstack is only visible in dev/qa'
                      error:
                        type: string
                        enum:
                          - message_not_found
                          - channel_not_found
                          - cant_delete_message
                          - compliance_exports_prevent_deletion
                          - not_authed
                          - invalid_auth
                          - account_inactive
                          - token_revoked
                          - no_permission
                          - invalid_arg_name
                          - invalid_array_arg
                          - invalid_charset
                          - invalid_form_data
                          - invalid_post_type
                          - missing_post_type
                          - team_added_to_org
                          - invalid_json
                          - json_not_object
                          - request_timeout
                          - upgrade_required
                          - fatal_error
                      ok:
                        $ref: '#/components/schemas/defs_ok_false'
                    additionalProperties: false
                    description: Schema for error response from chat.delete method
                  example:
                    error: message_not_found
                    ok: false
